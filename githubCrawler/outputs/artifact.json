{
  "rust:syn": {
    "coordinates": "rust:syn",
    "name": "syn",
    "description": "Parser for Rust source code",
    "license": [""],
    "tags": ["macros", "syn"],
    "downloads": 441488740,
    "repositories": ["crates.io"]
  },
  "rust:proc-macro2": {
    "coordinates": "rust:proc-macro2",
    "name": "proc-macro2",
    "description": "A substitute implementation of the compiler''s `proc_macro` API to decouple token-based libraries from the procedural macro use case.",
    "license": [""],
    "tags": ["macros", "syn"],
    "downloads": 335194071,
    "repositories": ["crates.io"]
  },
  "rust:quote": {
    "coordinates": "rust:quote",
    "name": "quote",
    "description": "Quasi-quoting macro quote!(...)",
    "license": [""],
    "tags": ["macros", "syn"],
    "downloads": 331255147,
    "repositories": ["crates.io"]
  },
  "rust:libc": {
    "coordinates": "rust:libc",
    "name": "libc",
    "description": "Raw FFI bindings to platform libraries like libc. ",
    "license": [""],
    "tags": ["system", "libc", "operating", "ffi", "bindings"],
    "downloads": 328069052,
    "repositories": ["crates.io"]
  },
  "rust:bitflags": {
    "coordinates": "rust:bitflags",
    "name": "bitflags",
    "description": "A macro to generate structures which behave like bitflags. ",
    "license": [""],
    "tags": ["bitmask", "bitflags", "flags", "bit"],
    "downloads": 310913407,
    "repositories": ["crates.io"]
  },
  "rust:rand": {
    "coordinates": "rust:rand",
    "name": "rand",
    "description": "Random number generators and other randomness functionality. ",
    "license": [""],
    "tags": ["random", "rng"],
    "downloads": 307056695,
    "repositories": ["crates.io"]
  },
  "rust:rand_core": {
    "coordinates": "rust:rand_core",
    "name": "rand_core",
    "description": "Core random number generator traits and tools for implementation. ",
    "license": [""],
    "tags": ["random", "rng"],
    "downloads": 306282125,
    "repositories": ["crates.io"]
  },
  "rust:cfg-if": {
    "coordinates": "rust:cfg-if",
    "name": "cfg-if",
    "description": "A macro to ergonomically define an item depending on a large number of #[cfg] parameters. Structured like an if-else chain, the first matching branch is the item that gets emitted. ",
    "license": [""],
    "tags": [],
    "downloads": 305598273,
    "repositories": ["crates.io"]
  },
  "rust:serde": {
    "coordinates": "rust:serde",
    "name": "serde",
    "description": "A generic serialization/deserialization framework",
    "license": [""],
    "tags": ["no_std", "serialization", "serde"],
    "downloads": 291710405,
    "repositories": ["crates.io"]
  },
  "rust:hashbrown": {
    "coordinates": "rust:hashbrown",
    "name": "hashbrown",
    "description": "A Rust port of Google''s SwissTable hash map",
    "license": [""],
    "tags": ["swisstable", "hashmap", "hash", "no_std"],
    "downloads": 278046950,
    "repositories": ["crates.io"]
  },
  "rust:base64": {
    "coordinates": "rust:base64",
    "name": "base64",
    "description": "encodes and decodes base64 as bytes or utf8",
    "license": [""],
    "tags": ["utf8", "base64", "encode", "decode", "no_std"],
    "downloads": 276833084,
    "repositories": ["crates.io"]
  },
  "rust:regex-syntax": {
    "coordinates": "rust:regex-syntax",
    "name": "regex-syntax",
    "description": "A regular expression parser.",
    "license": [""],
    "tags": [],
    "downloads": 274371752,
    "repositories": ["crates.io"]
  },
  "rust:itoa": {
    "coordinates": "rust:itoa",
    "name": "itoa",
    "description": "Fast integer primitive to string conversion",
    "license": [""],
    "tags": ["integer"],
    "downloads": 267717235,
    "repositories": ["crates.io"]
  },
  "rust:autocfg": {
    "coordinates": "rust:autocfg",
    "name": "autocfg",
    "description": "Automatic cfg for Rust compiler features",
    "license": [""],
    "tags": ["autoconf", "build", "rustc"],
    "downloads": 261354466,
    "repositories": ["crates.io"]
  },
  "rust:getrandom": {
    "coordinates": "rust:getrandom",
    "name": "getrandom",
    "description": "A small cross-platform library for retrieving random data from system source",
    "license": [""],
    "tags": [],
    "downloads": 260936421,
    "repositories": ["crates.io"]
  },
  "rust:serde_derive": {
    "coordinates": "rust:serde_derive",
    "name": "serde_derive",
    "description": "Macros 1.1 implementation of #[derive(Serialize, Deserialize)]",
    "license": [""],
    "tags": ["derive", "no_std", "serialization", "serde"],
    "downloads": 260684278,
    "repositories": ["crates.io"]
  },
  "rust:log": {
    "coordinates": "rust:log",
    "name": "log",
    "description": "A lightweight logging facade for Rust ",
    "license": [""],
    "tags": ["logging"],
    "downloads": 252076963,
    "repositories": ["crates.io"]
  },
  "rust:serde_json": {
    "coordinates": "rust:serde_json",
    "name": "serde_json",
    "description": "A JSON serialization file format",
    "license": [""],
    "tags": ["json", "serialization", "serde"],
    "downloads": 249489189,
    "repositories": ["crates.io"]
  },
  "rust:memchr": {
    "coordinates": "rust:memchr",
    "name": "memchr",
    "description": "Provides extremely fast (uses SIMD on x86_64, aarch64 and wasm32) routines for 1, 2 or 3 byte search and single substring search. ",
    "license": [""],
    "tags": ["find", "substring", "memchr", "memmem", "search"],
    "downloads": 249401133,
    "repositories": ["crates.io"]
  },
  "rust:rand_chacha": {
    "coordinates": "rust:rand_chacha",
    "name": "rand_chacha",
    "description": "ChaCha random number generator ",
    "license": [""],
    "tags": ["random", "chacha", "rng"],
    "downloads": 243628318,
    "repositories": ["crates.io"]
  },
  "rust:regex": {
    "coordinates": "rust:regex",
    "name": "regex",
    "description": "An implementation of regular expressions for Rust. This implementation uses finite automata and guarantees linear time matching on all inputs. ",
    "license": [""],
    "tags": [],
    "downloads": 241854136,
    "repositories": ["crates.io"]
  },
  "rust:time": {
    "coordinates": "rust:time",
    "name": "time",
    "description": "Date and time library. Fully interoperable with the standard library. Mostly compatible with #![no_std].",
    "license": [""],
    "tags": ["duration", "date", "calendar", "time"],
    "downloads": 234451997,
    "repositories": ["crates.io"]
  },
  "rust:parking_lot_core": {
    "coordinates": "rust:parking_lot_core",
    "name": "parking_lot_core",
    "description": "An advanced API for creating custom synchronization primitives.",
    "license": [""],
    "tags": ["condvar", "rwlock", "once", "thread", "mutex"],
    "downloads": 234015438,
    "repositories": ["crates.io"]
  },
  "rust:once_cell": {
    "coordinates": "rust:once_cell",
    "name": "once_cell",
    "description": "Single assignment cells and lazy values.",
    "license": [""],
    "tags": ["static", "lazy"],
    "downloads": 232000872,
    "repositories": ["crates.io"]
  },
  "rust:lazy_static": {
    "coordinates": "rust:lazy_static",
    "name": "lazy_static",
    "description": "A macro for declaring lazily evaluated statics in Rust.",
    "license": [""],
    "tags": ["lazy", "static", "macro"],
    "downloads": 230757075,
    "repositories": ["crates.io"]
  },
  "rust:aho-corasick": {
    "coordinates": "rust:aho-corasick",
    "name": "aho-corasick",
    "description": "Fast multiple substring searching.",
    "license": [""],
    "tags": ["multi", "text", "string", "pattern", "search"],
    "downloads": 230466933,
    "repositories": ["crates.io"]
  },
  "rust:cc": {
    "coordinates": "rust:cc",
    "name": "cc",
    "description": "A build-time dependency for Cargo build scripts to assist in invoking the native C compiler to compile native C code into a static archive to be linked into Rust code. ",
    "license": [""],
    "tags": ["build-dependencies"],
    "downloads": 228262364,
    "repositories": ["crates.io"]
  },
  "rust:ryu": {
    "coordinates": "rust:ryu",
    "name": "ryu",
    "description": "Fast floating point to string conversion",
    "license": [""],
    "tags": ["float"],
    "downloads": 228239136,
    "repositories": ["crates.io"]
  },
  "rust:smallvec": {
    "coordinates": "rust:smallvec",
    "name": "smallvec",
    "description": "''Small vector'' optimization: store up to a small number of items on the stack",
    "license": [""],
    "tags": ["no_std", "vector", "stack", "small", "vec"],
    "downloads": 225162826,
    "repositories": ["crates.io"]
  },
  "rust:indexmap": {
    "coordinates": "rust:indexmap",
    "name": "indexmap",
    "description": "A hash table with consistent order and fast iteration.",
    "license": [""],
    "tags": ["no_std", "hashmap"],
    "downloads": 225106311,
    "repositories": ["crates.io"]
  },
  "rust:num-traits": {
    "coordinates": "rust:num-traits",
    "name": "num-traits",
    "description": "Numeric traits for generic mathematics",
    "license": [""],
    "tags": ["numerics", "mathematics"],
    "downloads": 224095953,
    "repositories": ["crates.io"]
  },
  "rust:parking_lot": {
    "coordinates": "rust:parking_lot",
    "name": "parking_lot",
    "description": "More compact and efficient implementations of the standard synchronization primitives.",
    "license": [""],
    "tags": ["rwlock", "condvar", "thread", "once", "mutex"],
    "downloads": 221123110,
    "repositories": ["crates.io"]
  },
  "rust:clap": {
    "coordinates": "rust:clap",
    "name": "clap",
    "description": "A simple to use, efficient, and full-featured Command Line Argument Parser",
    "license": [""],
    "tags": ["argument", "arg", "parse", "cli", "parser"],
    "downloads": 218842681,
    "repositories": ["crates.io"]
  },
  "rust:version_check": {
    "coordinates": "rust:version_check",
    "name": "version_check",
    "description": "Tiny crate to check the version of the installed/running rustc.",
    "license": [""],
    "tags": ["rustc", "minimum", "check", "version"],
    "downloads": 209575135,
    "repositories": ["crates.io"]
  },
  "rust:semver": {
    "coordinates": "rust:semver",
    "name": "semver",
    "description": "Parser and evaluator for Cargo''s flavor of Semantic Versioning",
    "license": [""],
    "tags": ["cargo"],
    "downloads": 204929206,
    "repositories": ["crates.io"]
  },
  "rust:strsim": {
    "coordinates": "rust:strsim",
    "name": "strsim",
    "description": "Implementations of string similarity metrics. Includes Hamming, Levenshtein, OSA, Damerau-Levenshtein, Jaro, Jaro-Winkler, and Sørensen-Dice. ",
    "license": [""],
    "tags": ["jaro", "levenshtein", "similarity", "hamming", "string"],
    "downloads": 201344109,
    "repositories": ["crates.io"]
  },
  "rust:digest": {
    "coordinates": "rust:digest",
    "name": "digest",
    "description": "Traits for cryptographic hash functions and message authentication codes",
    "license": [""],
    "tags": ["crypto", "hash", "digest"],
    "downloads": 201063413,
    "repositories": ["crates.io"]
  },
  "rust:scopeguard": {
    "coordinates": "rust:scopeguard",
    "name": "scopeguard",
    "description": "A RAII scope guard that will run a given closure when it goes out of scope, even if the code between panics (assuming unwinding panic).  Defines the macros `defer!`, `defer_on_unwind!`, `defer_on_success!` as shorthands for guards with one of the implemented strategies. ",
    "license": [""],
    "tags": ["defer", "unwind", "panic", "scope-guard"],
    "downloads": 196421533,
    "repositories": ["crates.io"]
  },
  "rust:lock_api": {
    "coordinates": "rust:lock_api",
    "name": "lock_api",
    "description": "Wrappers to create fully-featured Mutex and RwLock types. Compatible with no_std.",
    "license": [""],
    "tags": ["rwlock", "lock", "mutex", "no_std"],
    "downloads": 195987116,
    "repositories": ["crates.io"]
  },
  "rust:block-buffer": {
    "coordinates": "rust:block-buffer",
    "name": "block-buffer",
    "description": "Buffer type for block processing of data",
    "license": [""],
    "tags": ["buffer", "block"],
    "downloads": 194804300,
    "repositories": ["crates.io"]
  },
  "rust:bytes": {
    "coordinates": "rust:bytes",
    "name": "bytes",
    "description": "Types and traits for working with bytes",
    "license": [""],
    "tags": ["zero-copy", "buffers", "io"],
    "downloads": 194425697,
    "repositories": ["crates.io"]
  },
  "rust:crossbeam-utils": {
    "coordinates": "rust:crossbeam-utils",
    "name": "crossbeam-utils",
    "description": "Utilities for concurrent programming",
    "license": [""],
    "tags": ["atomic", "scoped", "cache", "thread"],
    "downloads": 193688441,
    "repositories": ["crates.io"]
  },
  "rust:itertools": {
    "coordinates": "rust:itertools",
    "name": "itertools",
    "description": "Extra iterator adaptors, iterator methods, free functions, and macros.",
    "license": [""],
    "tags": ["product", "group-by", "data-structure", "iterator", "zip"],
    "downloads": 192575976,
    "repositories": ["crates.io"]
  },
  "rust:heck": {
    "coordinates": "rust:heck",
    "name": "heck",
    "description": "heck is a case conversion library.",
    "license": [""],
    "tags": ["case", "camel", "snake", "unicode", "string"],
    "downloads": 190688423,
    "repositories": ["crates.io"]
  },
  "rust:idna": {
    "coordinates": "rust:idna",
    "name": "idna",
    "description": "IDNA (Internationalizing Domain Names in Applications) and Punycode.",
    "license": [""],
    "tags": [],
    "downloads": 189965426,
    "repositories": ["crates.io"]
  },
  "rust:either": {
    "coordinates": "rust:either",
    "name": "either",
    "description": "The enum `Either` with variants `Left` and `Right` is a general purpose sum type with two cases. ",
    "license": [""],
    "tags": ["data-structure", "no_std"],
    "downloads": 189566072,
    "repositories": ["crates.io"]
  },
  "rust:thiserror": {
    "coordinates": "rust:thiserror",
    "name": "thiserror",
    "description": "derive(Error)",
    "license": [""],
    "tags": ["derive", "error-handling", "error"],
    "downloads": 187381226,
    "repositories": ["crates.io"]
  },
  "rust:thiserror-impl": {
    "coordinates": "rust:thiserror-impl",
    "name": "thiserror-impl",
    "description": "Implementation detail of the `thiserror` crate",
    "license": [""],
    "tags": [],
    "downloads": 187344861,
    "repositories": ["crates.io"]
  },
  "rust:unicode-ident": {
    "coordinates": "rust:unicode-ident",
    "name": "unicode-ident",
    "description": "Determine whether characters have the XID_Start or XID_Continue properties according to Unicode Standard Annex #31",
    "license": [""],
    "tags": ["xid", "unicode"],
    "downloads": 187270645,
    "repositories": ["crates.io"]
  },
  "rust:memoffset": {
    "coordinates": "rust:memoffset",
    "name": "memoffset",
    "description": "offset_of functionality for Rust structs.",
    "license": [""],
    "tags": ["offsetof", "mem", "offset_of", "offset"],
    "downloads": 187185336,
    "repositories": ["crates.io"]
  },
  "rust:unicode-xid": {
    "coordinates": "rust:unicode-xid",
    "name": "unicode-xid",
    "description": "Determine whether characters have the XID_Start or XID_Continue properties according to Unicode Standard Annex #31. ",
    "license": [""],
    "tags": ["text", "xid", "unicode"],
    "downloads": 185586617,
    "repositories": ["crates.io"]
  },
  "rust:num_cpus": {
    "coordinates": "rust:num_cpus",
    "name": "num_cpus",
    "description": "Get the number of CPUs on a machine.",
    "license": [""],
    "tags": ["cpus", "cores", "cpu"],
    "downloads": 183897227,
    "repositories": ["crates.io"]
  },
  "rust:pin-project-lite": {
    "coordinates": "rust:pin-project-lite",
    "name": "pin-project-lite",
    "description": "A lightweight version of pin-project written with declarative macros. ",
    "license": [""],
    "tags": ["macros", "pin"],
    "downloads": 183478020,
    "repositories": ["crates.io"]
  },
  "rust:socket2": {
    "coordinates": "rust:socket2",
    "name": "socket2",
    "description": "Utilities for handling networking sockets with a maximal amount of configuration possible intended. ",
    "license": [""],
    "tags": ["socket", "io", "network"],
    "downloads": 182240443,
    "repositories": ["crates.io"]
  },
  "rust:generic-array": {
    "coordinates": "rust:generic-array",
    "name": "generic-array",
    "description": "Generic types implementing functionality of arrays",
    "license": [""],
    "tags": ["generic", "array"],
    "downloads": 180419022,
    "repositories": ["crates.io"]
  },
  "rust:percent-encoding": {
    "coordinates": "rust:percent-encoding",
    "name": "percent-encoding",
    "description": "Percent encoding and decoding",
    "license": [""],
    "tags": [],
    "downloads": 178771291,
    "repositories": ["crates.io"]
  },
  "rust:mio": {
    "coordinates": "rust:mio",
    "name": "mio",
    "description": "Lightweight non-blocking I/O.",
    "license": [""],
    "tags": ["non-blocking", "io", "async"],
    "downloads": 177016546,
    "repositories": ["crates.io"]
  },
  "rust:byteorder": {
    "coordinates": "rust:byteorder",
    "name": "byteorder",
    "description": "Library for reading/writing numbers in big-endian and little-endian.",
    "license": [""],
    "tags": ["little-endian", "big-endian", "endian", "byte", "binary"],
    "downloads": 175691740,
    "repositories": ["crates.io"]
  },
  "rust:ppv-lite86": {
    "coordinates": "rust:ppv-lite86",
    "name": "ppv-lite86",
    "description": "Implementation of the crypto-simd API for x86",
    "license": [""],
    "tags": ["x86", "crypto", "simd"],
    "downloads": 174886456,
    "repositories": ["crates.io"]
  },
  "rust:tokio": {
    "coordinates": "rust:tokio",
    "name": "tokio",
    "description": "An event-driven, non-blocking I/O platform for writing asynchronous I/O backed applications. ",
    "license": [""],
    "tags": ["non-blocking", "futures", "io", "async"],
    "downloads": 174096727,
    "repositories": ["crates.io"]
  },
  "rust:url": {
    "coordinates": "rust:url",
    "name": "url",
    "description": "URL library for Rust, based on the WHATWG URL Standard",
    "license": [""],
    "tags": ["url", "parser"],
    "downloads": 172583190,
    "repositories": ["crates.io"]
  },
  "rust:anyhow": {
    "coordinates": "rust:anyhow",
    "name": "anyhow",
    "description": "Flexible concrete Error type built on std::error::Error",
    "license": [""],
    "tags": ["error-handling", "error"],
    "downloads": 169136815,
    "repositories": ["crates.io"]
  },
  "rust:miniz_oxide": {
    "coordinates": "rust:miniz_oxide",
    "name": "miniz_oxide",
    "description": "DEFLATE compression and decompression library rewritten in Rust based on miniz",
    "license": [""],
    "tags": ["encoding", "miniz", "deflate", "zlib"],
    "downloads": 168609095,
    "repositories": ["crates.io"]
  },
  "rust:slab": {
    "coordinates": "rust:slab",
    "name": "slab",
    "description": "Pre-allocated storage for a uniform data type",
    "license": [""],
    "tags": ["slab", "no_std", "allocator"],
    "downloads": 166329712,
    "repositories": ["crates.io"]
  },
  "rust:num-integer": {
    "coordinates": "rust:num-integer",
    "name": "num-integer",
    "description": "Integer traits and functions",
    "license": [""],
    "tags": ["mathematics", "numerics"],
    "downloads": 164681032,
    "repositories": ["crates.io"]
  },
  "rust:futures-core": {
    "coordinates": "rust:futures-core",
    "name": "futures-core",
    "description": "The core traits and types in for the `futures` library. ",
    "license": [""],
    "tags": [],
    "downloads": 160539773,
    "repositories": ["crates.io"]
  },
  "rust:regex-automata": {
    "coordinates": "rust:regex-automata",
    "name": "regex-automata",
    "description": "Automata construction and matching using regular expressions.",
    "license": [""],
    "tags": ["nfa", "dfa", "automata", "automaton", "regex"],
    "downloads": 159230269,
    "repositories": ["crates.io"]
  },
  "rust:chrono": {
    "coordinates": "rust:chrono",
    "name": "chrono",
    "description": "Date and time library for Rust",
    "license": [""],
    "tags": ["date", "calendar", "time"],
    "downloads": 158610684,
    "repositories": ["crates.io"]
  },
  "rust:unicode-normalization": {
    "coordinates": "rust:unicode-normalization",
    "name": "unicode-normalization",
    "description": "This crate provides functions for normalization of Unicode strings, including Canonical and Compatible Decomposition and Recomposition, as described in Unicode Standard Annex #15. ",
    "license": [""],
    "tags": [
      "recomposition",
      "decomposition",
      "text",
      "normalization",
      "unicode"
    ],
    "downloads": 157341972,
    "repositories": ["crates.io"]
  },
  "rust:toml": {
    "coordinates": "rust:toml",
    "name": "toml",
    "description": "A native Rust encoder and decoder of TOML-formatted files and streams. Provides implementations of the standard Serialize/Deserialize traits for TOML data to facilitate deserializing and serializing Rust structures. ",
    "license": [""],
    "tags": ["toml", "encoding"],
    "downloads": 157244535,
    "repositories": ["crates.io"]
  },
  "rust:fnv": {
    "coordinates": "rust:fnv",
    "name": "fnv",
    "description": "Fowler–Noll–Vo hash function",
    "license": [""],
    "tags": [],
    "downloads": 156848110,
    "repositories": ["crates.io"]
  },
  "rust:unicode-bidi": {
    "coordinates": "rust:unicode-bidi",
    "name": "unicode-bidi",
    "description": "Implementation of the Unicode Bidirectional Algorithm",
    "license": [""],
    "tags": ["rtl", "text", "bidi", "layout", "unicode"],
    "downloads": 155714163,
    "repositories": ["crates.io"]
  },
  "rust:futures-util": {
    "coordinates": "rust:futures-util",
    "name": "futures-util",
    "description": "Common utilities and extension traits for the futures-rs library. ",
    "license": [""],
    "tags": [],
    "downloads": 155678174,
    "repositories": ["crates.io"]
  },
  "rust:futures": {
    "coordinates": "rust:futures",
    "name": "futures",
    "description": "An implementation of futures and streams featuring zero allocations, composability, and iterator-like interfaces. ",
    "license": [""],
    "tags": ["future", "async", "futures"],
    "downloads": 155447577,
    "repositories": ["crates.io"]
  },
  "rust:futures-task": {
    "coordinates": "rust:futures-task",
    "name": "futures-task",
    "description": "Tools for working with tasks. ",
    "license": [""],
    "tags": [],
    "downloads": 155320232,
    "repositories": ["crates.io"]
  },
  "rust:typenum": {
    "coordinates": "rust:typenum",
    "name": "typenum",
    "description": "Typenum is a Rust library for type-level numbers evaluated at     compile time. It currently supports bits, unsigned integers, and signed     integers. It also provides a type-level array of type-level numbers, but its     implementation is incomplete.",
    "license": [""],
    "tags": [],
    "downloads": 155112316,
    "repositories": ["crates.io"]
  },
  "rust:sha2": {
    "coordinates": "rust:sha2",
    "name": "sha2",
    "description": "Pure Rust implementation of the SHA-2 hash function family including SHA-224, SHA-256, SHA-384, and SHA-512. ",
    "license": [""],
    "tags": ["sha2", "crypto", "digest", "hash"],
    "downloads": 154021561,
    "repositories": ["crates.io"]
  },
  "rust:futures-sink": {
    "coordinates": "rust:futures-sink",
    "name": "futures-sink",
    "description": "The asynchronous `Sink` trait for the futures-rs library. ",
    "license": [""],
    "tags": [],
    "downloads": 153351340,
    "repositories": ["crates.io"]
  },
  "rust:futures-channel": {
    "coordinates": "rust:futures-channel",
    "name": "futures-channel",
    "description": "Channels for asynchronous communication using futures-rs. ",
    "license": [""],
    "tags": [],
    "downloads": 152820216,
    "repositories": ["crates.io"]
  },
  "rust:textwrap": {
    "coordinates": "rust:textwrap",
    "name": "textwrap",
    "description": "Library for word wrapping, indenting, and dedenting strings. Has optional support for Unicode and emojis as well as machine hyphenation.",
    "license": [""],
    "tags": ["hyphenation", "typesetting", "text", "formatting", "wrap"],
    "downloads": 152361272,
    "repositories": ["crates.io"]
  },
  "rust:tokio-util": {
    "coordinates": "rust:tokio-util",
    "name": "tokio-util",
    "description": "Additional utilities for working with Tokio. ",
    "license": [""],
    "tags": [],
    "downloads": 149884705,
    "repositories": ["crates.io"]
  },
  "rust:pkg-config": {
    "coordinates": "rust:pkg-config",
    "name": "pkg-config",
    "description": "A library to run the pkg-config system tool at build time in order to be used in Cargo build scripts. ",
    "license": [""],
    "tags": ["build-dependencies"],
    "downloads": 148743013,
    "repositories": ["crates.io"]
  },
  "rust:tracing": {
    "coordinates": "rust:tracing",
    "name": "tracing",
    "description": "Application-level tracing for Rust. ",
    "license": [""],
    "tags": ["logging", "tracing", "metrics", "async"],
    "downloads": 148145528,
    "repositories": ["crates.io"]
  },
  "rust:ahash": {
    "coordinates": "rust:ahash",
    "name": "ahash",
    "description": "A non-cryptographic hash function using AES-NI for high performance",
    "license": [""],
    "tags": ["hasher", "hashmap", "no-std", "aes", "hash"],
    "downloads": 148053512,
    "repositories": ["crates.io"]
  },
  "rust:tracing-core": {
    "coordinates": "rust:tracing-core",
    "name": "tracing-core",
    "description": "Core primitives for application-level tracing. ",
    "license": [""],
    "tags": ["logging", "profiling", "tracing"],
    "downloads": 148010684,
    "repositories": ["crates.io"]
  },
  "rust:rustc_version": {
    "coordinates": "rust:rustc_version",
    "name": "rustc_version",
    "description": "A library for querying the version of a installed rustc compiler",
    "license": [""],
    "tags": ["rustc", "version"],
    "downloads": 147253855,
    "repositories": ["crates.io"]
  },
  "rust:unicode-width": {
    "coordinates": "rust:unicode-width",
    "name": "unicode-width",
    "description": "Determine displayed width of `char` and `str` types according to Unicode Standard Annex #11 rules. ",
    "license": [""],
    "tags": ["width", "text", "unicode"],
    "downloads": 146836736,
    "repositories": ["crates.io"]
  },
  "rust:atty": {
    "coordinates": "rust:atty",
    "name": "atty",
    "description": "A simple interface for querying atty",
    "license": [""],
    "tags": ["isatty", "terminal", "tty"],
    "downloads": 146659782,
    "repositories": ["crates.io"]
  },
  "rust:termcolor": {
    "coordinates": "rust:termcolor",
    "name": "termcolor",
    "description": "A simple cross platform library for writing colored text to a terminal. ",
    "license": [""],
    "tags": ["color", "win", "windows", "ansi", "console"],
    "downloads": 146247500,
    "repositories": ["crates.io"]
  },
  "rust:futures-io": {
    "coordinates": "rust:futures-io",
    "name": "futures-io",
    "description": "The `AsyncRead`, `AsyncWrite`, `AsyncSeek`, and `AsyncBufRead` traits for the futures-rs library. ",
    "license": [""],
    "tags": [],
    "downloads": 145873251,
    "repositories": ["crates.io"]
  },
  "rust:pin-utils": {
    "coordinates": "rust:pin-utils",
    "name": "pin-utils",
    "description": "Utilities for pinning ",
    "license": [""],
    "tags": [],
    "downloads": 145336728,
    "repositories": ["crates.io"]
  },
  "rust:hyper": {
    "coordinates": "rust:hyper",
    "name": "hyper",
    "description": "A fast and correct HTTP library.",
    "license": [""],
    "tags": ["hyperium", "hyper", "http"],
    "downloads": 144021978,
    "repositories": ["crates.io"]
  },
  "rust:tempfile": {
    "coordinates": "rust:tempfile",
    "name": "tempfile",
    "description": "A library for managing temporary files and directories.",
    "license": [""],
    "tags": ["filesystem", "tmpfile", "tempfile"],
    "downloads": 142698474,
    "repositories": ["crates.io"]
  },
  "rust:tinyvec": {
    "coordinates": "rust:tinyvec",
    "name": "tinyvec",
    "description": "`tinyvec` provides 100% safe vec-like data structures.",
    "license": [""],
    "tags": ["no_std", "vec", "no-std"],
    "downloads": 142640747,
    "repositories": ["crates.io"]
  },
  "rust:http": {
    "coordinates": "rust:http",
    "name": "http",
    "description": "A set of types for representing HTTP requests and responses. ",
    "license": [""],
    "tags": ["http"],
    "downloads": 140234512,
    "repositories": ["crates.io"]
  },
  "rust:spin": {
    "coordinates": "rust:spin",
    "name": "spin",
    "description": "Spin-based synchronization primitives",
    "license": [""],
    "tags": ["spinlock", "rwlock", "mutex"],
    "downloads": 139238488,
    "repositories": ["crates.io"]
  },
  "rust:nom": {
    "coordinates": "rust:nom",
    "name": "nom",
    "description": "A byte-oriented, zero-copy, parser combinators library",
    "license": [""],
    "tags": ["bit", "parser-combinators", "parsing", "streaming", "parser"],
    "downloads": 139137078,
    "repositories": ["crates.io"]
  },
  "rust:crossbeam-channel": {
    "coordinates": "rust:crossbeam-channel",
    "name": "crossbeam-channel",
    "description": "Multi-producer multi-consumer channels for message passing",
    "license": [""],
    "tags": ["select", "message", "channel", "mpmc", "golang"],
    "downloads": 138625182,
    "repositories": ["crates.io"]
  },
  "rust:uuid": {
    "coordinates": "rust:uuid",
    "name": "uuid",
    "description": "A library to generate and parse UUIDs.",
    "license": [""],
    "tags": ["uuid", "guid", "unique"],
    "downloads": 138150685,
    "repositories": ["crates.io"]
  },
  "rust:crossbeam-epoch": {
    "coordinates": "rust:crossbeam-epoch",
    "name": "crossbeam-epoch",
    "description": "Epoch-based garbage collection",
    "license": [""],
    "tags": ["atomic", "rcu", "garbage", "lock-free"],
    "downloads": 137342829,
    "repositories": ["crates.io"]
  },
  "rust:fastrand": {
    "coordinates": "rust:fastrand",
    "name": "fastrand",
    "description": "A simple and fast random number generator",
    "license": [""],
    "tags": ["fast", "simple", "wyrand", "rand", "random"],
    "downloads": 137211697,
    "repositories": ["crates.io"]
  },
  "rust:nix": {
    "coordinates": "rust:nix",
    "name": "nix",
    "description": "Rust friendly bindings to *nix APIs",
    "license": [""],
    "tags": [],
    "downloads": 137207208,
    "repositories": ["crates.io"]
  },
  "rust:env_logger": {
    "coordinates": "rust:env_logger",
    "name": "env_logger",
    "description": "A logging implementation for `log` which is configured via an environment variable. ",
    "license": [""],
    "tags": ["log", "logger", "logging"],
    "downloads": 137018943,
    "repositories": ["crates.io"]
  },
  "rust:form_urlencoded": {
    "coordinates": "rust:form_urlencoded",
    "name": "form_urlencoded",
    "description": "Parser and serializer for the application/x-www-form-urlencoded syntax, as used by HTML forms.",
    "license": [""],
    "tags": [],
    "downloads": 134775387,
    "repositories": ["crates.io"]
  },
  "rust:h2": {
    "coordinates": "rust:h2",
    "name": "h2",
    "description": "An HTTP/2 client and server",
    "license": [""],
    "tags": ["http", "non-blocking", "async"],
    "downloads": 133175545,
    "repositories": ["crates.io"]
  },
  "rust:futures-macro": {
    "coordinates": "rust:futures-macro",
    "name": "futures-macro",
    "description": "The futures-rs procedural macro implementations. ",
    "license": [""],
    "tags": [],
    "downloads": 132087117,
    "repositories": ["crates.io"]
  },
  "rust:rustix": {
    "coordinates": "rust:rustix",
    "name": "rustix",
    "description": "Safe Rust bindings to POSIX/Unix/Linux/Winsock-like syscalls",
    "license": [""],
    "tags": ["safe", "syscall", "network", "file", "api"],
    "downloads": 131640974,
    "repositories": ["crates.io"]
  },
  "rust:thread_local": {
    "coordinates": "rust:thread_local",
    "name": "thread_local",
    "description": "Per-object thread-local storage",
    "license": [""],
    "tags": ["thread_local", "concurrent", "thread"],
    "downloads": 131588554,
    "repositories": ["crates.io"]
  },
  "rust:tinyvec_macros": {
    "coordinates": "rust:tinyvec_macros",
    "name": "tinyvec_macros",
    "description": "Some macros for tiny containers",
    "license": [""],
    "tags": [],
    "downloads": 131378645,
    "repositories": ["crates.io"]
  },
  "rust:adler": {
    "coordinates": "rust:adler",
    "name": "adler",
    "description": "A simple clean-room implementation of the Adler-32 checksum",
    "license": [""],
    "tags": ["checksum", "hash", "integrity", "adler32", "zlib"],
    "downloads": 130827131,
    "repositories": ["crates.io"]
  },
  "rust:httparse": {
    "coordinates": "rust:httparse",
    "name": "httparse",
    "description": "A tiny, safe, speedy, zero-copy HTTP/1.x parser.",
    "license": [""],
    "tags": ["parser", "http", "no_std"],
    "downloads": 129582630,
    "repositories": ["crates.io"]
  },
  "rust:crc32fast": {
    "coordinates": "rust:crc32fast",
    "name": "crc32fast",
    "description": "Fast, SIMD-accelerated CRC32 (IEEE) checksum computation",
    "license": [""],
    "tags": ["crc", "crc32", "fast", "simd", "checksum"],
    "downloads": 128419934,
    "repositories": ["crates.io"]
  },
  "rust:futures-executor": {
    "coordinates": "rust:futures-executor",
    "name": "futures-executor",
    "description": "Executors for asynchronous tasks based on the futures-rs library. ",
    "license": [""],
    "tags": [],
    "downloads": 127040955,
    "repositories": ["crates.io"]
  },
  "rust:crossbeam-deque": {
    "coordinates": "rust:crossbeam-deque",
    "name": "crossbeam-deque",
    "description": "Concurrent work-stealing deque",
    "license": [""],
    "tags": ["chase-lev", "scheduler", "scheduling", "lock-free"],
    "downloads": 125361478,
    "repositories": ["crates.io"]
  },
  "rust:http-body": {
    "coordinates": "rust:http-body",
    "name": "http-body",
    "description": "Trait representing an asynchronous, streaming, HTTP request or response body. ",
    "license": [""],
    "tags": ["http"],
    "downloads": 125229252,
    "repositories": ["crates.io"]
  },
  "rust:cpufeatures": {
    "coordinates": "rust:cpufeatures",
    "name": "cpufeatures",
    "description": "Lightweight runtime CPU feature detection for aarch64, loongarch64, and x86/x86_64 targets,  with no_std support and support for mobile targets including Android and iOS ",
    "license": [""],
    "tags": ["target-feature", "cpuid"],
    "downloads": 124940955,
    "repositories": ["crates.io"]
  },
  "rust:winapi": {
    "coordinates": "rust:winapi",
    "name": "winapi",
    "description": "Raw FFI bindings for all of Windows API.",
    "license": [""],
    "tags": ["com", "ffi", "win32", "directx", "windows"],
    "downloads": 123058632,
    "repositories": ["crates.io"]
  },
  "rust:flate2": {
    "coordinates": "rust:flate2",
    "name": "flate2",
    "description": "DEFLATE compression and decompression exposed as Read/BufRead/Write streams. Supports miniz_oxide and multiple zlib implementations. Supports zlib, gzip, and raw deflate streams. ",
    "license": [""],
    "tags": ["zlib-ng", "gzip", "zlib", "deflate", "encoding"],
    "downloads": 121916317,
    "repositories": ["crates.io"]
  },
  "rust:tokio-macros": {
    "coordinates": "rust:tokio-macros",
    "name": "tokio-macros",
    "description": "Tokio''s proc macros. ",
    "license": [""],
    "tags": [],
    "downloads": 121692454,
    "repositories": ["crates.io"]
  },
  "rust:async-trait": {
    "coordinates": "rust:async-trait",
    "name": "async-trait",
    "description": "Type erasure for async trait methods",
    "license": [""],
    "tags": ["async"],
    "downloads": 121533108,
    "repositories": ["crates.io"]
  },
  "rust:pin-project": {
    "coordinates": "rust:pin-project",
    "name": "pin-project",
    "description": "A crate for safe and ergonomic pin-projection. ",
    "license": [""],
    "tags": ["attribute", "macros", "pin"],
    "downloads": 121103626,
    "repositories": ["crates.io"]
  },
  "rust:pin-project-internal": {
    "coordinates": "rust:pin-project-internal",
    "name": "pin-project-internal",
    "description": "Implementation detail of the `pin-project` crate. ",
    "license": [""],
    "tags": ["attribute", "macros", "pin"],
    "downloads": 120992138,
    "repositories": ["crates.io"]
  },
  "rust:hex": {
    "coordinates": "rust:hex",
    "name": "hex",
    "description": "Encoding and decoding data into/from hexadecimal representation.",
    "license": [""],
    "tags": ["hex", "no_std"],
    "downloads": 120552746,
    "repositories": ["crates.io"]
  },
  "rust:arrayvec": {
    "coordinates": "rust:arrayvec",
    "name": "arrayvec",
    "description": "A vector with fixed capacity, backed by an array (it can be stored on the stack too). Implements fixed capacity ArrayVec and ArrayString.",
    "license": [""],
    "tags": ["vector", "no_std", "data-structure", "stack", "array"],
    "downloads": 119434476,
    "repositories": ["crates.io"]
  },
  "rust:linux-raw-sys": {
    "coordinates": "rust:linux-raw-sys",
    "name": "linux-raw-sys",
    "description": "Generated bindings for Linux''s userspace API",
    "license": [""],
    "tags": ["uapi", "ffi", "linux"],
    "downloads": 119325406,
    "repositories": ["crates.io"]
  },
  "rust:mime": {
    "coordinates": "rust:mime",
    "name": "mime",
    "description": "Strongly Typed Mimes",
    "license": [""],
    "tags": ["mime", "media-extensions", "media-types"],
    "downloads": 119187284,
    "repositories": ["crates.io"]
  },
  "rust:want": {
    "coordinates": "rust:want",
    "name": "want",
    "description": "Detect when another Future wants a result.",
    "license": [""],
    "tags": ["channel", "futures", "async"],
    "downloads": 118381865,
    "repositories": ["crates.io"]
  },
  "rust:tracing-attributes": {
    "coordinates": "rust:tracing-attributes",
    "name": "tracing-attributes",
    "description": "Procedural macro attributes for automatically instrumenting functions. ",
    "license": [""],
    "tags": ["logging", "tracing", "log", "instrument", "macro"],
    "downloads": 116727784,
    "repositories": ["crates.io"]
  },
  "rust:humantime": {
    "coordinates": "rust:humantime",
    "name": "humantime",
    "description": "    A parser and formatter for std::time::{Duration, SystemTime} ",
    "license": [""],
    "tags": ["human-friendly", "human", "parser", "time", "duration"],
    "downloads": 116535891,
    "repositories": ["crates.io"]
  },
  "rust:wasi": {
    "coordinates": "rust:wasi",
    "name": "wasi",
    "description": "WASI API bindings for Rust",
    "license": [""],
    "tags": ["webassembly", "wasm"],
    "downloads": 116161084,
    "repositories": ["crates.io"]
  },
  "rust:object": {
    "coordinates": "rust:object",
    "name": "object",
    "description": "A unified interface for reading and writing object file formats.",
    "license": [""],
    "tags": ["elf", "pe", "coff", "object", "mach-o"],
    "downloads": 115631852,
    "repositories": ["crates.io"]
  },
  "rust:unicode-segmentation": {
    "coordinates": "rust:unicode-segmentation",
    "name": "unicode-segmentation",
    "description": "This crate provides Grapheme Cluster, Word and Sentence boundaries according to Unicode Standard Annex #29 rules. ",
    "license": [""],
    "tags": ["boundary", "word", "grapheme", "text", "unicode"],
    "downloads": 115125464,
    "repositories": ["crates.io"]
  },
  "rust:try-lock": {
    "coordinates": "rust:try-lock",
    "name": "try-lock",
    "description": "A lightweight atomic lock.",
    "license": [""],
    "tags": ["atomic", "lock"],
    "downloads": 115080433,
    "repositories": ["crates.io"]
  },
  "rust:rustls": {
    "coordinates": "rust:rustls",
    "name": "rustls",
    "description": "Rustls is a modern TLS library written in Rust.",
    "license": [""],
    "tags": [],
    "downloads": 114951268,
    "repositories": ["crates.io"]
  },
  "rust:httpdate": {
    "coordinates": "rust:httpdate",
    "name": "httpdate",
    "description": "HTTP date parsing and formatting",
    "license": [""],
    "tags": ["date", "http", "time", "simple", "timestamp"],
    "downloads": 114912693,
    "repositories": ["crates.io"]
  },
  "rust:rustc-demangle": {
    "coordinates": "rust:rustc-demangle",
    "name": "rustc-demangle",
    "description": "Rust compiler symbol demangling. ",
    "license": [""],
    "tags": [],
    "downloads": 114325007,
    "repositories": ["crates.io"]
  },
  "rust:walkdir": {
    "coordinates": "rust:walkdir",
    "name": "walkdir",
    "description": "Recursively walk a directory.",
    "license": [""],
    "tags": ["directory", "walk", "recursive", "iterator"],
    "downloads": 113663095,
    "repositories": ["crates.io"]
  },
  "rust:windows_x86_64_msvc": {
    "coordinates": "rust:windows_x86_64_msvc",
    "name": "windows_x86_64_msvc",
    "description": "Import lib for Windows",
    "license": [""],
    "tags": [],
    "downloads": 113359982,
    "repositories": ["crates.io"]
  },
  "rust:redox_syscall": {
    "coordinates": "rust:redox_syscall",
    "name": "redox_syscall",
    "description": "A Rust library to access raw Redox system calls",
    "license": [""],
    "tags": [],
    "downloads": 112893615,
    "repositories": ["crates.io"]
  },
  "rust:backtrace": {
    "coordinates": "rust:backtrace",
    "name": "backtrace",
    "description": "A library to acquire a stack trace (backtrace) at runtime in a Rust program. ",
    "license": [""],
    "tags": [],
    "downloads": 112432804,
    "repositories": ["crates.io"]
  },
  "rust:instant": {
    "coordinates": "rust:instant",
    "name": "instant",
    "description": "A partial replacement for std::time::Instant that works on WASM too.",
    "license": [""],
    "tags": ["wasm", "time"],
    "downloads": 111514266,
    "repositories": ["crates.io"]
  },
  "rust:windows-sys": {
    "coordinates": "rust:windows-sys",
    "name": "windows-sys",
    "description": "Rust for Windows",
    "license": [""],
    "tags": [],
    "downloads": 110986394,
    "repositories": ["crates.io"]
  },
  "rust:tower-service": {
    "coordinates": "rust:tower-service",
    "name": "tower-service",
    "description": "Trait representing an asynchronous, request / response based, client or server. ",
    "license": [""],
    "tags": [],
    "downloads": 110785061,
    "repositories": ["crates.io"]
  },
  "rust:gimli": {
    "coordinates": "rust:gimli",
    "name": "gimli",
    "description": "A library for reading and writing the DWARF debugging format.",
    "license": [""],
    "tags": ["dwarf", "elf", "eh_frame", "debug"],
    "downloads": 109842923,
    "repositories": ["crates.io"]
  },
  "rust:hmac": {
    "coordinates": "rust:hmac",
    "name": "hmac",
    "description": "Generic implementation of Hash-based Message Authentication Code (HMAC)",
    "license": [""],
    "tags": ["mac", "hmac", "digest", "crypto"],
    "downloads": 107861476,
    "repositories": ["crates.io"]
  },
  "rust:ansi_term": {
    "coordinates": "rust:ansi_term",
    "name": "ansi_term",
    "description": "Library for ANSI terminal colours and styles (bold, underline)",
    "license": [""],
    "tags": [],
    "downloads": 107836376,
    "repositories": ["crates.io"]
  },
  "rust:signal-hook-registry": {
    "coordinates": "rust:signal-hook-registry",
    "name": "signal-hook-registry",
    "description": "Backend crate for signal-hook",
    "license": [""],
    "tags": ["unix", "signal", "daemon"],
    "downloads": 107778200,
    "repositories": ["crates.io"]
  },
  "rust:same-file": {
    "coordinates": "rust:same-file",
    "name": "same-file",
    "description": "A simple crate for determining whether two file paths point to the same file. ",
    "license": [""],
    "tags": ["same", "equal", "inode", "file"],
    "downloads": 107310295,
    "repositories": ["crates.io"]
  },
  "rust:opaque-debug": {
    "coordinates": "rust:opaque-debug",
    "name": "opaque-debug",
    "description": "Macro for opaque Debug trait implementation",
    "license": [""],
    "tags": [],
    "downloads": 107118623,
    "repositories": ["crates.io"]
  },
  "rust:time-macros": {
    "coordinates": "rust:time-macros",
    "name": "time-macros",
    "description": "    Procedural macros for the time crate.     This crate is an implementation detail and should not be relied upon directly. ",
    "license": [""],
    "tags": ["duration", "date", "calendar", "time"],
    "downloads": 107028780,
    "repositories": ["crates.io"]
  },
  "rust:glob": {
    "coordinates": "rust:glob",
    "name": "glob",
    "description": "Support for matching file paths against Unix shell style patterns. ",
    "license": [""],
    "tags": [],
    "downloads": 107025057,
    "repositories": ["crates.io"]
  },
  "rust:num-bigint": {
    "coordinates": "rust:num-bigint",
    "name": "num-bigint",
    "description": "Big integer implementation for Rust",
    "license": [""],
    "tags": ["mathematics", "bignum", "numerics"],
    "downloads": 106962756,
    "repositories": ["crates.io"]
  },
  "rust:subtle": {
    "coordinates": "rust:subtle",
    "name": "subtle",
    "description": "Pure-Rust traits and utilities for constant-time cryptographic implementations.",
    "license": [""],
    "tags": ["cryptography", "constant-time", "utilities", "crypto"],
    "downloads": 106628875,
    "repositories": ["crates.io"]
  },
  "rust:clap_lex": {
    "coordinates": "rust:clap_lex",
    "name": "clap_lex",
    "description": "Minimal, flexible command line parser",
    "license": [""],
    "tags": ["cli", "arg", "argument", "parse", "parser"],
    "downloads": 106354622,
    "repositories": ["crates.io"]
  },
  "rust:serde_urlencoded": {
    "coordinates": "rust:serde_urlencoded",
    "name": "serde_urlencoded",
    "description": "`x-www-form-urlencoded` meets Serde",
    "license": [""],
    "tags": ["urlencoded", "serialization", "serde"],
    "downloads": 106062013,
    "repositories": ["crates.io"]
  },
  "rust:rayon": {
    "coordinates": "rust:rayon",
    "name": "rayon",
    "description": "Simple work-stealing parallelism for Rust",
    "license": [""],
    "tags": ["join", "concurrency", "performance", "parallel", "thread"],
    "downloads": 104758499,
    "repositories": ["crates.io"]
  },
  "rust:windows_x86_64_gnu": {
    "coordinates": "rust:windows_x86_64_gnu",
    "name": "windows_x86_64_gnu",
    "description": "Import lib for Windows",
    "license": [""],
    "tags": [],
    "downloads": 104755009,
    "repositories": ["crates.io"]
  },
  "rust:untrusted": {
    "coordinates": "rust:untrusted",
    "name": "untrusted",
    "description": "Safe, fast, zero-panic, zero-crashing, zero-allocation parsing of untrusted inputs in Rust.",
    "license": [""],
    "tags": [],
    "downloads": 104693968,
    "repositories": ["crates.io"]
  },
  "rust:encoding_rs": {
    "coordinates": "rust:encoding_rs",
    "name": "encoding_rs",
    "description": "A Gecko-oriented implementation of the Encoding Standard",
    "license": [""],
    "tags": ["encoding", "web", "charset", "unicode"],
    "downloads": 104611379,
    "repositories": ["crates.io"]
  },
  "rust:windows_i686_msvc": {
    "coordinates": "rust:windows_i686_msvc",
    "name": "windows_i686_msvc",
    "description": "Import lib for Windows",
    "license": [""],
    "tags": [],
    "downloads": 104108078,
    "repositories": ["crates.io"]
  },
  "rust:ring": {
    "coordinates": "rust:ring",
    "name": "ring",
    "description": "Safe, fast, small crypto using Rust.",
    "license": [""],
    "tags": ["rand", "ecc", "rsa", "cryptography", "crypto"],
    "downloads": 104090888,
    "repositories": ["crates.io"]
  },
  "rust:hermit-abi": {
    "coordinates": "rust:hermit-abi",
    "name": "hermit-abi",
    "description": "Hermit system calls definitions.",
    "license": [""],
    "tags": ["libos", "unikernel"],
    "downloads": 103928866,
    "repositories": ["crates.io"]
  },
  "rust:proc-macro-error": {
    "coordinates": "rust:proc-macro-error",
    "name": "proc-macro-error",
    "description": "Almost drop-in replacement to panics in proc-macros",
    "license": [""],
    "tags": ["proc-macro", "errors", "error"],
    "downloads": 103684572,
    "repositories": ["crates.io"]
  },
  "rust:windows_aarch64_msvc": {
    "coordinates": "rust:windows_aarch64_msvc",
    "name": "windows_aarch64_msvc",
    "description": "Import lib for Windows",
    "license": [""],
    "tags": [],
    "downloads": 103684448,
    "repositories": ["crates.io"]
  },
  "rust:rayon-core": {
    "coordinates": "rust:rayon-core",
    "name": "rayon-core",
    "description": "Core APIs for Rayon",
    "license": [""],
    "tags": ["performance", "join", "thread", "concurrency", "parallel"],
    "downloads": 103616353,
    "repositories": ["crates.io"]
  },
  "rust:windows_i686_gnu": {
    "coordinates": "rust:windows_i686_gnu",
    "name": "windows_i686_gnu",
    "description": "Import lib for Windows",
    "license": [""],
    "tags": [],
    "downloads": 103524320,
    "repositories": ["crates.io"]
  },
  "rust:addr2line": {
    "coordinates": "rust:addr2line",
    "name": "addr2line",
    "description": "A cross-platform symbolication library written in Rust, using `gimli`",
    "license": [""],
    "tags": ["atos", "dwarf", "elf", "symbolicate", "debug"],
    "downloads": 103265253,
    "repositories": ["crates.io"]
  },
  "rust:proc-macro-error-attr": {
    "coordinates": "rust:proc-macro-error-attr",
    "name": "proc-macro-error-attr",
    "description": "Attribute macro for proc-macro-error crate",
    "license": [""],
    "tags": [],
    "downloads": 102623677,
    "repositories": ["crates.io"]
  },
  "rust:openssl-sys": {
    "coordinates": "rust:openssl-sys",
    "name": "openssl-sys",
    "description": "FFI bindings to OpenSSL",
    "license": [""],
    "tags": [],
    "downloads": 102553834,
    "repositories": ["crates.io"]
  },
  "rust:crypto-common": {
    "coordinates": "rust:crypto-common",
    "name": "crypto-common",
    "description": "Common cryptographic traits",
    "license": [""],
    "tags": ["traits", "crypto"],
    "downloads": 100560379,
    "repositories": ["crates.io"]
  },
  "rust:paste": {
    "coordinates": "rust:paste",
    "name": "paste",
    "description": "Macros for all your token pasting needs",
    "license": [""],
    "tags": ["macros"],
    "downloads": 100366091,
    "repositories": ["crates.io"]
  },
  "rust:reqwest": {
    "coordinates": "rust:reqwest",
    "name": "reqwest",
    "description": "higher level HTTP client library",
    "license": [""],
    "tags": ["request", "client", "http"],
    "downloads": 98555532,
    "repositories": ["crates.io"]
  },
  "rust:which": {
    "coordinates": "rust:which",
    "name": "which",
    "description": "A Rust equivalent of Unix command \"which\". Locate installed executable in cross platforms.",
    "license": [""],
    "tags": ["which", "which-rs", "command", "unix"],
    "downloads": 97045757,
    "repositories": ["crates.io"]
  },
  "rust:openssl-probe": {
    "coordinates": "rust:openssl-probe",
    "name": "openssl-probe",
    "description": "Tool for helping to find SSL certificate locations on the system for OpenSSL ",
    "license": [""],
    "tags": [],
    "downloads": 95883318,
    "repositories": ["crates.io"]
  },
  "rust:matches": {
    "coordinates": "rust:matches",
    "name": "matches",
    "description": "A macro to evaluate, as a boolean, whether an expression matches a pattern.",
    "license": [""],
    "tags": [],
    "downloads": 94341657,
    "repositories": ["crates.io"]
  },
  "rust:static_assertions": {
    "coordinates": "rust:static_assertions",
    "name": "static_assertions",
    "description": "Compile-time assertions to ensure that invariants are met.",
    "license": [""],
    "tags": ["assert", "testing", "static"],
    "downloads": 94118374,
    "repositories": ["crates.io"]
  },
  "rust:ipnet": {
    "coordinates": "rust:ipnet",
    "name": "ipnet",
    "description": "Provides types and useful methods for working with IPv4 and IPv6 network addresses, commonly called IP prefixes. The new `IpNet`, `Ipv4Net`, and `Ipv6Net` types build on the existing `IpAddr`, `Ipv4Addr`, and `Ipv6Addr` types already provided in Rust''s standard library and align to their design to stay consistent. The module also provides useful traits that extend `Ipv4Addr` and `Ipv6Addr` with methods for `Add`, `Sub`, `BitAnd`, and `BitOr` operations. The module only uses stable feature so it is guaranteed to compile using the stable toolchain.",
    "license": [""],
    "tags": ["subnet", "prefix", "cidr", "ip", "network"],
    "downloads": 93095122,
    "repositories": ["crates.io"]
  },
  "rust:sct": {
    "coordinates": "rust:sct",
    "name": "sct",
    "description": "Certificate transparency SCT verification library",
    "license": [""],
    "tags": [],
    "downloads": 92460954,
    "repositories": ["crates.io"]
  },
  "rust:clap_derive": {
    "coordinates": "rust:clap_derive",
    "name": "clap_derive",
    "description": "Parse command line argument by defining a struct, derive crate.",
    "license": [""],
    "tags": ["derive", "proc_macro", "clap", "parse", "cli"],
    "downloads": 92094229,
    "repositories": ["crates.io"]
  },
  "rust:darling_macro": {
    "coordinates": "rust:darling_macro",
    "name": "darling_macro",
    "description": "Internal support for a proc-macro library for reading attributes into structs when implementing custom derives. Use https://crates.io/crates/darling in your code. ",
    "license": [""],
    "tags": [],
    "downloads": 92032339,
    "repositories": ["crates.io"]
  },
  "rust:darling_core": {
    "coordinates": "rust:darling_core",
    "name": "darling_core",
    "description": "Helper crate for proc-macro library for reading attributes into structs when implementing custom derives. Use https://crates.io/crates/darling in your code. ",
    "license": [""],
    "tags": [],
    "downloads": 92022108,
    "repositories": ["crates.io"]
  },
  "rust:darling": {
    "coordinates": "rust:darling",
    "name": "darling",
    "description": "A proc-macro library for reading attributes into structs when implementing custom derives. ",
    "license": [""],
    "tags": [],
    "downloads": 92019669,
    "repositories": ["crates.io"]
  },
  "rust:openssl": {
    "coordinates": "rust:openssl",
    "name": "openssl",
    "description": "OpenSSL bindings",
    "license": [""],
    "tags": ["dtls", "ssl", "tls", "crypto"],
    "downloads": 91468486,
    "repositories": ["crates.io"]
  },
  "rust:libloading": {
    "coordinates": "rust:libloading",
    "name": "libloading",
    "description": "Bindings around the platform''s dynamic library loading primitives with greatly improved memory safety.",
    "license": [""],
    "tags": ["load", "dylib", "dlopen", "shared"],
    "downloads": 91214250,
    "repositories": ["crates.io"]
  },
  "rust:tracing-subscriber": {
    "coordinates": "rust:tracing-subscriber",
    "name": "tracing-subscriber",
    "description": "Utilities for implementing and composing `tracing` subscribers. ",
    "license": [""],
    "tags": ["subscriber", "metrics", "tracing", "logging"],
    "downloads": 89357314,
    "repositories": ["crates.io"]
  },
  "rust:tokio-rustls": {
    "coordinates": "rust:tokio-rustls",
    "name": "tokio-rustls",
    "description": "Asynchronous TLS/SSL streams for Tokio using Rustls.",
    "license": [""],
    "tags": [],
    "downloads": 89020077,
    "repositories": ["crates.io"]
  },
  "rust:foreign-types": {
    "coordinates": "rust:foreign-types",
    "name": "foreign-types",
    "description": "A framework for Rust wrappers over C APIs",
    "license": [""],
    "tags": [],
    "downloads": 88686658,
    "repositories": ["crates.io"]
  },
  "rust:foreign-types-shared": {
    "coordinates": "rust:foreign-types-shared",
    "name": "foreign-types-shared",
    "description": "An internal crate used by foreign-types",
    "license": [""],
    "tags": [],
    "downloads": 88117093,
    "repositories": ["crates.io"]
  },
  "rust:rustversion": {
    "coordinates": "rust:rustversion",
    "name": "rustversion",
    "description": "Conditional compilation according to rustc compiler version",
    "license": [""],
    "tags": [],
    "downloads": 86456194,
    "repositories": ["crates.io"]
  },
  "rust:quick-error": {
    "coordinates": "rust:quick-error",
    "name": "quick-error",
    "description": "    A macro which makes error types pleasant to write. ",
    "license": [""],
    "tags": ["type", "enum", "error", "macro"],
    "downloads": 86406833,
    "repositories": ["crates.io"]
  },
  "rust:iana-time-zone": {
    "coordinates": "rust:iana-time-zone",
    "name": "iana-time-zone",
    "description": "get the IANA time zone for the current system",
    "license": [""],
    "tags": ["iana", "time"],
    "downloads": 85322195,
    "repositories": ["crates.io"]
  },
  "rust:winapi-x86_64-pc-windows-gnu": {
    "coordinates": "rust:winapi-x86_64-pc-windows-gnu",
    "name": "winapi-x86_64-pc-windows-gnu",
    "description": "Import libraries for the x86_64-pc-windows-gnu target. Please don''t use this crate directly, depend on winapi instead.",
    "license": [""],
    "tags": ["windows"],
    "downloads": 84019231,
    "repositories": ["crates.io"]
  },
  "rust:webpki-roots": {
    "coordinates": "rust:webpki-roots",
    "name": "webpki-roots",
    "description": "Mozilla''s CA root certificates for use with webpki",
    "license": [""],
    "tags": [],
    "downloads": 83920982,
    "repositories": ["crates.io"]
  },
  "rust:minimal-lexical": {
    "coordinates": "rust:minimal-lexical",
    "name": "minimal-lexical",
    "description": "Fast float parsing conversion routines.",
    "license": [""],
    "tags": ["parsing", "no_std"],
    "downloads": 83824845,
    "repositories": ["crates.io"]
  },
  "rust:proc-macro-hack": {
    "coordinates": "rust:proc-macro-hack",
    "name": "proc-macro-hack",
    "description": "Procedural macros in expression position",
    "license": [""],
    "tags": [],
    "downloads": 83383392,
    "repositories": ["crates.io"]
  },
  "rust:bstr": {
    "coordinates": "rust:bstr",
    "name": "bstr",
    "description": "A string type that is not required to be valid UTF-8.",
    "license": [""],
    "tags": ["str", "text", "byte", "string", "bytes"],
    "downloads": 83245116,
    "repositories": ["crates.io"]
  },
  "rust:winapi-i686-pc-windows-gnu": {
    "coordinates": "rust:winapi-i686-pc-windows-gnu",
    "name": "winapi-i686-pc-windows-gnu",
    "description": "Import libraries for the i686-pc-windows-gnu target. Please don''t use this crate directly, depend on winapi instead.",
    "license": [""],
    "tags": ["windows"],
    "downloads": 83210392,
    "repositories": ["crates.io"]
  },
  "rust:strum_macros": {
    "coordinates": "rust:strum_macros",
    "name": "strum_macros",
    "description": "Helpful macros for working with enums and strings",
    "license": [""],
    "tags": ["macros", "proc-macros", "string", "enum"],
    "downloads": 82035804,
    "repositories": ["crates.io"]
  },
  "rust:bumpalo": {
    "coordinates": "rust:bumpalo",
    "name": "bumpalo",
    "description": "A fast bump allocation arena for Rust.",
    "license": [""],
    "tags": [],
    "downloads": 81600691,
    "repositories": ["crates.io"]
  },
  "rust:zeroize": {
    "coordinates": "rust:zeroize",
    "name": "zeroize",
    "description": "Securely clear secrets from memory with a simple trait built on stable Rust primitives which guarantee memory is zeroed using an operation will not be ''optimized away'' by the compiler. Uses a portable pure Rust implementation that works everywhere, even WASM! ",
    "license": [""],
    "tags": ["memset", "memory", "volatile", "zero", "secure"],
    "downloads": 81562487,
    "repositories": ["crates.io"]
  },
  "rust:jobserver": {
    "coordinates": "rust:jobserver",
    "name": "jobserver",
    "description": "An implementation of the GNU Make jobserver for Rust. ",
    "license": [""],
    "tags": [],
    "downloads": 80971938,
    "repositories": ["crates.io"]
  },
  "rust:linked-hash-map": {
    "coordinates": "rust:linked-hash-map",
    "name": "linked-hash-map",
    "description": "A HashMap wrapper that holds key-value pairs in insertion order",
    "license": [""],
    "tags": ["data-structures"],
    "downloads": 80924230,
    "repositories": ["crates.io"]
  },
  "rust:semver-parser": {
    "coordinates": "rust:semver-parser",
    "name": "semver-parser",
    "description": "Parsing of the semver spec. ",
    "license": [""],
    "tags": ["semver", "semantic", "version", "parser"],
    "downloads": 80365725,
    "repositories": ["crates.io"]
  },
  "rust:sharded-slab": {
    "coordinates": "rust:sharded-slab",
    "name": "sharded-slab",
    "description": "A lock-free concurrent slab. ",
    "license": [""],
    "tags": ["slab", "atomic", "allocator", "lock-free"],
    "downloads": 80294295,
    "repositories": ["crates.io"]
  },
  "rust:phf_shared": {
    "coordinates": "rust:phf_shared",
    "name": "phf_shared",
    "description": "Support code shared by PHF libraries",
    "license": [""],
    "tags": [],
    "downloads": 80050408,
    "repositories": ["crates.io"]
  },
  "rust:remove_dir_all": {
    "coordinates": "rust:remove_dir_all",
    "name": "remove_dir_all",
    "description": "A safe, reliable implementation of remove_dir_all for Windows",
    "license": [""],
    "tags": ["utility", "filesystem", "remove_dir", "windows"],
    "downloads": 79788434,
    "repositories": ["crates.io"]
  },
  "rust:errno": {
    "coordinates": "rust:errno",
    "name": "errno",
    "description": "Cross-platform interface to the `errno` variable.",
    "license": [""],
    "tags": [],
    "downloads": 79572576,
    "repositories": ["crates.io"]
  },
  "rust:windows-targets": {
    "coordinates": "rust:windows-targets",
    "name": "windows-targets",
    "description": "Import libs for Windows",
    "license": [""],
    "tags": [],
    "downloads": 79519499,
    "repositories": ["crates.io"]
  },
  "rust:fixedbitset": {
    "coordinates": "rust:fixedbitset",
    "name": "fixedbitset",
    "description": "FixedBitSet is a simple bitset collection",
    "license": [""],
    "tags": ["bitvec", "data-structure", "no_std", "bitset", "container"],
    "downloads": 79339975,
    "repositories": ["crates.io"]
  },
  "rust:petgraph": {
    "coordinates": "rust:petgraph",
    "name": "petgraph",
    "description": "Graph data structure library. Provides graph types and graph algorithms.",
    "license": [""],
    "tags": ["unionfind", "graph-algorithms", "data-structure", "graph"],
    "downloads": 79259481,
    "repositories": ["crates.io"]
  },
  "rust:unicase": {
    "coordinates": "rust:unicase",
    "name": "unicase",
    "description": "A case-insensitive wrapper around strings.",
    "license": [""],
    "tags": ["lowercase", "case-folding", "case", "no_std", "case-insensitive"],
    "downloads": 79236484,
    "repositories": ["crates.io"]
  },
  "rust:vec_map": {
    "coordinates": "rust:vec_map",
    "name": "vec_map",
    "description": "A simple map based on a vector for small integer keys",
    "license": [""],
    "tags": [
      "contain-rs",
      "vecmap",
      "vec_map",
      "collections",
      "data-structures"
    ],
    "downloads": 79234813,
    "repositories": ["crates.io"]
  },
  "rust:windows_aarch64_gnullvm": {
    "coordinates": "rust:windows_aarch64_gnullvm",
    "name": "windows_aarch64_gnullvm",
    "description": "Import lib for Windows",
    "license": [""],
    "tags": [],
    "downloads": 78865105,
    "repositories": ["crates.io"]
  },
  "rust:windows_x86_64_gnullvm": {
    "coordinates": "rust:windows_x86_64_gnullvm",
    "name": "windows_x86_64_gnullvm",
    "description": "Import lib for Windows",
    "license": [""],
    "tags": [],
    "downloads": 78848814,
    "repositories": ["crates.io"]
  },
  "rust:tracing-log": {
    "coordinates": "rust:tracing-log",
    "name": "tracing-log",
    "description": "Provides compatibility between `tracing` and the `log` crate. ",
    "license": [""],
    "tags": ["log", "tracing", "logging"],
    "downloads": 78839139,
    "repositories": ["crates.io"]
  },
  "rust:proc-macro-crate": {
    "coordinates": "rust:proc-macro-crate",
    "name": "proc-macro-crate",
    "description": "Replacement for crate (macro_rules keyword) in proc-macros ",
    "license": [""],
    "tags": ["macro-rules", "crate", "proc-macro", "macro"],
    "downloads": 78667400,
    "repositories": ["crates.io"]
  },
  "rust:wasm-bindgen": {
    "coordinates": "rust:wasm-bindgen",
    "name": "wasm-bindgen",
    "description": "Easy support for interacting between JS and Rust. ",
    "license": [""],
    "tags": [],
    "downloads": 78652198,
    "repositories": ["crates.io"]
  },
  "rust:wasm-bindgen-backend": {
    "coordinates": "rust:wasm-bindgen-backend",
    "name": "wasm-bindgen-backend",
    "description": "Backend code generation of the wasm-bindgen tool ",
    "license": [""],
    "tags": [],
    "downloads": 78551926,
    "repositories": ["crates.io"]
  },
  "rust:wasm-bindgen-macro": {
    "coordinates": "rust:wasm-bindgen-macro",
    "name": "wasm-bindgen-macro",
    "description": "Definition of the `#[wasm_bindgen]` attribute, an internal dependency ",
    "license": [""],
    "tags": [],
    "downloads": 78510142,
    "repositories": ["crates.io"]
  },
  "rust:wasm-bindgen-shared": {
    "coordinates": "rust:wasm-bindgen-shared",
    "name": "wasm-bindgen-shared",
    "description": "Shared support between wasm-bindgen and wasm-bindgen cli, an internal dependency. ",
    "license": [""],
    "tags": [],
    "downloads": 78470467,
    "repositories": ["crates.io"]
  },
  "rust:wasm-bindgen-macro-support": {
    "coordinates": "rust:wasm-bindgen-macro-support",
    "name": "wasm-bindgen-macro-support",
    "description": "The part of the implementation of the `#[wasm_bindgen]` attribute that is not in the shared backend crate ",
    "license": [""],
    "tags": [],
    "downloads": 78454712,
    "repositories": ["crates.io"]
  },
  "rust:rustc-hash": {
    "coordinates": "rust:rustc-hash",
    "name": "rustc-hash",
    "description": "speed, non-cryptographic hash used in rustc",
    "license": [""],
    "tags": ["fxhash", "hash", "rustc"],
    "downloads": 77452273,
    "repositories": ["crates.io"]
  },
  "rust:strum": {
    "coordinates": "rust:strum",
    "name": "strum",
    "description": "Helpful macros for working with enums and strings",
    "license": [""],
    "tags": ["macros", "proc-macros", "string", "enum"],
    "downloads": 76922085,
    "repositories": ["crates.io"]
  },
  "rust:sha-1": {
    "coordinates": "rust:sha-1",
    "name": "sha-1",
    "description": "SHA-1 hash function. This crate is deprecated! Use the sha1 crate instead.",
    "license": [""],
    "tags": ["crypto", "hash", "sha1", "digest"],
    "downloads": 76664778,
    "repositories": ["crates.io"]
  },
  "rust:sha1": {
    "coordinates": "rust:sha1",
    "name": "sha1",
    "description": "SHA-1 hash function",
    "license": [""],
    "tags": ["sha1", "crypto", "hash", "digest"],
    "downloads": 76095503,
    "repositories": ["crates.io"]
  },
  "rust:native-tls": {
    "coordinates": "rust:native-tls",
    "name": "native-tls",
    "description": "A wrapper over a platform''s native TLS implementation",
    "license": [""],
    "tags": [],
    "downloads": 75911941,
    "repositories": ["crates.io"]
  },
  "rust:tokio-stream": {
    "coordinates": "rust:tokio-stream",
    "name": "tokio-stream",
    "description": "Utilities to work with `Stream` and `tokio`. ",
    "license": [""],
    "tags": [],
    "downloads": 75477538,
    "repositories": ["crates.io"]
  },
  "rust:num-rational": {
    "coordinates": "rust:num-rational",
    "name": "num-rational",
    "description": "Rational numbers implementation for Rust",
    "license": [""],
    "tags": ["fractions", "numerics", "mathematics"],
    "downloads": 75464874,
    "repositories": ["crates.io"]
  },
  "rust:siphasher": {
    "coordinates": "rust:siphasher",
    "name": "siphasher",
    "description": "SipHash-2-4, SipHash-1-3 and 128-bit variants in pure Rust",
    "license": [""],
    "tags": ["siphash", "crypto", "hash"],
    "downloads": 74946752,
    "repositories": ["crates.io"]
  },
  "rust:webpki": {
    "coordinates": "rust:webpki",
    "name": "webpki",
    "description": "Web PKI X.509 Certificate Verification.",
    "license": [""],
    "tags": [],
    "downloads": 74498405,
    "repositories": ["crates.io"]
  },
  "rust:rustls-pemfile": {
    "coordinates": "rust:rustls-pemfile",
    "name": "rustls-pemfile",
    "description": "Basic .pem file parser for keys and certificates",
    "license": [""],
    "tags": [],
    "downloads": 73512215,
    "repositories": ["crates.io"]
  },
  "rust:js-sys": {
    "coordinates": "rust:js-sys",
    "name": "js-sys",
    "description": "Bindings for all JS global objects and functions in all JS environments like Node.js and browsers, built on `#[wasm_bindgen]` using the `wasm-bindgen` crate. ",
    "license": [""],
    "tags": [],
    "downloads": 73323732,
    "repositories": ["crates.io"]
  },
  "rust:os_str_bytes": {
    "coordinates": "rust:os_str_bytes",
    "name": "os_str_bytes",
    "description": "Lossless functionality for platform-native strings ",
    "license": [""],
    "tags": ["osstr", "osstring", "windows", "path", "bytes"],
    "downloads": 71156961,
    "repositories": ["crates.io"]
  },
  "rust:winapi-util": {
    "coordinates": "rust:winapi-util",
    "name": "winapi-util",
    "description": "A dumping ground for high level safe wrappers over winapi.",
    "license": [""],
    "tags": ["win", "windows", "winapi", "util"],
    "downloads": 70419356,
    "repositories": ["crates.io"]
  },
  "rust:hyper-tls": {
    "coordinates": "rust:hyper-tls",
    "name": "hyper-tls",
    "description": "Default TLS implementation for use with hyper",
    "license": [""],
    "tags": ["http", "https", "hyper", "ssl", "tls"],
    "downloads": 70334495,
    "repositories": ["crates.io"]
  },
  "rust:toml_edit": {
    "coordinates": "rust:toml_edit",
    "name": "toml_edit",
    "description": "Yet another format-preserving TOML parser.",
    "license": [""],
    "tags": ["encoding", "toml"],
    "downloads": 70333547,
    "repositories": ["crates.io"]
  },
  "rust:dirs": {
    "coordinates": "rust:dirs",
    "name": "dirs",
    "description": "A tiny low-level library that provides platform-specific standard locations of directories for config, cache and other data on Linux, Windows, macOS and Redox by leveraging the mechanisms defined by the XDG base/user directory specifications on Linux, the Known Folder API on Windows, and the Standard Directory guidelines on macOS.",
    "license": [""],
    "tags": ["app_dirs", "xdg", "path", "folder", "basedir"],
    "downloads": 69575448,
    "repositories": ["crates.io"]
  },
  "rust:prost": {
    "coordinates": "rust:prost",
    "name": "prost",
    "description": "A Protocol Buffers implementation for the Rust Language.",
    "license": [""],
    "tags": ["protobuf", "serialization"],
    "downloads": 69329962,
    "repositories": ["crates.io"]
  },
  "rust:prost-derive": {
    "coordinates": "rust:prost-derive",
    "name": "prost-derive",
    "description": "A Protocol Buffers implementation for the Rust Language.",
    "license": [""],
    "tags": [],
    "downloads": 69243299,
    "repositories": ["crates.io"]
  },
  "rust:io-lifetimes": {
    "coordinates": "rust:io-lifetimes",
    "name": "io-lifetimes",
    "description": "A low-level I/O ownership and borrowing library",
    "license": [""],
    "tags": ["api", "io"],
    "downloads": 69136643,
    "repositories": ["crates.io"]
  },
  "rust:phf": {
    "coordinates": "rust:phf",
    "name": "phf",
    "description": "Runtime support for perfect hash function data structures",
    "license": [""],
    "tags": [],
    "downloads": 68718414,
    "repositories": ["crates.io"]
  },
  "rust:filetime": {
    "coordinates": "rust:filetime",
    "name": "filetime",
    "description": "Platform-agnostic accessors of timestamps in File metadata ",
    "license": [""],
    "tags": ["mtime", "timestamp"],
    "downloads": 67930976,
    "repositories": ["crates.io"]
  },
  "rust:matchers": {
    "coordinates": "rust:matchers",
    "name": "matchers",
    "description": "Regex matching on character and byte streams. ",
    "license": [""],
    "tags": ["regex", "pattern", "streaming", "match"],
    "downloads": 67290209,
    "repositories": ["crates.io"]
  },
  "rust:rand_hc": {
    "coordinates": "rust:rand_hc",
    "name": "rand_hc",
    "description": "HC128 random number generator ",
    "license": [""],
    "tags": ["hc128", "random", "rng"],
    "downloads": 66783357,
    "repositories": ["crates.io"]
  },
  "rust:convert_case": {
    "coordinates": "rust:convert_case",
    "name": "convert_case",
    "description": "Convert strings into any case",
    "license": [""],
    "tags": ["casing", "case", "string"],
    "downloads": 66665180,
    "repositories": ["crates.io"]
  },
  "rust:time-core": {
    "coordinates": "rust:time-core",
    "name": "time-core",
    "description": "This crate is an implementation detail and should not be relied upon directly.",
    "license": [""],
    "tags": ["time", "date", "duration", "calendar"],
    "downloads": 66604012,
    "repositories": ["crates.io"]
  },
  "rust:vcpkg": {
    "coordinates": "rust:vcpkg",
    "name": "vcpkg",
    "description": "A library to find native dependencies in a vcpkg tree at build time in order to be used in Cargo build scripts. ",
    "license": [""],
    "tags": ["macos", "linux", "build-dependencies", "windows"],
    "downloads": 66477651,
    "repositories": ["crates.io"]
  },
  "rust:shlex": {
    "coordinates": "rust:shlex",
    "name": "shlex",
    "description": "Split a string into shell words, like Python''s shlex.",
    "license": [""],
    "tags": [],
    "downloads": 66304538,
    "repositories": ["crates.io"]
  },
  "rust:crossbeam-queue": {
    "coordinates": "rust:crossbeam-queue",
    "name": "crossbeam-queue",
    "description": "Concurrent queues",
    "license": [""],
    "tags": ["queue", "producer", "consumer", "lock-free", "mpmc"],
    "downloads": 66082526,
    "repositories": ["crates.io"]
  },
  "rust:ident_case": {
    "coordinates": "rust:ident_case",
    "name": "ident_case",
    "description": "Utility for applying case rules to Rust identifiers.",
    "license": [""],
    "tags": [],
    "downloads": 65881797,
    "repositories": ["crates.io"]
  },
  "rust:hyper-rustls": {
    "coordinates": "rust:hyper-rustls",
    "name": "hyper-rustls",
    "description": "Rustls+hyper integration for pure rust HTTPS",
    "license": [""],
    "tags": [],
    "downloads": 65816711,
    "repositories": ["crates.io"]
  },
  "rust:synstructure": {
    "coordinates": "rust:synstructure",
    "name": "synstructure",
    "description": "Helper methods and macros for custom derives",
    "license": [""],
    "tags": ["enum", "expand_substructure", "macros", "syn", "derive"],
    "downloads": 65567324,
    "repositories": ["crates.io"]
  },
  "rust:event-listener": {
    "coordinates": "rust:event-listener",
    "name": "event-listener",
    "description": "Notify async tasks or threads",
    "license": [""],
    "tags": ["park", "eventcount", "condvar", "wake", "blocking"],
    "downloads": 65480094,
    "repositories": ["crates.io"]
  },
  "rust:core-foundation-sys": {
    "coordinates": "rust:core-foundation-sys",
    "name": "core-foundation-sys",
    "description": "Bindings to Core Foundation for macOS",
    "license": [""],
    "tags": [],
    "downloads": 64948335,
    "repositories": ["crates.io"]
  },
  "rust:lazycell": {
    "coordinates": "rust:lazycell",
    "name": "lazycell",
    "description": "A library providing a lazily filled Cell struct",
    "license": [""],
    "tags": ["lazycell", "cell", "lazy", "library"],
    "downloads": 64500396,
    "repositories": ["crates.io"]
  },
  "rust:num-complex": {
    "coordinates": "rust:num-complex",
    "name": "num-complex",
    "description": "Complex numbers implementation for Rust",
    "license": [""],
    "tags": ["numerics", "mathematics"],
    "downloads": 63454680,
    "repositories": ["crates.io"]
  },
  "rust:phf_generator": {
    "coordinates": "rust:phf_generator",
    "name": "phf_generator",
    "description": "PHF generation logic",
    "license": [""],
    "tags": [],
    "downloads": 63444410,
    "repositories": ["crates.io"]
  },
  "rust:dirs-sys": {
    "coordinates": "rust:dirs-sys",
    "name": "dirs-sys",
    "description": "System-level helper functions for the dirs and directories crates.",
    "license": [""],
    "tags": [],
    "downloads": 63077101,
    "repositories": ["crates.io"]
  },
  "rust:half": {
    "coordinates": "rust:half",
    "name": "half",
    "description": "Half-precision floating point f16 and bf16 types for Rust implementing the IEEE 754-2008 standard binary16 and bfloat16 types.",
    "license": [""],
    "tags": ["f16", "bfloat16", "no_std"],
    "downloads": 63019601,
    "repositories": ["crates.io"]
  },
  "rust:crypto-mac": {
    "coordinates": "rust:crypto-mac",
    "name": "crypto-mac",
    "description": "Trait for Message Authentication Code (MAC) algorithms",
    "license": [""],
    "tags": ["mac", "crypto"],
    "downloads": 62854884,
    "repositories": ["crates.io"]
  },
  "rust:web-sys": {
    "coordinates": "rust:web-sys",
    "name": "web-sys",
    "description": "Bindings for all Web APIs, a procedurally generated crate from WebIDL ",
    "license": [""],
    "tags": [],
    "downloads": 62739708,
    "repositories": ["crates.io"]
  },
  "rust:num-iter": {
    "coordinates": "rust:num-iter",
    "name": "num-iter",
    "description": "External iterators for generic mathematics",
    "license": [""],
    "tags": ["mathematics", "numerics"],
    "downloads": 62290575,
    "repositories": ["crates.io"]
  },
  "rust:cipher": {
    "coordinates": "rust:cipher",
    "name": "cipher",
    "description": "Traits for describing block ciphers and stream ciphers",
    "license": [""],
    "tags": ["stream-cipher", "crypto", "block-cipher", "trait"],
    "downloads": 62128560,
    "repositories": ["crates.io"]
  },
  "rust:pest": {
    "coordinates": "rust:pest",
    "name": "pest",
    "description": "The Elegant Parser",
    "license": [""],
    "tags": ["pest", "grammar", "peg", "parser"],
    "downloads": 61250785,
    "repositories": ["crates.io"]
  },
  "rust:bindgen": {
    "coordinates": "rust:bindgen",
    "name": "bindgen",
    "description": "Automatically generates Rust FFI bindings to C and C++ libraries.",
    "license": [""],
    "tags": ["ffi", "code-generation", "bindings"],
    "downloads": 60953221,
    "repositories": ["crates.io"]
  },
  "rust:prost-types": {
    "coordinates": "rust:prost-types",
    "name": "prost-types",
    "description": "A Protocol Buffers implementation for the Rust Language.",
    "license": [""],
    "tags": [],
    "downloads": 60876140,
    "repositories": ["crates.io"]
  },
  "rust:bincode": {
    "coordinates": "rust:bincode",
    "name": "bincode",
    "description": "A binary serialization / deserialization strategy for transforming structs into bytes and vice versa!",
    "license": [""],
    "tags": ["deserialize", "serialize", "binary", "encode", "decode"],
    "downloads": 60871447,
    "repositories": ["crates.io"]
  },
  "rust:stable_deref_trait": {
    "coordinates": "rust:stable_deref_trait",
    "name": "stable_deref_trait",
    "description": "An unsafe marker trait for types like Box and Rc that dereference to a stable address even when moved, and hence can be used with libraries such as owning_ref and rental. ",
    "license": [""],
    "tags": [],
    "downloads": 60227769,
    "repositories": ["crates.io"]
  },
  "rust:derive_more": {
    "coordinates": "rust:derive_more",
    "name": "derive_more",
    "description": "Adds #[derive(x)] macros for more traits",
    "license": [""],
    "tags": ["add", "from", "display", "intoiterator", "derive"],
    "downloads": 59990667,
    "repositories": ["crates.io"]
  },
  "rust:is-terminal": {
    "coordinates": "rust:is-terminal",
    "name": "is-terminal",
    "description": "Test whether a given stream is a terminal",
    "license": [""],
    "tags": ["isatty", "tty", "terminal"],
    "downloads": 59436888,
    "repositories": ["crates.io"]
  },
  "rust:zstd-safe": {
    "coordinates": "rust:zstd-safe",
    "name": "zstd-safe",
    "description": "Safe low-level bindings for the zstd compression library.",
    "license": [""],
    "tags": ["zstandard", "zstd", "compression"],
    "downloads": 59395783,
    "repositories": ["crates.io"]
  },
  "rust:zstd": {
    "coordinates": "rust:zstd",
    "name": "zstd",
    "description": "Binding for the zstd compression library.",
    "license": [""],
    "tags": ["zstandard", "zstd", "compression"],
    "downloads": 59159396,
    "repositories": ["crates.io"]
  },
  "rust:serde_yaml": {
    "coordinates": "rust:serde_yaml",
    "name": "serde_yaml",
    "description": "YAML data format for Serde",
    "license": [""],
    "tags": ["yaml", "serde", "serialization"],
    "downloads": 58722594,
    "repositories": ["crates.io"]
  },
  "rust:libz-sys": {
    "coordinates": "rust:libz-sys",
    "name": "libz-sys",
    "description": "Low-level bindings to the system libz library (also known as zlib).",
    "license": [""],
    "tags": ["zlib-ng", "zlib"],
    "downloads": 58316559,
    "repositories": ["crates.io"]
  },
  "rust:block-padding": {
    "coordinates": "rust:block-padding",
    "name": "block-padding",
    "description": "Padding and unpadding of messages divided into blocks.",
    "license": [""],
    "tags": ["pkcs7", "ansix923", "padding", "iso7816"],
    "downloads": 58267938,
    "repositories": ["crates.io"]
  },
  "rust:tokio-native-tls": {
    "coordinates": "rust:tokio-native-tls",
    "name": "tokio-native-tls",
    "description": "An implementation of TLS/SSL streams for Tokio using native-tls giving an implementation of TLS for nonblocking I/O streams. ",
    "license": [""],
    "tags": [],
    "downloads": 57708738,
    "repositories": ["crates.io"]
  },
  "rust:ordered-float": {
    "coordinates": "rust:ordered-float",
    "name": "ordered-float",
    "description": "Wrappers for total ordering on floats",
    "license": [""],
    "tags": ["no_std", "f32", "f64", "ord", "sort"],
    "downloads": 57669811,
    "repositories": ["crates.io"]
  },
  "rust:mime_guess": {
    "coordinates": "rust:mime_guess",
    "name": "mime_guess",
    "description": "A simple crate for detection of a file''s MIME type by its extension.",
    "license": [""],
    "tags": ["extension", "filesystem", "mime"],
    "downloads": 56979686,
    "repositories": ["crates.io"]
  },
  "rust:tower-layer": {
    "coordinates": "rust:tower-layer",
    "name": "tower-layer",
    "description": "Decorates a `Service` to allow easy composition between `Service`s. ",
    "license": [""],
    "tags": [],
    "downloads": 56557193,
    "repositories": ["crates.io"]
  },
  "rust:ucd-trie": {
    "coordinates": "rust:ucd-trie",
    "name": "ucd-trie",
    "description": "A trie for storing Unicode codepoint sets and maps. ",
    "license": [""],
    "tags": ["codepoint", "character", "unicode", "trie", "database"],
    "downloads": 56210305,
    "repositories": ["crates.io"]
  },
  "rust:tower": {
    "coordinates": "rust:tower",
    "name": "tower",
    "description": "Tower is a library of modular and reusable components for building robust clients and servers. ",
    "license": [""],
    "tags": ["futures", "io", "async", "service", "non-blocking"],
    "downloads": 55678712,
    "repositories": ["crates.io"]
  },
  "rust:aes": {
    "coordinates": "rust:aes",
    "name": "aes",
    "description": "Pure Rust implementation of the Advanced Encryption Standard (a.k.a. Rijndael)",
    "license": [""],
    "tags": ["rijndael", "aes", "crypto", "block-cipher"],
    "downloads": 55381173,
    "repositories": ["crates.io"]
  },
  "rust:libm": {
    "coordinates": "rust:libm",
    "name": "libm",
    "description": "libm in pure Rust",
    "license": [""],
    "tags": ["math", "libm"],
    "downloads": 55329322,
    "repositories": ["crates.io"]
  },
  "rust:yaml-rust": {
    "coordinates": "rust:yaml-rust",
    "name": "yaml-rust",
    "description": "The missing YAML 1.2 parser for rust",
    "license": [""],
    "tags": [],
    "downloads": 55180129,
    "repositories": ["crates.io"]
  },
  "rust:dashmap": {
    "coordinates": "rust:dashmap",
    "name": "dashmap",
    "description": "Blazing fast concurrent HashMap for Rust.",
    "license": [""],
    "tags": ["atomic", "hashmap", "concurrent"],
    "downloads": 54722593,
    "repositories": ["crates.io"]
  },
  "rust:zstd-sys": {
    "coordinates": "rust:zstd-sys",
    "name": "zstd-sys",
    "description": "Low-level bindings for the zstd compression library.",
    "license": [""],
    "tags": ["zstandard", "zstd", "compression"],
    "downloads": 54625454,
    "repositories": ["crates.io"]
  },
  "rust:async-stream": {
    "coordinates": "rust:async-stream",
    "name": "async-stream",
    "description": "Asynchronous streams using async & await notation",
    "license": [""],
    "tags": [],
    "downloads": 54238574,
    "repositories": ["crates.io"]
  },
  "rust:async-stream-impl": {
    "coordinates": "rust:async-stream-impl",
    "name": "async-stream-impl",
    "description": "proc macros for async-stream crate",
    "license": [""],
    "tags": [],
    "downloads": 54167350,
    "repositories": ["crates.io"]
  },
  "rust:rand_pcg": {
    "coordinates": "rust:rand_pcg",
    "name": "rand_pcg",
    "description": "Selected PCG random number generators ",
    "license": [""],
    "tags": ["random", "pcg", "rng"],
    "downloads": 54057118,
    "repositories": ["crates.io"]
  },
  "rust:prost-build": {
    "coordinates": "rust:prost-build",
    "name": "prost-build",
    "description": "A Protocol Buffers implementation for the Rust Language.",
    "license": [""],
    "tags": [],
    "downloads": 53710658,
    "repositories": ["crates.io"]
  },
  "rust:clang-sys": {
    "coordinates": "rust:clang-sys",
    "name": "clang-sys",
    "description": "Rust bindings for libclang.",
    "license": [""],
    "tags": [],
    "downloads": 53370874,
    "repositories": ["crates.io"]
  },
  "rust:utf8parse": {
    "coordinates": "rust:utf8parse",
    "name": "utf8parse",
    "description": "Table-driven UTF-8 parser",
    "license": [""],
    "tags": ["parse", "table", "utf8"],
    "downloads": 53137107,
    "repositories": ["crates.io"]
  },
  "rust:winnow": {
    "coordinates": "rust:winnow",
    "name": "winnow",
    "description": "A byte-oriented, zero-copy, parser combinators library",
    "license": [""],
    "tags": ["bit", "parser-combinators", "parsing", "streaming", "parser"],
    "downloads": 53030962,
    "repositories": ["crates.io"]
  },
  "rust:md-5": {
    "coordinates": "rust:md-5",
    "name": "md-5",
    "description": "MD5 hash function",
    "license": [""],
    "tags": ["md5", "crypto", "hash", "digest"],
    "downloads": 52336950,
    "repositories": ["crates.io"]
  },
  "rust:clap_builder": {
    "coordinates": "rust:clap_builder",
    "name": "clap_builder",
    "description": "A simple to use, efficient, and full-featured Command Line Argument Parser",
    "license": [""],
    "tags": ["argument", "arg", "parse", "parser", "cli"],
    "downloads": 51717621,
    "repositories": ["crates.io"]
  },
  "rust:cexpr": {
    "coordinates": "rust:cexpr",
    "name": "cexpr",
    "description": "A C expression parser and evaluator",
    "license": [""],
    "tags": ["c", "expression", "parser"],
    "downloads": 51580852,
    "repositories": ["crates.io"]
  },
  "rust:core-foundation": {
    "coordinates": "rust:core-foundation",
    "name": "core-foundation",
    "description": "Bindings to Core Foundation for macOS",
    "license": [""],
    "tags": ["macos", "objc", "framework"],
    "downloads": 50976357,
    "repositories": ["crates.io"]
  },
  "rust:num": {
    "coordinates": "rust:num",
    "name": "num",
    "description": "A collection of numeric types and traits for Rust, including bigint, complex, rational, range iterators, generic integers, and more! ",
    "license": [""],
    "tags": ["mathematics", "numerics", "bignum"],
    "downloads": 50483802,
    "repositories": ["crates.io"]
  },
  "rust:toml_datetime": {
    "coordinates": "rust:toml_datetime",
    "name": "toml_datetime",
    "description": "A TOML-compatible datetime type",
    "license": [""],
    "tags": ["toml", "encoding"],
    "downloads": 50279561,
    "repositories": ["crates.io"]
  },
  "rust:bit-vec": {
    "coordinates": "rust:bit-vec",
    "name": "bit-vec",
    "description": "A vector of bits",
    "license": [""],
    "tags": ["bit", "bitmask", "bitmap", "bitvec", "data-structures"],
    "downloads": 50013512,
    "repositories": ["crates.io"]
  },
  "rust:tracing-futures": {
    "coordinates": "rust:tracing-futures",
    "name": "tracing-futures",
    "description": "Utilities for instrumenting `futures` with `tracing`. ",
    "license": [""],
    "tags": ["logging", "profiling", "futures", "async", "tracing"],
    "downloads": 49959380,
    "repositories": ["crates.io"]
  },
  "rust:constant_time_eq": {
    "coordinates": "rust:constant_time_eq",
    "name": "constant_time_eq",
    "description": "Compares two equal-sized byte strings in constant time.",
    "license": [""],
    "tags": ["constant_time"],
    "downloads": 49760503,
    "repositories": ["crates.io"]
  },
  "rust:multimap": {
    "coordinates": "rust:multimap",
    "name": "multimap",
    "description": "A multimap implementation.",
    "license": [""],
    "tags": [],
    "downloads": 49753508,
    "repositories": ["crates.io"]
  },
  "rust:nu-ansi-term": {
    "coordinates": "rust:nu-ansi-term",
    "name": "nu-ansi-term",
    "description": "Library for ANSI terminal colors and styles (bold, underline)",
    "license": [""],
    "tags": [],
    "downloads": 49611559,
    "repositories": ["crates.io"]
  },
  "rust:ctor": {
    "coordinates": "rust:ctor",
    "name": "ctor",
    "description": "__attribute__((constructor)) for Rust",
    "license": [""],
    "tags": [],
    "downloads": 49372149,
    "repositories": ["crates.io"]
  },
  "rust:anstyle": {
    "coordinates": "rust:anstyle",
    "name": "anstyle",
    "description": "ANSI text styling",
    "license": [""],
    "tags": ["no_std", "color", "ansi", "terminal"],
    "downloads": 49312280,
    "repositories": ["crates.io"]
  },
  "rust:data-encoding": {
    "coordinates": "rust:data-encoding",
    "name": "data-encoding",
    "description": "Efficient and customizable data-encoding functions like base64, base32, and hex",
    "license": [""],
    "tags": ["base64", "no_std", "base32", "hex"],
    "downloads": 49302597,
    "repositories": ["crates.io"]
  },
  "rust:wasm-bindgen-futures": {
    "coordinates": "rust:wasm-bindgen-futures",
    "name": "wasm-bindgen-futures",
    "description": "Bridging the gap between Rust Futures and JavaScript Promises",
    "license": [""],
    "tags": [],
    "downloads": 49250442,
    "repositories": ["crates.io"]
  },
  "rust:rustls-native-certs": {
    "coordinates": "rust:rustls-native-certs",
    "name": "rustls-native-certs",
    "description": "rustls-native-certs allows rustls to use the platform native certificate store",
    "license": [""],
    "tags": [],
    "downloads": 49030291,
    "repositories": ["crates.io"]
  },
  "rust:arc-swap": {
    "coordinates": "rust:arc-swap",
    "name": "arc-swap",
    "description": "Atomically swappable Arc",
    "license": [""],
    "tags": ["arc", "atomic"],
    "downloads": 48681390,
    "repositories": ["crates.io"]
  },
  "rust:winreg": {
    "coordinates": "rust:winreg",
    "name": "winreg",
    "description": "Rust bindings to MS Windows Registry API",
    "license": [""],
    "tags": ["winsdk", "windows", "registry"],
    "downloads": 48487974,
    "repositories": ["crates.io"]
  },
  "rust:peeking_take_while": {
    "coordinates": "rust:peeking_take_while",
    "name": "peeking_take_while",
    "description": "Like `Iterator::take_while`, but calls the predicate on a peeked value. This allows you to use `Iterator::by_ref` and `Iterator::take_while` together, and still get the first value for which the `take_while` predicate returned false after dropping the `by_ref`.",
    "license": [""],
    "tags": ["peek", "by_ref", "take_while", "iterator"],
    "downloads": 48419014,
    "repositories": ["crates.io"]
  },
  "rust:csv": {
    "coordinates": "rust:csv",
    "name": "csv",
    "description": "Fast CSV parsing with support for serde.",
    "license": [""],
    "tags": ["serde", "comma", "delimited", "csv", "parser"],
    "downloads": 48337220,
    "repositories": ["crates.io"]
  },
  "rust:console": {
    "coordinates": "rust:console",
    "name": "console",
    "description": "A terminal and console abstraction for Rust",
    "license": [""],
    "tags": ["ansi", "colors", "console", "terminal", "cli"],
    "downloads": 48157846,
    "repositories": ["crates.io"]
  },
  "rust:openssl-macros": {
    "coordinates": "rust:openssl-macros",
    "name": "openssl-macros",
    "description": "Internal macros used by the openssl crate.",
    "license": [""],
    "tags": [],
    "downloads": 47753732,
    "repositories": ["crates.io"]
  },
  "rust:concurrent-queue": {
    "coordinates": "rust:concurrent-queue",
    "name": "concurrent-queue",
    "description": "Concurrent multi-producer multi-consumer queue",
    "license": [""],
    "tags": ["spsc", "spmc", "channel", "mpmc", "mpsc"],
    "downloads": 47748871,
    "repositories": ["crates.io"]
  },
  "rust:derivative": {
    "coordinates": "rust:derivative",
    "name": "derivative",
    "description": "A set of alternative `derive` attributes for Rust",
    "license": [""],
    "tags": ["derive", "macro1-1", "macro", "plugin"],
    "downloads": 47716645,
    "repositories": ["crates.io"]
  },
  "rust:rand_xorshift": {
    "coordinates": "rust:rand_xorshift",
    "name": "rand_xorshift",
    "description": "Xorshift random number generator ",
    "license": [""],
    "tags": ["rng", "xorshift", "random"],
    "downloads": 47623050,
    "repositories": ["crates.io"]
  },
  "rust:bitvec": {
    "coordinates": "rust:bitvec",
    "name": "bitvec",
    "description": "Addresses memory by bits, for packed collections and bitfields",
    "license": [""],
    "tags": ["bitstream", "bitvector", "bitmap", "bitfields", "bitvec"],
    "downloads": 47358486,
    "repositories": ["crates.io"]
  },
  "rust:scoped-tls": {
    "coordinates": "rust:scoped-tls",
    "name": "scoped-tls",
    "description": "Library implementation of the standard library''s old `scoped_thread_local!` macro for providing scoped access to thread local storage (TLS) so any type can be stored into TLS. ",
    "license": [""],
    "tags": [],
    "downloads": 47315732,
    "repositories": ["crates.io"]
  },
  "rust:equivalent": {
    "coordinates": "rust:equivalent",
    "name": "equivalent",
    "description": "Traits for key comparison in maps.",
    "license": [""],
    "tags": ["no_std", "hashmap"],
    "downloads": 47108601,
    "repositories": ["crates.io"]
  },
  "rust:csv-core": {
    "coordinates": "rust:csv-core",
    "name": "csv-core",
    "description": "Bare bones CSV parsing with no_std support.",
    "license": [""],
    "tags": ["comma", "delimited", "csv", "no_std", "parser"],
    "downloads": 46875326,
    "repositories": ["crates.io"]
  },
  "rust:tonic": {
    "coordinates": "rust:tonic",
    "name": "tonic",
    "description": "A gRPC over HTTP/2 implementation focused on high performance, interoperability, and flexibility. ",
    "license": [""],
    "tags": ["futures", "protobuf", "grpc", "rpc", "async"],
    "downloads": 46778475,
    "repositories": ["crates.io"]
  },
  "rust:signature": {
    "coordinates": "rust:signature",
    "name": "signature",
    "description": "Traits for cryptographic signature algorithms (e.g. ECDSA, Ed25519)",
    "license": [""],
    "tags": ["ecdsa", "signing", "ed25519", "signature", "crypto"],
    "downloads": 46607156,
    "repositories": ["crates.io"]
  },
  "rust:home": {
    "coordinates": "rust:home",
    "name": "home",
    "description": "Shared definitions of home directories.",
    "license": [""],
    "tags": [],
    "downloads": 46272444,
    "repositories": ["crates.io"]
  },
  "rust:futures-lite": {
    "coordinates": "rust:futures-lite",
    "name": "futures-lite",
    "description": "Futures, streams, and async I/O combinators",
    "license": [""],
    "tags": ["asynchronous", "futures", "async"],
    "downloads": 46240935,
    "repositories": ["crates.io"]
  },
  "rust:memmap2": {
    "coordinates": "rust:memmap2",
    "name": "memmap2",
    "description": "Cross-platform Rust API for memory-mapped file IO",
    "license": [""],
    "tags": ["mmap", "io", "file", "memory-map"],
    "downloads": 46155633,
    "repositories": ["crates.io"]
  },
  "rust:overload": {
    "coordinates": "rust:overload",
    "name": "overload",
    "description": "Provides a macro to simplify operator overloading.",
    "license": [""],
    "tags": ["op", "operator", "overloading", "macro"],
    "downloads": 45898640,
    "repositories": ["crates.io"]
  },
  "rust:crunchy": {
    "coordinates": "rust:crunchy",
    "name": "crunchy",
    "description": "Crunchy unroller: deterministically unroll constant loops",
    "license": [""],
    "tags": [],
    "downloads": 45863124,
    "repositories": ["crates.io"]
  },
  "rust:radium": {
    "coordinates": "rust:radium",
    "name": "radium",
    "description": "Portable interfaces for maybe-atomic types",
    "license": [""],
    "tags": ["sync", "generic", "trait", "cell", "atomic"],
    "downloads": 45820781,
    "repositories": ["crates.io"]
  },
  "rust:dirs-sys-next": {
    "coordinates": "rust:dirs-sys-next",
    "name": "dirs-sys-next",
    "description": "system-level helper functions for the dirs and directories crates",
    "license": [""],
    "tags": [],
    "downloads": 45661318,
    "repositories": ["crates.io"]
  },
  "rust:async-channel": {
    "coordinates": "rust:async-channel",
    "name": "async-channel",
    "description": "Async multi-producer multi-consumer channel",
    "license": [""],
    "tags": ["chan", "spmc", "futures", "mpsc", "mpmc"],
    "downloads": 45574811,
    "repositories": ["crates.io"]
  },
  "rust:pest_derive": {
    "coordinates": "rust:pest_derive",
    "name": "pest_derive",
    "description": "pest''s derive macro",
    "license": [""],
    "tags": ["grammar", "peg", "pest", "parser"],
    "downloads": 45500787,
    "repositories": ["crates.io"]
  },
  "rust:arrayref": {
    "coordinates": "rust:arrayref",
    "name": "arrayref",
    "description": "Macros to take array references of slices",
    "license": [""],
    "tags": [],
    "downloads": 44972406,
    "repositories": ["crates.io"]
  },
  "rust:prettyplease": {
    "coordinates": "rust:prettyplease",
    "name": "prettyplease",
    "description": "A minimal `syn` syntax tree pretty-printer",
    "license": [""],
    "tags": ["rustfmt"],
    "downloads": 44920249,
    "repositories": ["crates.io"]
  },
  "rust:signal-hook": {
    "coordinates": "rust:signal-hook",
    "name": "signal-hook",
    "description": "Unix signal handling",
    "license": [""],
    "tags": ["signal", "daemon", "unix"],
    "downloads": 44893155,
    "repositories": ["crates.io"]
  },
  "rust:dtoa": {
    "coordinates": "rust:dtoa",
    "name": "dtoa",
    "description": "Fast floating point primitive to string conversion",
    "license": [""],
    "tags": ["float"],
    "downloads": 44660030,
    "repositories": ["crates.io"]
  },
  "rust:pest_meta": {
    "coordinates": "rust:pest_meta",
    "name": "pest_meta",
    "description": "pest meta language parser and validator",
    "license": [""],
    "tags": ["pest", "optimizer", "meta", "parser"],
    "downloads": 44537622,
    "repositories": ["crates.io"]
  },
  "rust:pest_generator": {
    "coordinates": "rust:pest_generator",
    "name": "pest_generator",
    "description": "pest code generator",
    "license": [""],
    "tags": ["generator", "pest"],
    "downloads": 44510722,
    "repositories": ["crates.io"]
  },
  "rust:phf_codegen": {
    "coordinates": "rust:phf_codegen",
    "name": "phf_codegen",
    "description": "Codegen library for PHF types",
    "license": [""],
    "tags": [],
    "downloads": 44383082,
    "repositories": ["crates.io"]
  },
  "rust:num_threads": {
    "coordinates": "rust:num_threads",
    "name": "num_threads",
    "description": "A minimal library that determines the number of running threads for the current process.",
    "license": [""],
    "tags": [],
    "downloads": 43883503,
    "repositories": ["crates.io"]
  },
  "rust:rustls-webpki": {
    "coordinates": "rust:rustls-webpki",
    "name": "rustls-webpki",
    "description": "Web PKI X.509 Certificate Verification.",
    "license": [""],
    "tags": [],
    "downloads": 43768656,
    "repositories": ["crates.io"]
  },
  "rust:anstream": {
    "coordinates": "rust:anstream",
    "name": "anstream",
    "description": "A simple cross platform library for writing colored text to a terminal.",
    "license": [""],
    "tags": ["wincon", "strip", "color", "ansi", "terminal"],
    "downloads": 43734957,
    "repositories": ["crates.io"]
  },
  "rust:void": {
    "coordinates": "rust:void",
    "name": "void",
    "description": "The uninhabited void type for use in statically impossible cases.",
    "license": [""],
    "tags": [],
    "downloads": 43612403,
    "repositories": ["crates.io"]
  },
  "rust:globset": {
    "coordinates": "rust:globset",
    "name": "globset",
    "description": "Cross platform single glob and glob set matching. Glob set matching is the process of matching one or more glob patterns against a single candidate path simultaneously, and returning all of the globs that matched. ",
    "license": [""],
    "tags": ["set", "multiple", "pattern", "glob", "regex"],
    "downloads": 43494890,
    "repositories": ["crates.io"]
  },
  "rust:indoc": {
    "coordinates": "rust:indoc",
    "name": "indoc",
    "description": "Indented document literals",
    "license": [""],
    "tags": ["nowdoc", "literal", "heredoc", "multiline", "string"],
    "downloads": 43396277,
    "repositories": ["crates.io"]
  },
  "rust:schannel": {
    "coordinates": "rust:schannel",
    "name": "schannel",
    "description": "Schannel bindings for rust, allowing SSL/TLS (e.g. https) without openssl",
    "license": [""],
    "tags": ["schannel", "windows", "ssl", "https", "tls"],
    "downloads": 43315869,
    "repositories": ["crates.io"]
  },
  "rust:security-framework": {
    "coordinates": "rust:security-framework",
    "name": "security-framework",
    "description": "Security.framework bindings for macOS and iOS",
    "license": [""],
    "tags": ["ios", "ssl", "crypto", "keychain", "tls"],
    "downloads": 43217879,
    "repositories": ["crates.io"]
  },
  "rust:hostname": {
    "coordinates": "rust:hostname",
    "name": "hostname",
    "description": "Cross-platform system''s host name functions",
    "license": [""],
    "tags": ["sethostname", "gethostname", "hostname"],
    "downloads": 43145484,
    "repositories": ["crates.io"]
  },
  "rust:anstyle-parse": {
    "coordinates": "rust:anstyle-parse",
    "name": "anstyle-parse",
    "description": "Parse ANSI Style Escapes",
    "license": [""],
    "tags": ["vte", "terminal", "ansi", "color"],
    "downloads": 42844654,
    "repositories": ["crates.io"]
  },
  "rust:security-framework-sys": {
    "coordinates": "rust:security-framework-sys",
    "name": "security-framework-sys",
    "description": "Apple `Security.framework` low-level FFI bindings",
    "license": [""],
    "tags": ["ios", "ssl", "crypto", "tls", "ffi"],
    "downloads": 42648981,
    "repositories": ["crates.io"]
  },
  "rust:bytemuck": {
    "coordinates": "rust:bytemuck",
    "name": "bytemuck",
    "description": "A crate for mucking around with piles of bytes.",
    "license": [""],
    "tags": ["casting", "transmute", "bytes"],
    "downloads": 42444412,
    "repositories": ["crates.io"]
  },
  "rust:pem": {
    "coordinates": "rust:pem",
    "name": "pem",
    "description": "Parse and encode PEM-encoded data.",
    "license": [""],
    "tags": ["pem", "no-std", "no_std"],
    "downloads": 42348474,
    "repositories": ["crates.io"]
  },
  "rust:der": {
    "coordinates": "rust:der",
    "name": "der",
    "description": "Pure Rust embedded-friendly implementation of the Distinguished Encoding Rules (DER) for Abstract Syntax Notation One (ASN.1) as described in ITU X.690 with full support for heapless no_std targets ",
    "license": [""],
    "tags": ["pkcs", "itu", "asn1", "crypto"],
    "downloads": 42303460,
    "repositories": ["crates.io"]
  },
  "rust:bit-set": {
    "coordinates": "rust:bit-set",
    "name": "bit-set",
    "description": "A set of bits",
    "license": [""],
    "tags": ["bitset", "data-structures"],
    "downloads": 42155388,
    "repositories": ["crates.io"]
  },
  "rust:funty": {
    "coordinates": "rust:funty",
    "name": "funty",
    "description": "Trait generalization over the primitive types",
    "license": [""],
    "tags": ["numerics", "pointers", "traits", "primitives"],
    "downloads": 42105599,
    "repositories": ["crates.io"]
  },
  "rust:parking": {
    "coordinates": "rust:parking",
    "name": "parking",
    "description": "Thread parking and unparking",
    "license": [""],
    "tags": ["park", "condition", "notify", "thread", "wake"],
    "downloads": 42046813,
    "repositories": ["crates.io"]
  },
  "rust:cast": {
    "coordinates": "rust:cast",
    "name": "cast",
    "description": "Ergonomic, checked cast functions for primitive types",
    "license": [""],
    "tags": ["checked", "cast", "primitive", "float", "integer"],
    "downloads": 42040619,
    "repositories": ["crates.io"]
  },
  "rust:criterion": {
    "coordinates": "rust:criterion",
    "name": "criterion",
    "description": "Statistics-driven micro-benchmarking library",
    "license": [""],
    "tags": ["criterion", "benchmark"],
    "downloads": 41934546,
    "repositories": ["crates.io"]
  },
  "rust:dirs-next": {
    "coordinates": "rust:dirs-next",
    "name": "dirs-next",
    "description": "A tiny low-level library that provides platform-specific standard locations of directories for config, cache and other data on Linux, Windows, macOS and Redox by leveraging the mechanisms defined by the XDG base/user directory specifications on Linux, the Known Folder API on Windows, and the Standard Directory guidelines on macOS. ",
    "license": [""],
    "tags": ["folder", "xdg", "app_dirs", "basedir", "path"],
    "downloads": 41543041,
    "repositories": ["crates.io"]
  },
  "rust:wyz": {
    "coordinates": "rust:wyz",
    "name": "wyz",
    "description": "myrrlyn’s utility collection",
    "license": [""],
    "tags": [],
    "downloads": 41530216,
    "repositories": ["crates.io"]
  },
  "rust:structopt": {
    "coordinates": "rust:structopt",
    "name": "structopt",
    "description": "Parse command line argument by defining a struct.",
    "license": [""],
    "tags": ["docopt", "clap", "derive", "cli"],
    "downloads": 41476287,
    "repositories": ["crates.io"]
  },
  "rust:tap": {
    "coordinates": "rust:tap",
    "name": "tap",
    "description": "Generic extensions for tapping values in Rust",
    "license": [""],
    "tags": ["pipe", "tap_ok", "functional", "tap", "tap_some"],
    "downloads": 41465079,
    "repositories": ["crates.io"]
  },
  "rust:net2": {
    "coordinates": "rust:net2",
    "name": "net2",
    "description": "Extensions to the standard library''s networking types as proposed in RFC 1158. ",
    "license": [""],
    "tags": [],
    "downloads": 41197310,
    "repositories": ["crates.io"]
  },
  "rust:structopt-derive": {
    "coordinates": "rust:structopt-derive",
    "name": "structopt-derive",
    "description": "Parse command line argument by defining a struct, derive crate.",
    "license": [""],
    "tags": ["derive", "clap", "docopt", "cli"],
    "downloads": 41096463,
    "repositories": ["crates.io"]
  },
  "rust:axum": {
    "coordinates": "rust:axum",
    "name": "axum",
    "description": "Web framework that focuses on ergonomics and modularity",
    "license": [""],
    "tags": ["http", "framework", "web"],
    "downloads": 41010404,
    "repositories": ["crates.io"]
  },
  "rust:iovec": {
    "coordinates": "rust:iovec",
    "name": "iovec",
    "description": "Portable buffer type for scatter/gather I/O operations ",
    "license": [""],
    "tags": ["networking", "vectored", "scatter", "gather", "io"],
    "downloads": 40971665,
    "repositories": ["crates.io"]
  },
  "rust:cargo_metadata": {
    "coordinates": "rust:cargo_metadata",
    "name": "cargo_metadata",
    "description": "structured access to the output of `cargo metadata`",
    "license": [""],
    "tags": [],
    "downloads": 40886798,
    "repositories": ["crates.io"]
  },
  "rust:fallible-iterator": {
    "coordinates": "rust:fallible-iterator",
    "name": "fallible-iterator",
    "description": "Fallible iterator traits",
    "license": [""],
    "tags": [],
    "downloads": 40815191,
    "repositories": ["crates.io"]
  },
  "rust:cookie": {
    "coordinates": "rust:cookie",
    "name": "cookie",
    "description": "HTTP cookie parsing and cookie jar management. Supports signed and private (encrypted, authenticated) jars. ",
    "license": [""],
    "tags": [],
    "downloads": 40785341,
    "repositories": ["crates.io"]
  },
  "rust:async-lock": {
    "coordinates": "rust:async-lock",
    "name": "async-lock",
    "description": "Async synchronization primitives",
    "license": [""],
    "tags": ["semaphore", "lock", "mutex", "rwlock", "barrier"],
    "downloads": 40695248,
    "repositories": ["crates.io"]
  },
  "rust:combine": {
    "coordinates": "rust:combine",
    "name": "combine",
    "description": "Fast parser combinators on arbitrary streams with zero-copy support.",
    "license": [""],
    "tags": ["ll", "combinators", "parsing", "parser"],
    "downloads": 40658641,
    "repositories": ["crates.io"]
  },
  "rust:waker-fn": {
    "coordinates": "rust:waker-fn",
    "name": "waker-fn",
    "description": "Convert closures into wakers",
    "license": [""],
    "tags": ["closure", "wake", "waker", "callback", "async"],
    "downloads": 40615732,
    "repositories": ["crates.io"]
  },
  "rust:lru": {
    "coordinates": "rust:lru",
    "name": "lru",
    "description": "A LRU cache implementation",
    "license": [""],
    "tags": ["cache", "lru"],
    "downloads": 40582101,
    "repositories": ["crates.io"]
  },
  "rust:matchit": {
    "coordinates": "rust:matchit",
    "name": "matchit",
    "description": "A high performance, zero-copy URL router.",
    "license": [""],
    "tags": ["path", "tree", "match", "url", "router"],
    "downloads": 40182273,
    "repositories": ["crates.io"]
  },
  "rust:base64ct": {
    "coordinates": "rust:base64ct",
    "name": "base64ct",
    "description": "Pure Rust implementation of Base64 (RFC 4648) which avoids any usages of data-dependent branches/LUTs and thereby provides portable \"best effort\" constant-time operation and embedded-friendly no_std support ",
    "license": [""],
    "tags": ["phc", "pem", "base64", "crypto"],
    "downloads": 40091582,
    "repositories": ["crates.io"]
  },
  "rust:serde_with": {
    "coordinates": "rust:serde_with",
    "name": "serde_with",
    "description": "Custom de/serialization functions for Rust''s serde",
    "license": [""],
    "tags": ["deserialization", "serde", "utilities", "serialization"],
    "downloads": 39979623,
    "repositories": ["crates.io"]
  },
  "rust:axum-core": {
    "coordinates": "rust:axum-core",
    "name": "axum-core",
    "description": "Core types and traits for axum",
    "license": [""],
    "tags": ["web", "http", "framework"],
    "downloads": 39876056,
    "repositories": ["crates.io"]
  },
  "rust:terminal_size": {
    "coordinates": "rust:terminal_size",
    "name": "terminal_size",
    "description": "Gets the size of your Linux or Windows terminal",
    "license": [""],
    "tags": ["terminal", "dimensions", "size", "term", "console"],
    "downloads": 39677555,
    "repositories": ["crates.io"]
  },
  "rust:tinytemplate": {
    "coordinates": "rust:tinytemplate",
    "name": "tinytemplate",
    "description": "Simple, lightweight template engine",
    "license": [""],
    "tags": ["html", "template"],
    "downloads": 39575639,
    "repositories": ["crates.io"]
  },
  "rust:sync_wrapper": {
    "coordinates": "rust:sync_wrapper",
    "name": "sync_wrapper",
    "description": "A tool for enlisting the compiler''s help in proving the absence of concurrency",
    "license": [""],
    "tags": ["concurrency"],
    "downloads": 39555058,
    "repositories": ["crates.io"]
  },
  "rust:tungstenite": {
    "coordinates": "rust:tungstenite",
    "name": "tungstenite",
    "description": "Lightweight stream-based WebSocket implementation",
    "license": [""],
    "tags": ["io", "websocket", "web"],
    "downloads": 39548138,
    "repositories": ["crates.io"]
  },
  "rust:criterion-plot": {
    "coordinates": "rust:criterion-plot",
    "name": "criterion-plot",
    "description": "Criterion''s plotting library",
    "license": [""],
    "tags": ["gnuplot", "criterion", "plotting"],
    "downloads": 39481454,
    "repositories": ["crates.io"]
  },
  "rust:match_cfg": {
    "coordinates": "rust:match_cfg",
    "name": "match_cfg",
    "description": "A convenience macro to ergonomically define an item depending on a large number of `#[cfg]` parameters. Structured like match statement, the first matching branch is the item that gets emitted. ",
    "license": [""],
    "tags": [],
    "downloads": 39304210,
    "repositories": ["crates.io"]
  },
  "rust:utf-8": {
    "coordinates": "rust:utf-8",
    "name": "utf-8",
    "description": "Incremental, zero-copy UTF-8 decoding with error handling",
    "license": [""],
    "tags": [],
    "downloads": 39300099,
    "repositories": ["crates.io"]
  },
  "rust:pbkdf2": {
    "coordinates": "rust:pbkdf2",
    "name": "pbkdf2",
    "description": "Generic implementation of PBKDF2",
    "license": [""],
    "tags": ["crypto", "password", "hashing", "phf"],
    "downloads": 39234329,
    "repositories": ["crates.io"]
  },
  "rust:serde_with_macros": {
    "coordinates": "rust:serde_with_macros",
    "name": "serde_with_macros",
    "description": "proc-macro library for serde_with",
    "license": [""],
    "tags": ["deserialization", "serde", "utilities", "serialization"],
    "downloads": 39178832,
    "repositories": ["crates.io"]
  },
  "rust:spki": {
    "coordinates": "rust:spki",
    "name": "spki",
    "description": "X.509 Subject Public Key Info (RFC5280) describing public keys as well as their associated AlgorithmIdentifiers (i.e. OIDs) ",
    "license": [""],
    "tags": ["x509", "crypto"],
    "downloads": 39147282,
    "repositories": ["crates.io"]
  },
  "rust:diff": {
    "coordinates": "rust:diff",
    "name": "diff",
    "description": "An LCS based slice and string diffing implementation.",
    "license": [""],
    "tags": [],
    "downloads": 38924961,
    "repositories": ["crates.io"]
  },
  "rust:const-oid": {
    "coordinates": "rust:const-oid",
    "name": "const-oid",
    "description": "Const-friendly implementation of the ISO/IEC Object Identifier (OID) standard as defined in ITU X.660, with support for BER/DER encoding/decoding as well as heapless no_std (i.e. embedded) support ",
    "license": [""],
    "tags": ["oid", "iec", "itu", "iso"],
    "downloads": 38700740,
    "repositories": ["crates.io"]
  },
  "rust:term": {
    "coordinates": "rust:term",
    "name": "term",
    "description": "A terminal formatting library ",
    "license": [""],
    "tags": [],
    "downloads": 38648883,
    "repositories": ["crates.io"]
  },
  "rust:lexical-core": {
    "coordinates": "rust:lexical-core",
    "name": "lexical-core",
    "description": "Lexical, to- and from-string conversion routines.",
    "license": [""],
    "tags": ["parsing", "lexical", "encoding", "no_std"],
    "downloads": 38617504,
    "repositories": ["crates.io"]
  },
  "rust:curve25519-dalek": {
    "coordinates": "rust:curve25519-dalek",
    "name": "curve25519-dalek",
    "description": "A pure-Rust implementation of group operations on ristretto255 and Curve25519",
    "license": [""],
    "tags": [
      "cryptography",
      "ristretto",
      "ristretto255",
      "curve25519",
      "crypto"
    ],
    "downloads": 38603891,
    "repositories": ["crates.io"]
  },
  "rust:polling": {
    "coordinates": "rust:polling",
    "name": "polling",
    "description": "Portable interface to epoll, kqueue, event ports, and IOCP",
    "license": [""],
    "tags": ["kqueue", "mio", "epoll", "iocp"],
    "downloads": 38473462,
    "repositories": ["crates.io"]
  },
  "rust:pkcs8": {
    "coordinates": "rust:pkcs8",
    "name": "pkcs8",
    "description": "Pure Rust implementation of Public-Key Cryptography Standards (PKCS) #8: Private-Key Information Syntax Specification (RFC 5208), with additional support for PKCS#8v2 asymmetric key packages (RFC 5958) ",
    "license": [""],
    "tags": ["pkcs", "private", "key", "crypto"],
    "downloads": 38217743,
    "repositories": ["crates.io"]
  },
  "rust:aead": {
    "coordinates": "rust:aead",
    "name": "aead",
    "description": "Traits for Authenticated Encryption with Associated Data (AEAD) algorithms, such as AES-GCM as ChaCha20Poly1305, which provide a high-level API ",
    "license": [""],
    "tags": ["encryption", "crypto"],
    "downloads": 38162256,
    "repositories": ["crates.io"]
  },
  "rust:anstyle-query": {
    "coordinates": "rust:anstyle-query",
    "name": "anstyle-query",
    "description": "Look up colored console capabilities",
    "license": [""],
    "tags": ["cli", "no-std", "terminal", "ansi", "color"],
    "downloads": 38131422,
    "repositories": ["crates.io"]
  },
  "rust:oorandom": {
    "coordinates": "rust:oorandom",
    "name": "oorandom",
    "description": "A tiny, robust PRNG implementation.",
    "license": [""],
    "tags": ["prng", "rng", "pcg", "random"],
    "downloads": 38106798,
    "repositories": ["crates.io"]
  },
  "rust:target-lexicon": {
    "coordinates": "rust:target-lexicon",
    "name": "target-lexicon",
    "description": "Targeting utilities for compilers and related tools",
    "license": [""],
    "tags": ["triple", "jit", "host", "target", "compiler"],
    "downloads": 37924127,
    "repositories": ["crates.io"]
  },
  "rust:serde_bytes": {
    "coordinates": "rust:serde_bytes",
    "name": "serde_bytes",
    "description": "Optimized handling of `&[u8]` and `Vec<u8>` for Serde",
    "license": [""],
    "tags": ["serialization", "no_std", "bytes", "serde"],
    "downloads": 37830660,
    "repositories": ["crates.io"]
  },
  "rust:quick-xml": {
    "coordinates": "rust:quick-xml",
    "name": "quick-xml",
    "description": "High performance xml reader and writer",
    "license": [""],
    "tags": ["parser", "html", "serde", "writer", "xml"],
    "downloads": 37304216,
    "repositories": ["crates.io"]
  },
  "rust:xml-rs": {
    "coordinates": "rust:xml-rs",
    "name": "xml-rs",
    "description": "An XML library in pure Rust",
    "license": [""],
    "tags": ["sax", "parsing", "writer", "xml", "parser"],
    "downloads": 37300029,
    "repositories": ["crates.io"]
  },
  "rust:tonic-build": {
    "coordinates": "rust:tonic-build",
    "name": "tonic-build",
    "description": "Codegen module of `tonic` gRPC implementation. ",
    "license": [""],
    "tags": ["codegen", "protobuf", "grpc", "rpc", "async"],
    "downloads": 37273796,
    "repositories": ["crates.io"]
  },
  "rust:predicates": {
    "coordinates": "rust:predicates",
    "name": "predicates",
    "description": "An implementation of boolean-valued predicate functions.",
    "license": [""],
    "tags": ["boolean", "match", "predicate", "combinatorial", "logic"],
    "downloads": 37141666,
    "repositories": ["crates.io"]
  },
  "rust:tar": {
    "coordinates": "rust:tar",
    "name": "tar",
    "description": "A Rust implementation of a TAR file reader and writer. This library does not currently handle compression, but it is abstract over all I/O readers and writers. Additionally, great lengths are taken to ensure that the entire contents are never required to be entirely resident in memory all at once. ",
    "license": [""],
    "tags": ["tarfile", "tar", "encoding"],
    "downloads": 37009682,
    "repositories": ["crates.io"]
  },
  "rust:miow": {
    "coordinates": "rust:miow",
    "name": "miow",
    "description": "A zero overhead I/O library for Windows, focusing on IOCP and async I/O abstractions. ",
    "license": [""],
    "tags": ["iocp", "overlapped", "windows", "io"],
    "downloads": 36869990,
    "repositories": ["crates.io"]
  },
  "rust:zeroize_derive": {
    "coordinates": "rust:zeroize_derive",
    "name": "zeroize_derive",
    "description": "Custom derive support for zeroize",
    "license": [""],
    "tags": ["memset", "secure", "volatile", "zero", "memory"],
    "downloads": 36792542,
    "repositories": ["crates.io"]
  },
  "rust:colorchoice": {
    "coordinates": "rust:colorchoice",
    "name": "colorchoice",
    "description": "Global override of color control",
    "license": [""],
    "tags": ["terminal", "cli", "no-std", "color", "ansi"],
    "downloads": 36712751,
    "repositories": ["crates.io"]
  },
  "rust:async-io": {
    "coordinates": "rust:async-io",
    "name": "async-io",
    "description": "Async I/O and timers",
    "license": [""],
    "tags": ["kqueue", "mio", "epoll", "iocp"],
    "downloads": 36706742,
    "repositories": ["crates.io"]
  },
  "rust:redox_users": {
    "coordinates": "rust:redox_users",
    "name": "redox_users",
    "description": "A Rust library to access Redox users and groups functionality",
    "license": [""],
    "tags": ["redox", "auth"],
    "downloads": 36662732,
    "repositories": ["crates.io"]
  },
  "rust:num_enum": {
    "coordinates": "rust:num_enum",
    "name": "num_enum",
    "description": "Procedural macros to make inter-operation between primitives and enums easier.",
    "license": [""],
    "tags": ["enum", "derive", "safe", "ffi", "conversion"],
    "downloads": 36294262,
    "repositories": ["crates.io"]
  },
  "rust:num_enum_derive": {
    "coordinates": "rust:num_enum_derive",
    "name": "num_enum_derive",
    "description": "Internal implementation details for ::num_enum (Procedural macros to make inter-operation between primitives and enums easier)",
    "license": [""],
    "tags": [],
    "downloads": 36178364,
    "repositories": ["crates.io"]
  },
  "rust:maplit": {
    "coordinates": "rust:maplit",
    "name": "maplit",
    "description": "Collection “literal” macros for HashMap, HashSet, BTreeMap, and BTreeSet.",
    "license": [""],
    "tags": ["literal", "hashmap", "macro", "data-structure"],
    "downloads": 36115966,
    "repositories": ["crates.io"]
  },
  "rust:pretty_assertions": {
    "coordinates": "rust:pretty_assertions",
    "name": "pretty_assertions",
    "description": "Overwrite `assert_eq!` and `assert_ne!` with drop-in replacements, adding colorful diffs.",
    "license": [""],
    "tags": ["diff", "assert", "color", "pretty"],
    "downloads": 36051887,
    "repositories": ["crates.io"]
  },
  "rust:fxhash": {
    "coordinates": "rust:fxhash",
    "name": "fxhash",
    "description": "A fast, non-secure, hashing algorithm derived from an internal hasher used in FireFox and Rustc.",
    "license": [""],
    "tags": ["hash"],
    "downloads": 35962189,
    "repositories": ["crates.io"]
  },
  "rust:plotters": {
    "coordinates": "rust:plotters",
    "name": "plotters",
    "description": "A Rust drawing library focus on data plotting for both WASM and native applications",
    "license": [""],
    "tags": ["plotting", "drawing", "webassembly", "visualization"],
    "downloads": 35900787,
    "repositories": ["crates.io"]
  },
  "rust:tokio-io-timeout": {
    "coordinates": "rust:tokio-io-timeout",
    "name": "tokio-io-timeout",
    "description": "Tokio wrappers which apply timeouts to IO operations",
    "license": [""],
    "tags": [],
    "downloads": 35864404,
    "repositories": ["crates.io"]
  },
  "rust:ctr": {
    "coordinates": "rust:ctr",
    "name": "ctr",
    "description": "CTR block modes of operation",
    "license": [""],
    "tags": ["block-mode", "ciphers", "stream-cipher", "crypto"],
    "downloads": 35598764,
    "repositories": ["crates.io"]
  },
  "rust:colored": {
    "coordinates": "rust:colored",
    "name": "colored",
    "description": "The most simple way to add colors in your terminal",
    "license": [""],
    "tags": ["term-painter", "term", "ansi_term", "string", "color"],
    "downloads": 35585857,
    "repositories": ["crates.io"]
  },
  "rust:crc": {
    "coordinates": "rust:crc",
    "name": "crc",
    "description": "Rust implementation of CRC with support of various standards",
    "license": [""],
    "tags": ["crc64", "crc", "crc16", "crc32", "hash"],
    "downloads": 35504529,
    "repositories": ["crates.io"]
  },
  "rust:xattr": {
    "coordinates": "rust:xattr",
    "name": "xattr",
    "description": "unix extended filesystem attributes",
    "license": [""],
    "tags": ["unix", "filesystem", "xattr"],
    "downloads": 35441021,
    "repositories": ["crates.io"]
  },
  "rust:cmake": {
    "coordinates": "rust:cmake",
    "name": "cmake",
    "description": "A build dependency for running `cmake` to build a native library ",
    "license": [""],
    "tags": ["build-dependencies"],
    "downloads": 35398935,
    "repositories": ["crates.io"]
  },
  "rust:async-task": {
    "coordinates": "rust:async-task",
    "name": "async-task",
    "description": "Task abstraction for building executors",
    "license": [""],
    "tags": ["executor", "task", "spawn", "futures"],
    "downloads": 35106999,
    "repositories": ["crates.io"]
  },
  "rust:byte-tools": {
    "coordinates": "rust:byte-tools",
    "name": "byte-tools",
    "description": "Bytes related utility functions",
    "license": [""],
    "tags": ["bytes"],
    "downloads": 35100161,
    "repositories": ["crates.io"]
  },
  "rust:hyper-timeout": {
    "coordinates": "rust:hyper-timeout",
    "name": "hyper-timeout",
    "description": "A connect, read and write timeout aware connector to be used with hyper Client.",
    "license": [""],
    "tags": [],
    "downloads": 35082893,
    "repositories": ["crates.io"]
  },
  "rust:float-cmp": {
    "coordinates": "rust:float-cmp",
    "name": "float-cmp",
    "description": "Floating point approximate comparison traits",
    "license": [""],
    "tags": ["comparison", "no_std", "float", "fuzzy", "approximate"],
    "downloads": 34931941,
    "repositories": ["crates.io"]
  },
  "rust:tracing-serde": {
    "coordinates": "rust:tracing-serde",
    "name": "tracing-serde",
    "description": "A compatibility layer for serializing trace data with `serde` ",
    "license": [""],
    "tags": ["tracing", "serialization", "logging"],
    "downloads": 34751264,
    "repositories": ["crates.io"]
  },
  "rust:threadpool": {
    "coordinates": "rust:threadpool",
    "name": "threadpool",
    "description": "A thread pool for running a number of jobs on a fixed set of worker threads. ",
    "license": [""],
    "tags": ["pool", "parallelism", "threading", "thread", "threadpool"],
    "downloads": 34597143,
    "repositories": ["crates.io"]
  },
  "rust:universal-hash": {
    "coordinates": "rust:universal-hash",
    "name": "universal-hash",
    "description": "Traits which describe the functionality of universal hash functions (UHFs)",
    "license": [""],
    "tags": ["mac", "crypto"],
    "downloads": 34569515,
    "repositories": ["crates.io"]
  },
  "rust:dyn-clone": {
    "coordinates": "rust:dyn-clone",
    "name": "dyn-clone",
    "description": "Clone trait that is object-safe",
    "license": [""],
    "tags": ["clone", "trait-object", "dyn"],
    "downloads": 34412217,
    "repositories": ["crates.io"]
  },
  "rust:urlencoding": {
    "coordinates": "rust:urlencoding",
    "name": "urlencoding",
    "description": "A Rust library for doing URL percentage encoding.",
    "license": [""],
    "tags": ["urldecode", "percent", "urlencode", "escape", "url"],
    "downloads": 33766365,
    "repositories": ["crates.io"]
  },
  "rust:doc-comment": {
    "coordinates": "rust:doc-comment",
    "name": "doc-comment",
    "description": "Macro to generate doc comments",
    "license": [""],
    "tags": [],
    "downloads": 33744899,
    "repositories": ["crates.io"]
  },
  "rust:predicates-core": {
    "coordinates": "rust:predicates-core",
    "name": "predicates-core",
    "description": "An API for boolean-valued predicate functions.",
    "license": [""],
    "tags": ["logic", "boolean", "predicate", "combinatorial", "match"],
    "downloads": 33615512,
    "repositories": ["crates.io"]
  },
  "rust:predicates-tree": {
    "coordinates": "rust:predicates-tree",
    "name": "predicates-tree",
    "description": "Render boolean-valued predicate functions results as a tree.",
    "license": [""],
    "tags": ["logic", "combinatorial", "boolean", "predicate", "match"],
    "downloads": 33534329,
    "repositories": ["crates.io"]
  },
  "rust:crossbeam": {
    "coordinates": "rust:crossbeam",
    "name": "crossbeam",
    "description": "Tools for concurrent programming",
    "license": [""],
    "tags": ["rcu", "non-blocking", "garbage", "atomic", "lock-free"],
    "downloads": 33340242,
    "repositories": ["crates.io"]
  },
  "rust:hkdf": {
    "coordinates": "rust:hkdf",
    "name": "hkdf",
    "description": "HMAC-based Extract-and-Expand Key Derivation Function (HKDF)",
    "license": [""],
    "tags": ["hkdf", "kdf", "crypto"],
    "downloads": 33283654,
    "repositories": ["crates.io"]
  },
  "rust:sha3": {
    "coordinates": "rust:sha3",
    "name": "sha3",
    "description": "Pure Rust implementation of SHA-3, a family of Keccak-based hash functions including the SHAKE family of eXtendable-Output Functions (XOFs), as well as the accelerated variant TurboSHAKE ",
    "license": [""],
    "tags": ["keccak", "sha3", "digest", "hash", "crypto"],
    "downloads": 33208840,
    "repositories": ["crates.io"]
  },
  "rust:windows": {
    "coordinates": "rust:windows",
    "name": "windows",
    "description": "Rust for Windows",
    "license": [""],
    "tags": [],
    "downloads": 33191961,
    "repositories": ["crates.io"]
  },
  "rust:serde_spanned": {
    "coordinates": "rust:serde_spanned",
    "name": "serde_spanned",
    "description": "Serde-compatible spanned Value",
    "license": [""],
    "tags": ["serde", "span"],
    "downloads": 33006009,
    "repositories": ["crates.io"]
  },
  "rust:plotters-backend": {
    "coordinates": "rust:plotters-backend",
    "name": "plotters-backend",
    "description": "Plotters Backend API",
    "license": [""],
    "tags": [],
    "downloads": 32970035,
    "repositories": ["crates.io"]
  },
  "rust:camino": {
    "coordinates": "rust:camino",
    "name": "camino",
    "description": "UTF-8 paths",
    "license": [""],
    "tags": ["utf8", "filesystem", "paths", "unicode"],
    "downloads": 32839964,
    "repositories": ["crates.io"]
  },
  "rust:num-derive": {
    "coordinates": "rust:num-derive",
    "name": "num-derive",
    "description": "Numeric syntax extensions",
    "license": [""],
    "tags": ["numerics", "mathematics"],
    "downloads": 32799600,
    "repositories": ["crates.io"]
  },
  "rust:android_system_properties": {
    "coordinates": "rust:android_system_properties",
    "name": "android_system_properties",
    "description": "Minimal Android system properties wrapper",
    "license": [""],
    "tags": ["android"],
    "downloads": 32796492,
    "repositories": ["crates.io"]
  },
  "rust:plotters-svg": {
    "coordinates": "rust:plotters-svg",
    "name": "plotters-svg",
    "description": "Plotters SVG backend",
    "license": [""],
    "tags": [],
    "downloads": 32745072,
    "repositories": ["crates.io"]
  },
  "rust:tiny-keccak": {
    "coordinates": "rust:tiny-keccak",
    "name": "tiny-keccak",
    "description": "An implementation of Keccak derived functions.",
    "license": [""],
    "tags": ["kangarootwelve", "sha3", "keccak", "crypto", "hash"],
    "downloads": 32615011,
    "repositories": ["crates.io"]
  },
  "rust:deranged": {
    "coordinates": "rust:deranged",
    "name": "deranged",
    "description": "Ranged integers",
    "license": [""],
    "tags": ["integer", "range", "int"],
    "downloads": 32609838,
    "repositories": ["crates.io"]
  },
  "rust:tokio-tungstenite": {
    "coordinates": "rust:tokio-tungstenite",
    "name": "tokio-tungstenite",
    "description": "Tokio binding for Tungstenite, the Lightweight stream-based WebSocket implementation",
    "license": [""],
    "tags": ["web", "io", "websocket"],
    "downloads": 32598948,
    "repositories": ["crates.io"]
  },
  "rust:unindent": {
    "coordinates": "rust:unindent",
    "name": "unindent",
    "description": "Remove a column of leading whitespace from a string",
    "license": [""],
    "tags": ["nowdoc", "heredoc", "multiline", "literal", "string"],
    "downloads": 32492493,
    "repositories": ["crates.io"]
  },
  "rust:polyval": {
    "coordinates": "rust:polyval",
    "name": "polyval",
    "description": "POLYVAL is a GHASH-like universal hash over GF(2^128) useful for constructing a Message Authentication Code (MAC) ",
    "license": [""],
    "tags": ["aes-gcm-siv", "ghash", "aes-gcm", "universal-hashing", "crypto"],
    "downloads": 32197998,
    "repositories": ["crates.io"]
  },
  "rust:fake-simd": {
    "coordinates": "rust:fake-simd",
    "name": "fake-simd",
    "description": "Crate for mimicking simd crate on stable Rust",
    "license": [""],
    "tags": ["simd"],
    "downloads": 31982198,
    "repositories": ["crates.io"]
  },
  "rust:error-chain": {
    "coordinates": "rust:error-chain",
    "name": "error-chain",
    "description": "Yet another error boilerplate library.",
    "license": [""],
    "tags": ["error"],
    "downloads": 31668080,
    "repositories": ["crates.io"]
  },
  "rust:cargo-platform": {
    "coordinates": "rust:cargo-platform",
    "name": "cargo-platform",
    "description": "Cargo''s representation of a target platform.",
    "license": [""],
    "tags": [],
    "downloads": 31528952,
    "repositories": ["crates.io"]
  },
  "rust:protobuf": {
    "coordinates": "rust:protobuf",
    "name": "protobuf",
    "description": "Rust implementation of Google protocol buffers ",
    "license": [""],
    "tags": [],
    "downloads": 31436948,
    "repositories": ["crates.io"]
  },
  "rust:serde_repr": {
    "coordinates": "rust:serde_repr",
    "name": "serde_repr",
    "description": "Derive Serialize and Deserialize that delegates to the underlying repr of a C-like enum.",
    "license": [""],
    "tags": ["integer", "serialization", "serde"],
    "downloads": 31405693,
    "repositories": ["crates.io"]
  },
  "rust:Inflector": {
    "coordinates": "rust:Inflector",
    "name": "Inflector",
    "description": "Adds String based inflections for Rust. Snake, kebab, camel, sentence, class, title and table cases as well as ordinalize, deordinalize, demodulize, foreign key, and pluralize/singularize are supported as both traits and pure functions acting on String types. ",
    "license": [""],
    "tags": ["snake", "camel", "inflector", "pluralize", "inflection"],
    "downloads": 31270703,
    "repositories": ["crates.io"]
  },
  "rust:futures-timer": {
    "coordinates": "rust:futures-timer",
    "name": "futures-timer",
    "description": "Timeouts for futures. ",
    "license": [""],
    "tags": [],
    "downloads": 31208171,
    "repositories": ["crates.io"]
  },
  "rust:failure": {
    "coordinates": "rust:failure",
    "name": "failure",
    "description": "Experimental error handling abstraction.",
    "license": [""],
    "tags": [],
    "downloads": 31135614,
    "repositories": ["crates.io"]
  },
  "rust:crypto-bigint": {
    "coordinates": "rust:crypto-bigint",
    "name": "crypto-bigint",
    "description": "Pure Rust implementation of a big integer library which has been designed from the ground-up for use in cryptographic applications. Provides constant-time, no_std-friendly implementations of modern formulas using const generics. ",
    "license": [""],
    "tags": ["arbitrary", "integer", "crypto", "precision", "bignum"],
    "downloads": 31085766,
    "repositories": ["crates.io"]
  },
  "rust:tower-http": {
    "coordinates": "rust:tower-http",
    "name": "tower-http",
    "description": "Tower middleware and utilities for HTTP clients and servers",
    "license": [""],
    "tags": ["http", "io", "futures", "service", "async"],
    "downloads": 30927181,
    "repositories": ["crates.io"]
  },
  "rust:atomic-waker": {
    "coordinates": "rust:atomic-waker",
    "name": "atomic-waker",
    "description": "A synchronization primitive for task wakeup",
    "license": [""],
    "tags": ["wake", "waker", "futures", "notify", "async"],
    "downloads": 30805265,
    "repositories": ["crates.io"]
  },
  "rust:adler32": {
    "coordinates": "rust:adler32",
    "name": "adler32",
    "description": "Minimal Adler32 implementation for Rust.",
    "license": [""],
    "tags": ["hash", "rolling", "adler32"],
    "downloads": 30455224,
    "repositories": ["crates.io"]
  },
  "rust:yansi": {
    "coordinates": "rust:yansi",
    "name": "yansi",
    "description": "A dead simple ANSI terminal color painting library.",
    "license": [""],
    "tags": ["paint", "format", "color", "ansi", "terminal"],
    "downloads": 30299792,
    "repositories": ["crates.io"]
  },
  "rust:const_fn": {
    "coordinates": "rust:const_fn",
    "name": "const_fn",
    "description": "An attribute for easy generation of const functions with conditional compilations. ",
    "license": [""],
    "tags": ["static", "attribute", "const", "macros"],
    "downloads": 30274154,
    "repositories": ["crates.io"]
  },
  "rust:ignore": {
    "coordinates": "rust:ignore",
    "name": "ignore",
    "description": "A fast library for efficiently matching ignore files such as `.gitignore` against file paths. ",
    "license": [""],
    "tags": ["glob", "file", "gitignore", "ignore", "pattern"],
    "downloads": 30267494,
    "repositories": ["crates.io"]
  },
  "rust:aes-gcm": {
    "coordinates": "rust:aes-gcm",
    "name": "aes-gcm",
    "description": "Pure Rust implementation of the AES-GCM (Galois/Counter Mode) Authenticated Encryption with Associated Data (AEAD) Cipher with optional architecture-specific hardware acceleration ",
    "license": [""],
    "tags": ["aes", "gcm", "ghash", "aead", "encryption"],
    "downloads": 30166760,
    "repositories": ["crates.io"]
  },
  "rust:md5": {
    "coordinates": "rust:md5",
    "name": "md5",
    "description": "The package provides the MD5 hash function.",
    "license": [""],
    "tags": ["digest", "md5", "checksum", "hash"],
    "downloads": 30078723,
    "repositories": ["crates.io"]
  },
  "rust:async-executor": {
    "coordinates": "rust:async-executor",
    "name": "async-executor",
    "description": "Async executor",
    "license": [""],
    "tags": ["spawn", "single", "multi", "asynchronous", "executor"],
    "downloads": 30039299,
    "repositories": ["crates.io"]
  },
  "rust:proc-macro-nested": {
    "coordinates": "rust:proc-macro-nested",
    "name": "proc-macro-nested",
    "description": "Support for nested proc-macro-hack invocations",
    "license": [""],
    "tags": [],
    "downloads": 29992917,
    "repositories": ["crates.io"]
  },
  "rust:ghash": {
    "coordinates": "rust:ghash",
    "name": "ghash",
    "description": "Universal hash over GF(2^128) useful for constructing a Message Authentication Code (MAC), as in the AES-GCM authenticated encryption cipher. ",
    "license": [""],
    "tags": ["aes-gcm", "universal-hashing", "crypto"],
    "downloads": 29965809,
    "repositories": ["crates.io"]
  },
  "rust:blocking": {
    "coordinates": "rust:blocking",
    "name": "blocking",
    "description": "A thread pool for isolating blocking I/O in async programs",
    "license": [""],
    "tags": ["stdio", "async", "process", "file", "stdin"],
    "downloads": 29804048,
    "repositories": ["crates.io"]
  },
  "rust:zip": {
    "coordinates": "rust:zip",
    "name": "zip",
    "description": "Library to support the reading and writing of zip files. ",
    "license": [""],
    "tags": ["zip", "archive"],
    "downloads": 29768619,
    "repositories": ["crates.io"]
  },
  "rust:hashlink": {
    "coordinates": "rust:hashlink",
    "name": "hashlink",
    "description": "HashMap-like containers that hold their key-value pairs in a user controllable order",
    "license": [""],
    "tags": ["data-structures", "no_std"],
    "downloads": 29764676,
    "repositories": ["crates.io"]
  },
  "rust:serde_cbor": {
    "coordinates": "rust:serde_cbor",
    "name": "serde_cbor",
    "description": "CBOR support for serde.",
    "license": [""],
    "tags": ["no_std", "cbor", "serde", "serialization"],
    "downloads": 29318402,
    "repositories": ["crates.io"]
  },
  "rust:lru-cache": {
    "coordinates": "rust:lru-cache",
    "name": "lru-cache",
    "description": "A cache that holds a limited number of key-value pairs",
    "license": [""],
    "tags": ["data-structures"],
    "downloads": 29263621,
    "repositories": ["crates.io"]
  },
  "rust:errno-dragonfly": {
    "coordinates": "rust:errno-dragonfly",
    "name": "errno-dragonfly",
    "description": "Exposes errno functionality to stable Rust on DragonFlyBSD",
    "license": [""],
    "tags": ["dragonfly"],
    "downloads": 29223361,
    "repositories": ["crates.io"]
  },
  "rust:failure_derive": {
    "coordinates": "rust:failure_derive",
    "name": "failure_derive",
    "description": "derives for the failure crate",
    "license": [""],
    "tags": [],
    "downloads": 29093153,
    "repositories": ["crates.io"]
  },
  "rust:enum-as-inner": {
    "coordinates": "rust:enum-as-inner",
    "name": "enum-as-inner",
    "description": "A proc-macro for deriving inner field accessor functions on enums. ",
    "license": [""],
    "tags": [],
    "downloads": 29077824,
    "repositories": ["crates.io"]
  },
  "rust:valuable": {
    "coordinates": "rust:valuable",
    "name": "valuable",
    "description": "Object-safe value inspection, used to pass un-typed structured data across trait-object boundaries. ",
    "license": [""],
    "tags": ["no_std", "serialization", "debugging", "valuable"],
    "downloads": 28768399,
    "repositories": ["crates.io"]
  },
  "rust:safemem": {
    "coordinates": "rust:safemem",
    "name": "safemem",
    "description": "Safe wrappers for memory-accessing functions, like `std::ptr::copy()`.",
    "license": [""],
    "tags": ["memmove", "copy", "memset"],
    "downloads": 28712000,
    "repositories": ["crates.io"]
  },
  "rust:termtree": {
    "coordinates": "rust:termtree",
    "name": "termtree",
    "description": "Visualize tree-like data on the command-line",
    "license": [""],
    "tags": ["dag", "cli", "tree"],
    "downloads": 28652990,
    "repositories": ["crates.io"]
  },
  "rust:encode_unicode": {
    "coordinates": "rust:encode_unicode",
    "name": "encode_unicode",
    "description": "UTF-8 and UTF-16 character types, iterators and related methods for char, u8 and u16. ",
    "license": [""],
    "tags": ["utf-16", "utf-8", "unicode"],
    "downloads": 28573148,
    "repositories": ["crates.io"]
  },
  "rust:maybe-uninit": {
    "coordinates": "rust:maybe-uninit",
    "name": "maybe-uninit",
    "description": "MaybeUninit for friends of backwards compatibility",
    "license": [""],
    "tags": [],
    "downloads": 28532717,
    "repositories": ["crates.io"]
  },
  "rust:opentelemetry": {
    "coordinates": "rust:opentelemetry",
    "name": "opentelemetry",
    "description": "A metrics collection and distributed tracing framework",
    "license": [""],
    "tags": ["tracing", "logging", "metrics", "opentelemetry", "async"],
    "downloads": 28529511,
    "repositories": ["crates.io"]
  },
  "rust:brotli-decompressor": {
    "coordinates": "rust:brotli-decompressor",
    "name": "brotli-decompressor",
    "description": "A brotli decompressor that with an interface avoiding the rust stdlib. This makes it suitable for embedded devices and kernels. It is designed with a pluggable allocator so that the standard lib''s allocator may be employed. The default build also includes a stdlib allocator and stream interface. Disable this with --features=no-stdlib. Alternatively, --features=unsafe turns off array bounds checks and memory initialization but provides a safe interface for the caller.  Without adding the --features=unsafe argument, all included code is safe. For compression in addition to this library, download https://github.com/dropbox/rust-brotli ",
    "license": [""],
    "tags": ["huffman", "brotli", "lz77", "decompression", "nostd"],
    "downloads": 28441613,
    "repositories": ["crates.io"]
  },
  "rust:png": {
    "coordinates": "rust:png",
    "name": "png",
    "description": "PNG decoding and encoding library in pure Rust",
    "license": [""],
    "tags": [],
    "downloads": 28403768,
    "repositories": ["crates.io"]
  },
  "rust:keccak": {
    "coordinates": "rust:keccak",
    "name": "keccak",
    "description": "Pure Rust implementation of the Keccak sponge function including the keccak-f and keccak-p variants ",
    "license": [""],
    "tags": ["keccak-p", "sponge", "keccak-f", "crypto", "keccak"],
    "downloads": 28269129,
    "repositories": ["crates.io"]
  },
  "rust:number_prefix": {
    "coordinates": "rust:number_prefix",
    "name": "number_prefix",
    "description": "Library for numeric prefixes (kilo, giga, kibi).",
    "license": [""],
    "tags": ["mathematics", "numerics"],
    "downloads": 28248280,
    "repositories": ["crates.io"]
  },
  "rust:alloc-no-stdlib": {
    "coordinates": "rust:alloc-no-stdlib",
    "name": "alloc-no-stdlib",
    "description": "A dynamic allocator that may be used with or without the stdlib. This allows a package with nostd to allocate memory dynamically and be used either with a custom allocator, items on the stack, or by a package that wishes to simply use Box<>. It also provides options to use calloc or a mutable global variable for pre-zeroed memory",
    "license": [""],
    "tags": ["calloc", "allocator", "custom", "safe", "nostd"],
    "downloads": 28160062,
    "repositories": ["crates.io"]
  },
  "rust:iana-time-zone-haiku": {
    "coordinates": "rust:iana-time-zone-haiku",
    "name": "iana-time-zone-haiku",
    "description": "iana-time-zone support crate for Haiku OS",
    "license": [""],
    "tags": ["iana", "time"],
    "downloads": 28130795,
    "repositories": ["crates.io"]
  },
  "rust:string_cache": {
    "coordinates": "rust:string_cache",
    "name": "string_cache",
    "description": "A string interning library for Rust, developed as part of the Servo project.",
    "license": [""],
    "tags": [],
    "downloads": 28083190,
    "repositories": ["crates.io"]
  },
  "rust:headers": {
    "coordinates": "rust:headers",
    "name": "headers",
    "description": "typed HTTP headers",
    "license": [""],
    "tags": ["hyperium", "hyper", "headers", "http"],
    "downloads": 27983752,
    "repositories": ["crates.io"]
  },
  "rust:alloc-stdlib": {
    "coordinates": "rust:alloc-stdlib",
    "name": "alloc-stdlib",
    "description": "A dynamic allocator example that may be used with the stdlib",
    "license": [""],
    "tags": ["calloc", "allocator", "custom", "safe", "nostd"],
    "downloads": 27978543,
    "repositories": ["crates.io"]
  },
  "rust:indicatif": {
    "coordinates": "rust:indicatif",
    "name": "indicatif",
    "description": "A progress bar and cli reporting library for Rust",
    "license": [""],
    "tags": ["progressbar", "pb", "cli", "progress", "colors"],
    "downloads": 27963803,
    "repositories": ["crates.io"]
  },
  "rust:git2": {
    "coordinates": "rust:git2",
    "name": "git2",
    "description": "Bindings to libgit2 for interoperating with git repositories. This library is both threadsafe and memory safe and allows both reading and writing git repositories. ",
    "license": [""],
    "tags": ["git"],
    "downloads": 27863805,
    "repositories": ["crates.io"]
  },
  "rust:trust-dns-proto": {
    "coordinates": "rust:trust-dns-proto",
    "name": "trust-dns-proto",
    "description": "Trust-DNS is a safe and secure DNS library. This is the foundational DNS protocol library for all Trust-DNS projects. ",
    "license": [""],
    "tags": ["named", "dns", "dnssec", "bind", "dig"],
    "downloads": 27839833,
    "repositories": ["crates.io"]
  },
  "rust:approx": {
    "coordinates": "rust:approx",
    "name": "approx",
    "description": "Approximate floating point equality comparisons and assertions.",
    "license": [""],
    "tags": ["equality", "approximate", "float", "comparison", "assert"],
    "downloads": 27837673,
    "repositories": ["crates.io"]
  },
  "rust:libgit2-sys": {
    "coordinates": "rust:libgit2-sys",
    "name": "libgit2-sys",
    "description": "Native bindings to the libgit2 library",
    "license": [""],
    "tags": [],
    "downloads": 27740160,
    "repositories": ["crates.io"]
  },
  "rust:twox-hash": {
    "coordinates": "rust:twox-hash",
    "name": "twox-hash",
    "description": "A Rust implementation of the XXHash and XXH3 algorithms",
    "license": [""],
    "tags": ["xxh3", "hash", "xxhash", "hasher"],
    "downloads": 27613245,
    "repositories": ["crates.io"]
  },
  "rust:codespan-reporting": {
    "coordinates": "rust:codespan-reporting",
    "name": "codespan-reporting",
    "description": "Beautiful diagnostic reporting for text-based programming languages",
    "license": [""],
    "tags": [],
    "downloads": 27532995,
    "repositories": ["crates.io"]
  },
  "rust:new_debug_unreachable": {
    "coordinates": "rust:new_debug_unreachable",
    "name": "new_debug_unreachable",
    "description": "panic in debug, intrinsics::unreachable() in release (fork of debug_unreachable)",
    "license": [""],
    "tags": ["macro", "optimization"],
    "downloads": 27311108,
    "repositories": ["crates.io"]
  },
  "rust:wait-timeout": {
    "coordinates": "rust:wait-timeout",
    "name": "wait-timeout",
    "description": "A crate to wait on a child process with a timeout specified across Unix and Windows platforms. ",
    "license": [""],
    "tags": [],
    "downloads": 27306950,
    "repositories": ["crates.io"]
  },
  "rust:brotli": {
    "coordinates": "rust:brotli",
    "name": "brotli",
    "description": "A brotli compressor and decompressor that with an interface avoiding the rust stdlib. This makes it suitable for embedded devices and kernels. It is designed with a pluggable allocator so that the standard lib''s allocator may be employed. The default build also includes a stdlib allocator and stream interface. Disable this with --features=no-stdlib. All included code is safe.",
    "license": [""],
    "tags": ["huffman", "brotli", "lz77", "decompression", "nostd"],
    "downloads": 27229055,
    "repositories": ["crates.io"]
  },
  "rust:rand_isaac": {
    "coordinates": "rust:rand_isaac",
    "name": "rand_isaac",
    "description": "ISAAC random number generator ",
    "license": [""],
    "tags": ["rng", "isaac", "random"],
    "downloads": 27166623,
    "repositories": ["crates.io"]
  },
  "rust:rand_os": {
    "coordinates": "rust:rand_os",
    "name": "rand_os",
    "description": "OS backed Random Number Generator",
    "license": [""],
    "tags": ["os", "rng", "random"],
    "downloads": 27118281,
    "repositories": ["crates.io"]
  },
  "rust:bzip2-sys": {
    "coordinates": "rust:bzip2-sys",
    "name": "bzip2-sys",
    "description": "Bindings to libbzip2 for bzip2 compression and decompression exposed as Reader/Writer streams. ",
    "license": [""],
    "tags": [],
    "downloads": 27101720,
    "repositories": ["crates.io"]
  },
  "rust:headers-core": {
    "coordinates": "rust:headers-core",
    "name": "headers-core",
    "description": "typed HTTP headers core trait",
    "license": [""],
    "tags": ["hyperium", "hyper", "headers", "http"],
    "downloads": 27060401,
    "repositories": ["crates.io"]
  },
  "rust:fs_extra": {
    "coordinates": "rust:fs_extra",
    "name": "fs_extra",
    "description": "Expanding std::fs and std::io. Recursively copy folders with information about process and much more.",
    "license": [""],
    "tags": ["copy", "recursion", "dir", "filesystem", "file"],
    "downloads": 27053800,
    "repositories": ["crates.io"]
  },
  "rust:precomputed-hash": {
    "coordinates": "rust:precomputed-hash",
    "name": "precomputed-hash",
    "description": "A library intending to be a base dependency to expose a precomputed hash",
    "license": [""],
    "tags": [],
    "downloads": 26989961,
    "repositories": ["crates.io"]
  },
  "rust:pyo3": {
    "coordinates": "rust:pyo3",
    "name": "pyo3",
    "description": "Bindings to Python interpreter",
    "license": [""],
    "tags": ["cpython", "pyo3", "ffi", "python"],
    "downloads": 26959578,
    "repositories": ["crates.io"]
  },
  "rust:http-range-header": {
    "coordinates": "rust:http-range-header",
    "name": "http-range-header",
    "description": "No-dep range header parser",
    "license": [""],
    "tags": ["http-headers", "headers", "parser", "range", "http"],
    "downloads": 26754562,
    "repositories": ["crates.io"]
  },
  "rust:pem-rfc7468": {
    "coordinates": "rust:pem-rfc7468",
    "name": "pem-rfc7468",
    "description": "PEM Encoding (RFC 7468) for PKIX, PKCS, and CMS Structures, implementing a strict subset of the original Privacy-Enhanced Mail encoding intended specifically for use with cryptographic keys, certificates, and other messages. Provides a no_std-friendly, constant-time implementation suitable for use with cryptographic private keys. ",
    "license": [""],
    "tags": ["pkcs", "pem", "key", "rsa", "crypto"],
    "downloads": 26521103,
    "repositories": ["crates.io"]
  },
  "rust:difflib": {
    "coordinates": "rust:difflib",
    "name": "difflib",
    "description": "Port of Python''s difflib library to Rust.",
    "license": [""],
    "tags": ["difflib", "text", "diff"],
    "downloads": 26474768,
    "repositories": ["crates.io"]
  },
  "rust:normalize-line-endings": {
    "coordinates": "rust:normalize-line-endings",
    "name": "normalize-line-endings",
    "description": "Takes an iterator over chars and returns a new iterator with all line endings (\\r, \\n, or \\r\\n) as \\n",
    "license": [""],
    "tags": ["ending", "normalize", "line", "chars"],
    "downloads": 26400807,
    "repositories": ["crates.io"]
  },
  "rust:libsqlite3-sys": {
    "coordinates": "rust:libsqlite3-sys",
    "name": "libsqlite3-sys",
    "description": "Native bindings to the libsqlite3 library",
    "license": [""],
    "tags": ["sqlcipher", "ffi", "sqlite"],
    "downloads": 26359928,
    "repositories": ["crates.io"]
  },
  "rust:language-tags": {
    "coordinates": "rust:language-tags",
    "name": "language-tags",
    "description": "Language tags for Rust",
    "license": [""],
    "tags": ["html", "i18n", "http", "language"],
    "downloads": 26273350,
    "repositories": ["crates.io"]
  },
  "rust:pathdiff": {
    "coordinates": "rust:pathdiff",
    "name": "pathdiff",
    "description": "Library for diffing paths to obtain relative paths",
    "license": [""],
    "tags": ["path", "relative"],
    "downloads": 26147177,
    "repositories": ["crates.io"]
  },
  "rust:inout": {
    "coordinates": "rust:inout",
    "name": "inout",
    "description": "Custom reference types for code generic over in-place and buffer-to-buffer modes of operation.",
    "license": [""],
    "tags": ["custom-reference"],
    "downloads": 26146204,
    "repositories": ["crates.io"]
  },
  "rust:standback": {
    "coordinates": "rust:standback",
    "name": "standback",
    "description": "New standard library, old compiler.",
    "license": [""],
    "tags": ["polyfill", "back-compatible", "std"],
    "downloads": 26140858,
    "repositories": ["crates.io"]
  },
  "rust:ff": {
    "coordinates": "rust:ff",
    "name": "ff",
    "description": "Library for building and interfacing with finite fields",
    "license": [""],
    "tags": [],
    "downloads": 26083741,
    "repositories": ["crates.io"]
  },
  "rust:trust-dns-resolver": {
    "coordinates": "rust:trust-dns-resolver",
    "name": "trust-dns-resolver",
    "description": "Trust-DNS is a safe and secure DNS library. This Resolver library  uses the Client library to perform all DNS queries. The Resolver is intended to be a high-level library for any DNS record resolution see Resolver and AsyncResolver for supported resolution types. The Client can be used for other queries. ",
    "license": [""],
    "tags": ["named", "dns", "dnssec", "bind", "dig"],
    "downloads": 26018828,
    "repositories": ["crates.io"]
  },
  "rust:time-macros-impl": {
    "coordinates": "rust:time-macros-impl",
    "name": "time-macros-impl",
    "description": "Procedural macros for the time crate.",
    "license": [""],
    "tags": ["date", "duration", "time", "calendar"],
    "downloads": 25852191,
    "repositories": ["crates.io"]
  },
  "rust:image": {
    "coordinates": "rust:image",
    "name": "image",
    "description": "Imaging library. Provides basic image processing and encoders/decoders for common image formats.",
    "license": [""],
    "tags": [],
    "downloads": 25838285,
    "repositories": ["crates.io"]
  },
  "rust:ed25519": {
    "coordinates": "rust:ed25519",
    "name": "ed25519",
    "description": "Edwards Digital Signature Algorithm (EdDSA) over Curve25519 (as specified in RFC 8032) support library providing signature type definitions and PKCS#8 private key decoding/encoding support ",
    "license": [""],
    "tags": ["crypto", "signing", "signature", "curve25519", "ecc"],
    "downloads": 25808802,
    "repositories": ["crates.io"]
  },
  "rust:rand_jitter": {
    "coordinates": "rust:rand_jitter",
    "name": "rand_jitter",
    "description": "Random number generator based on timing jitter",
    "license": [""],
    "tags": ["rng", "random", "os"],
    "downloads": 25780066,
    "repositories": ["crates.io"]
  },
  "rust:group": {
    "coordinates": "rust:group",
    "name": "group",
    "description": "Elliptic curve group traits and utilities",
    "license": [""],
    "tags": [],
    "downloads": 25772228,
    "repositories": ["crates.io"]
  },
  "rust:stringprep": {
    "coordinates": "rust:stringprep",
    "name": "stringprep",
    "description": "An implementation of the stringprep algorithm",
    "license": [""],
    "tags": [],
    "downloads": 25770669,
    "repositories": ["crates.io"]
  },
  "rust:zerocopy": {
    "coordinates": "rust:zerocopy",
    "name": "zerocopy",
    "description": "Utilities for zero-copy parsing and serialization",
    "license": [""],
    "tags": [],
    "downloads": 25679571,
    "repositories": ["crates.io"]
  },
  "rust:resolv-conf": {
    "coordinates": "rust:resolv-conf",
    "name": "resolv-conf",
    "description": "    The resolv.conf file parser ",
    "license": [""],
    "tags": ["conf", "resolv", "unix", "dns"],
    "downloads": 25483640,
    "repositories": ["crates.io"]
  },
  "rust:allocator-api2": {
    "coordinates": "rust:allocator-api2",
    "name": "allocator-api2",
    "description": "Mirror of Rust''s allocator API",
    "license": [""],
    "tags": [],
    "downloads": 25479556,
    "repositories": ["crates.io"]
  },
  "rust:pyo3-macros": {
    "coordinates": "rust:pyo3-macros",
    "name": "pyo3-macros",
    "description": "Proc macros for PyO3 package",
    "license": [""],
    "tags": ["cpython", "pyo3", "ffi", "python"],
    "downloads": 25347295,
    "repositories": ["crates.io"]
  },
  "rust:pyo3-macros-backend": {
    "coordinates": "rust:pyo3-macros-backend",
    "name": "pyo3-macros-backend",
    "description": "Code generation for PyO3 package",
    "license": [""],
    "tags": ["cpython", "pyo3", "ffi", "python"],
    "downloads": 25346083,
    "repositories": ["crates.io"]
  },
  "rust:inotify": {
    "coordinates": "rust:inotify",
    "name": "inotify",
    "description": "Idiomatic wrapper for inotify",
    "license": [""],
    "tags": ["inotify", "linux"],
    "downloads": 25164019,
    "repositories": ["crates.io"]
  },
  "rust:nodrop": {
    "coordinates": "rust:nodrop",
    "name": "nodrop",
    "description": "A wrapper type to inhibit drop (destructor).  ***Deprecated: Use ManuallyDrop or MaybeUninit instead!*** ",
    "license": [""],
    "tags": [],
    "downloads": 25009794,
    "repositories": ["crates.io"]
  },
  "rust:elliptic-curve": {
    "coordinates": "rust:elliptic-curve",
    "name": "elliptic-curve",
    "description": "General purpose Elliptic Curve Cryptography (ECC) support, including types and traits for representing various elliptic curve forms, scalars, points, and public/secret keys composed thereof. ",
    "license": [""],
    "tags": ["elliptic", "weierstrass", "ecc", "crypto"],
    "downloads": 24986188,
    "repositories": ["crates.io"]
  },
  "rust:ecdsa": {
    "coordinates": "rust:ecdsa",
    "name": "ecdsa",
    "description": "Pure Rust implementation of the Elliptic Curve Digital Signature Algorithm (ECDSA) as specified in FIPS 186-4 (Digital Signature Standard), providing RFC6979 deterministic signatures as well as support for added entropy ",
    "license": [""],
    "tags": ["nist", "ecc", "signature", "secp256k1", "crypto"],
    "downloads": 24551808,
    "repositories": ["crates.io"]
  },
  "rust:async-compression": {
    "coordinates": "rust:async-compression",
    "name": "async-compression",
    "description": "Adaptors between compression crates and Rust''s modern asynchronous IO types. ",
    "license": [""],
    "tags": ["zstd", "brotli", "compression", "gzip", "async"],
    "downloads": 24382733,
    "repositories": ["crates.io"]
  },
  "rust:fragile": {
    "coordinates": "rust:fragile",
    "name": "fragile",
    "description": "Provides wrapper types for sending non-send values to other threads.",
    "license": [""],
    "tags": ["send-wrapper", "non-send", "failure", "cell", "send"],
    "downloads": 23829408,
    "repositories": ["crates.io"]
  },
  "rust:phf_macros": {
    "coordinates": "rust:phf_macros",
    "name": "phf_macros",
    "description": "Macros to generate types in the phf crate",
    "license": [""],
    "tags": [],
    "downloads": 23740168,
    "repositories": ["crates.io"]
  },
  "rust:notify": {
    "coordinates": "rust:notify",
    "name": "notify",
    "description": "Cross-platform filesystem notification library",
    "license": [""],
    "tags": ["events", "notify", "watch", "filesystem"],
    "downloads": 23683979,
    "repositories": ["crates.io"]
  },
  "rust:mockall": {
    "coordinates": "rust:mockall",
    "name": "mockall",
    "description": "A powerful mock object library for Rust. ",
    "license": [""],
    "tags": ["mock", "mocking", "testing"],
    "downloads": 23668501,
    "repositories": ["crates.io"]
  },
  "rust:inotify-sys": {
    "coordinates": "rust:inotify-sys",
    "name": "inotify-sys",
    "description": "inotify bindings for the Rust programming language",
    "license": [""],
    "tags": ["inotify", "linux"],
    "downloads": 23661738,
    "repositories": ["crates.io"]
  },
  "rust:flume": {
    "coordinates": "rust:flume",
    "name": "flume",
    "description": "A blazingly fast multi-producer channel",
    "license": [""],
    "tags": ["mpsc", "channel", "fifo", "mpmc", "thread"],
    "downloads": 23660569,
    "repositories": ["crates.io"]
  },
  "rust:prometheus": {
    "coordinates": "rust:prometheus",
    "name": "prometheus",
    "description": "Prometheus instrumentation library for Rust applications.",
    "license": [""],
    "tags": ["prometheus", "metrics"],
    "downloads": 23628417,
    "repositories": ["crates.io"]
  },
  "rust:mockall_derive": {
    "coordinates": "rust:mockall_derive",
    "name": "mockall_derive",
    "description": "Procedural macros for Mockall ",
    "license": [""],
    "tags": ["mocking", "testing", "mock"],
    "downloads": 23586415,
    "repositories": ["crates.io"]
  },
  "rust:ctrlc": {
    "coordinates": "rust:ctrlc",
    "name": "ctrlc",
    "description": "Easy Ctrl-C handler for Rust projects",
    "license": [""],
    "tags": ["ctrlc", "sigint", "signal"],
    "downloads": 23497703,
    "repositories": ["crates.io"]
  },
  "rust:value-bag": {
    "coordinates": "rust:value-bag",
    "name": "value-bag",
    "description": "Anonymous structured values",
    "license": [""],
    "tags": ["no_std", "serialization"],
    "downloads": 23463789,
    "repositories": ["crates.io"]
  },
  "rust:getopts": {
    "coordinates": "rust:getopts",
    "name": "getopts",
    "description": "getopts-like option parsing. ",
    "license": [""],
    "tags": [],
    "downloads": 23352500,
    "repositories": ["crates.io"]
  },
  "rust:tracing-opentelemetry": {
    "coordinates": "rust:tracing-opentelemetry",
    "name": "tracing-opentelemetry",
    "description": "OpenTelemetry integration for tracing",
    "license": [""],
    "tags": ["tracing", "async", "zipkin", "jaeger", "opentelemetry"],
    "downloads": 23329526,
    "repositories": ["crates.io"]
  },
  "rust:blake2": {
    "coordinates": "rust:blake2",
    "name": "blake2",
    "description": "BLAKE2 hash functions",
    "license": [""],
    "tags": ["blake2", "crypto", "digest", "hash"],
    "downloads": 23317027,
    "repositories": ["crates.io"]
  },
  "rust:crc-catalog": {
    "coordinates": "rust:crc-catalog",
    "name": "crc-catalog",
    "description": "Catalog of CRC algorithms (generated from http://reveng.sourceforge.net/crc-catalogue) expressed as simple Rust structs.",
    "license": [""],
    "tags": ["crc"],
    "downloads": 23306464,
    "repositories": ["crates.io"]
  },
  "rust:winapi-build": {
    "coordinates": "rust:winapi-build",
    "name": "winapi-build",
    "description": "Common code for build.rs in WinAPI -sys crates.",
    "license": [""],
    "tags": ["winsdk", "windows", "ffi"],
    "downloads": 23186578,
    "repositories": ["crates.io"]
  },
  "rust:ntapi": {
    "coordinates": "rust:ntapi",
    "name": "ntapi",
    "description": "FFI bindings for Native API",
    "license": [""],
    "tags": ["ntapi", "win32", "windows", "native", "ffi"],
    "downloads": 23131196,
    "repositories": ["crates.io"]
  },
  "rust:fs2": {
    "coordinates": "rust:fs2",
    "name": "fs2",
    "description": "Cross-platform file locks and file duplication.",
    "license": [""],
    "tags": ["file-system", "flock", "lock", "duplicate", "file"],
    "downloads": 23095766,
    "repositories": ["crates.io"]
  },
  "rust:pyo3-build-config": {
    "coordinates": "rust:pyo3-build-config",
    "name": "pyo3-build-config",
    "description": "Build configuration for the PyO3 ecosystem",
    "license": [""],
    "tags": ["cpython", "pyo3", "ffi", "python"],
    "downloads": 23049088,
    "repositories": ["crates.io"]
  },
  "rust:kernel32-sys": {
    "coordinates": "rust:kernel32-sys",
    "name": "kernel32-sys",
    "description": "Contains function definitions for the Windows API library kernel32. See winapi for types and constants.",
    "license": [""],
    "tags": ["windows", "win32", "ffi"],
    "downloads": 22970797,
    "repositories": ["crates.io"]
  },
  "rust:downcast": {
    "coordinates": "rust:downcast",
    "name": "downcast",
    "description": "Trait for downcasting trait objects back to their original types.",
    "license": [""],
    "tags": ["any"],
    "downloads": 22864140,
    "repositories": ["crates.io"]
  },
  "rust:blake3": {
    "coordinates": "rust:blake3",
    "name": "blake3",
    "description": "the BLAKE3 hash function",
    "license": [""],
    "tags": [],
    "downloads": 22844546,
    "repositories": ["crates.io"]
  },
  "rust:async-recursion": {
    "coordinates": "rust:async-recursion",
    "name": "async-recursion",
    "description": "Recursion for async functions",
    "license": [""],
    "tags": [],
    "downloads": 22771352,
    "repositories": ["crates.io"]
  },
  "rust:async-std": {
    "coordinates": "rust:async-std",
    "name": "async-std",
    "description": "Async version of the Rust standard library",
    "license": [""],
    "tags": ["task", "async", "std", "future", "await"],
    "downloads": 22453514,
    "repositories": ["crates.io"]
  },
  "rust:pulldown-cmark": {
    "coordinates": "rust:pulldown-cmark",
    "name": "pulldown-cmark",
    "description": "A pull parser for CommonMark",
    "license": [""],
    "tags": ["markdown", "commonmark"],
    "downloads": 22185784,
    "repositories": ["crates.io"]
  },
  "rust:wasmparser": {
    "coordinates": "rust:wasmparser",
    "name": "wasmparser",
    "description": "A simple event-driven library for parsing WebAssembly binary files. ",
    "license": [""],
    "tags": ["webassembly", "wasm", "parser"],
    "downloads": 22114249,
    "repositories": ["crates.io"]
  },
  "rust:color_quant": {
    "coordinates": "rust:color_quant",
    "name": "color_quant",
    "description": "Color quantization library to reduce n colors to 256 colors.",
    "license": [""],
    "tags": [],
    "downloads": 21999922,
    "repositories": ["crates.io"]
  },
  "rust:erased-serde": {
    "coordinates": "rust:erased-serde",
    "name": "erased-serde",
    "description": "Type-erased Serialize and Serializer traits",
    "license": [""],
    "tags": ["erasure", "serde"],
    "downloads": 21996372,
    "repositories": ["crates.io"]
  },
  "rust:sysinfo": {
    "coordinates": "rust:sysinfo",
    "name": "sysinfo",
    "description": "Library to get system information such as processes, CPUs, disks, components and networks",
    "license": [""],
    "tags": [],
    "downloads": 21912785,
    "repositories": ["crates.io"]
  },
  "rust:async-global-executor": {
    "coordinates": "rust:async-global-executor",
    "name": "async-global-executor",
    "description": "A global executor built on top of async-executor and async-io",
    "license": [""],
    "tags": ["future", "executor", "await", "async"],
    "downloads": 21653253,
    "repositories": ["crates.io"]
  },
  "rust:ascii": {
    "coordinates": "rust:ascii",
    "name": "ascii",
    "description": "ASCII-only equivalents to `char`, `str` and `String`.",
    "license": [""],
    "tags": [],
    "downloads": 21624205,
    "repositories": ["crates.io"]
  },
  "rust:derive_builder": {
    "coordinates": "rust:derive_builder",
    "name": "derive_builder",
    "description": "Rust macro to automatically implement the builder pattern for arbitrary structs.",
    "license": [""],
    "tags": ["setter", "struct", "macro", "builder", "derive"],
    "downloads": 21610255,
    "repositories": ["crates.io"]
  },
  "rust:derive_builder_core": {
    "coordinates": "rust:derive_builder_core",
    "name": "derive_builder_core",
    "description": "Internal helper library for the derive_builder crate.",
    "license": [""],
    "tags": [],
    "downloads": 21594212,
    "repositories": ["crates.io"]
  },
  "rust:ed25519-dalek": {
    "coordinates": "rust:ed25519-dalek",
    "name": "ed25519-dalek",
    "description": "Fast and efficient ed25519 EdDSA key generations, signing, and verification in pure Rust.",
    "license": [""],
    "tags": ["cryptography", "ed25519", "ecc", "curve25519", "signature"],
    "downloads": 21582892,
    "repositories": ["crates.io"]
  },
  "rust:sec1": {
    "coordinates": "rust:sec1",
    "name": "sec1",
    "description": "Pure Rust implementation of SEC1: Elliptic Curve Cryptography encoding formats including ASN.1 DER-serialized private keys as well as the Elliptic-Curve-Point-to-Octet-String encoding ",
    "license": [""],
    "tags": ["secg", "elliptic-curve", "key", "crypto"],
    "downloads": 21582665,
    "repositories": ["crates.io"]
  },
  "rust:sha1_smol": {
    "coordinates": "rust:sha1_smol",
    "name": "sha1_smol",
    "description": "Minimal dependency free implementation of SHA1 for Rust.",
    "license": [""],
    "tags": ["sha1"],
    "downloads": 21529554,
    "repositories": ["crates.io"]
  },
  "rust:bzip2": {
    "coordinates": "rust:bzip2",
    "name": "bzip2",
    "description": "Bindings to libbzip2 for bzip2 compression and decompression exposed as Reader/Writer streams. ",
    "license": [""],
    "tags": ["bzip", "encoding"],
    "downloads": 21521144,
    "repositories": ["crates.io"]
  },
  "rust:base16ct": {
    "coordinates": "rust:base16ct",
    "name": "base16ct",
    "description": "Pure Rust implementation of Base16 a.k.a hexadecimal (RFC 4648) which avoids any usages of data-dependent branches/LUTs and thereby provides portable \"best effort\" constant-time operation and embedded-friendly no_std support ",
    "license": [""],
    "tags": ["hex", "hexadecimal", "crypto"],
    "downloads": 21506252,
    "repositories": ["crates.io"]
  },
  "rust:whoami": {
    "coordinates": "rust:whoami",
    "name": "whoami",
    "description": "Retrieve the current user and environment.",
    "license": [""],
    "tags": ["whoami", "detect", "username", "platform", "user"],
    "downloads": 21491357,
    "repositories": ["crates.io"]
  },
  "rust:serde_path_to_error": {
    "coordinates": "rust:serde_path_to_error",
    "name": "serde_path_to_error",
    "description": "Path to the element that failed to deserialize",
    "license": [""],
    "tags": ["serde", "serialization"],
    "downloads": 21412642,
    "repositories": ["crates.io"]
  },
  "rust:serial_test": {
    "coordinates": "rust:serial_test",
    "name": "serial_test",
    "description": "Allows for the creation of serialised Rust tests",
    "license": [""],
    "tags": ["parallel", "sequential", "testing"],
    "downloads": 21327463,
    "repositories": ["crates.io"]
  },
  "rust:ciborium-io": {
    "coordinates": "rust:ciborium-io",
    "name": "ciborium-io",
    "description": "Simplified Read/Write traits for no_std usage",
    "license": [""],
    "tags": ["write", "io", "read"],
    "downloads": 21315073,
    "repositories": ["crates.io"]
  },
  "rust:ciborium": {
    "coordinates": "rust:ciborium",
    "name": "ciborium",
    "description": "serde implementation of CBOR using ciborium-basic",
    "license": [""],
    "tags": ["cbor", "serde"],
    "downloads": 21300362,
    "repositories": ["crates.io"]
  },
  "rust:ciborium-ll": {
    "coordinates": "rust:ciborium-ll",
    "name": "ciborium-ll",
    "description": "Low-level CBOR codec primitives",
    "license": [""],
    "tags": ["cbor"],
    "downloads": 21299963,
    "repositories": ["crates.io"]
  },
  "rust:unsafe-libyaml": {
    "coordinates": "rust:unsafe-libyaml",
    "name": "unsafe-libyaml",
    "description": "libyaml transpiled to rust by c2rust",
    "license": [""],
    "tags": ["yaml"],
    "downloads": 21276237,
    "repositories": ["crates.io"]
  },
  "rust:utf8-ranges": {
    "coordinates": "rust:utf8-ranges",
    "name": "utf8-ranges",
    "description": "DEPRECATED. Use regex-syntax::utf8 submodule instead.",
    "license": [""],
    "tags": ["automaton", "utf8", "range", "codepoint"],
    "downloads": 21235993,
    "repositories": ["crates.io"]
  },
  "rust:kv-log-macro": {
    "coordinates": "rust:kv-log-macro",
    "name": "kv-log-macro",
    "description": "Log macro for log''s kv-unstable backend.",
    "license": [""],
    "tags": ["value", "kv", "key", "log", "macro"],
    "downloads": 21212999,
    "repositories": ["crates.io"]
  },
  "rust:serial_test_derive": {
    "coordinates": "rust:serial_test_derive",
    "name": "serial_test_derive",
    "description": "Helper crate for serial_test",
    "license": [""],
    "tags": [],
    "downloads": 21099188,
    "repositories": ["crates.io"]
  },
  "rust:downcast-rs": {
    "coordinates": "rust:downcast-rs",
    "name": "downcast-rs",
    "description": "Trait object downcasting support using only safe Rust. It supports type parameters, associated types, and type constraints. ",
    "license": [""],
    "tags": ["associated", "any", "downcast", "trait", "no_std"],
    "downloads": 21074208,
    "repositories": ["crates.io"]
  },
  "rust:unreachable": {
    "coordinates": "rust:unreachable",
    "name": "unreachable",
    "description": "An unreachable code optimization hint in stable rust.",
    "license": [""],
    "tags": [],
    "downloads": 21033897,
    "repositories": ["crates.io"]
  },
  "rust:jpeg-decoder": {
    "coordinates": "rust:jpeg-decoder",
    "name": "jpeg-decoder",
    "description": "JPEG decoder",
    "license": [""],
    "tags": ["jpeg", "jpg", "image", "decoder"],
    "downloads": 20840336,
    "repositories": ["crates.io"]
  },
  "rust:cache-padded": {
    "coordinates": "rust:cache-padded",
    "name": "cache-padded",
    "description": "Prevent false sharing by padding and aligning to the length of a cache line",
    "license": [""],
    "tags": ["atomic", "padding", "lock-free", "cache"],
    "downloads": 20837827,
    "repositories": ["crates.io"]
  },
  "rust:config": {
    "coordinates": "rust:config",
    "name": "config",
    "description": "Layered configuration system for Rust applications.",
    "license": [""],
    "tags": ["settings", "env", "configuration", "config", "environment"],
    "downloads": 20822501,
    "repositories": ["crates.io"]
  },
  "rust:handlebars": {
    "coordinates": "rust:handlebars",
    "name": "handlebars",
    "description": "Handlebars templating implemented in Rust.",
    "license": [""],
    "tags": ["handlebars", "templating", "web"],
    "downloads": 20693200,
    "repositories": ["crates.io"]
  },
  "rust:bytecount": {
    "coordinates": "rust:bytecount",
    "name": "bytecount",
    "description": "count occurrences of a given byte, or the number of UTF-8 code points, in a byte slice, fast",
    "license": [""],
    "tags": [],
    "downloads": 20678132,
    "repositories": ["crates.io"]
  },
  "rust:crossterm": {
    "coordinates": "rust:crossterm",
    "name": "crossterm",
    "description": "A crossplatform terminal library for manipulating terminals.",
    "license": [""],
    "tags": ["event", "color", "terminal", "input", "cli"],
    "downloads": 20610132,
    "repositories": ["crates.io"]
  },
  "rust:rsa": {
    "coordinates": "rust:rsa",
    "name": "rsa",
    "description": "Pure Rust RSA implementation",
    "license": [""],
    "tags": ["encryption", "rsa", "security", "crypto"],
    "downloads": 20534750,
    "repositories": ["crates.io"]
  },
  "rust:indenter": {
    "coordinates": "rust:indenter",
    "name": "indenter",
    "description": "A formatter wrapper that indents the text, designed for error display impls ",
    "license": [""],
    "tags": ["formatter", "fmt", "error", "display"],
    "downloads": 20528891,
    "repositories": ["crates.io"]
  },
  "rust:rust-ini": {
    "coordinates": "rust:rust-ini",
    "name": "rust-ini",
    "description": "An Ini configuration file parsing library in Rust",
    "license": [""],
    "tags": ["conf", "configuration", "ini", "cfg"],
    "downloads": 20472717,
    "repositories": ["crates.io"]
  },
  "rust:serde_derive_internals": {
    "coordinates": "rust:serde_derive_internals",
    "name": "serde_derive_internals",
    "description": "AST representation used by Serde derive macros. Unstable.",
    "license": [""],
    "tags": ["serde", "serialization"],
    "downloads": 20417820,
    "repositories": ["crates.io"]
  },
  "rust:simple_asn1": {
    "coordinates": "rust:simple_asn1",
    "name": "simple_asn1",
    "description": "A simple DER/ASN.1 encoding/decoding library.",
    "license": [""],
    "tags": ["der", "asn1", "encoding"],
    "downloads": 20233769,
    "repositories": ["crates.io"]
  },
  "rust:rfc6979": {
    "coordinates": "rust:rfc6979",
    "name": "rfc6979",
    "description": "Pure Rust implementation of RFC6979: Deterministic Usage of the Digital Signature Algorithm (DSA) and Elliptic Curve Digital Signature Algorithm (ECDSA) ",
    "license": [""],
    "tags": ["ecdsa", "dsa", "signature"],
    "downloads": 20166217,
    "repositories": ["crates.io"]
  },
  "rust:eyre": {
    "coordinates": "rust:eyre",
    "name": "eyre",
    "description": "Flexible concrete Error Reporting type built on std::error::Error with customizable Reports",
    "license": [""],
    "tags": [],
    "downloads": 20069572,
    "repositories": ["crates.io"]
  },
  "rust:vsdb": {
    "coordinates": "rust:vsdb",
    "name": "vsdb",
    "description": "A stuctured DB with some ''Git-like'' features, mainly used in blockchain projects.",
    "license": [""],
    "tags": ["git", "version", "leveldb", "vcs", "rocksdb"],
    "downloads": 20028050,
    "repositories": ["crates.io"]
  },
  "rust:seahash": {
    "coordinates": "rust:seahash",
    "name": "seahash",
    "description": "A blazingly fast, portable hash function with proven statistical guarantees.",
    "license": [""],
    "tags": ["checksumming", "checksum", "hashing", "hash", "portable"],
    "downloads": 19983914,
    "repositories": ["crates.io"]
  },
  "rust:curl-sys": {
    "coordinates": "rust:curl-sys",
    "name": "curl-sys",
    "description": "Native bindings to the libcurl library",
    "license": [""],
    "tags": [],
    "downloads": 19970397,
    "repositories": ["crates.io"]
  },
  "rust:matrixmultiply": {
    "coordinates": "rust:matrixmultiply",
    "name": "matrixmultiply",
    "description": "General matrix multiplication for f32 and f64 matrices. Operates on matrices with general layout (they can use arbitrary row and column stride). Detects and uses AVX or SSE2 on x86 platforms transparently for higher performance. Uses a microkernel strategy, so that the implementation is easy to parallelize and optimize.  Supports multithreading.",
    "license": [""],
    "tags": ["sgemm", "dgemm", "matrix"],
    "downloads": 19964581,
    "repositories": ["crates.io"]
  },
  "rust:vsdb_derive": {
    "coordinates": "rust:vsdb_derive",
    "name": "vsdb_derive",
    "description": "Some procedure macro implementations for vsdb.",
    "license": [""],
    "tags": ["vcs", "leveldb", "version", "rocksdb", "git"],
    "downloads": 19882056,
    "repositories": ["crates.io"]
  },
  "rust:vsdbsled": {
    "coordinates": "rust:vsdbsled",
    "name": "vsdbsled",
    "description": "Lightweight high-performance pure-rust transactional embedded database.",
    "license": [""],
    "tags": ["redis", "lmdb", "sqlite", "mongo", "rocksdb"],
    "downloads": 19879452,
    "repositories": ["crates.io"]
  },
  "rust:difference": {
    "coordinates": "rust:difference",
    "name": "difference",
    "description": "A Rust text diffing and assertion library.",
    "license": [""],
    "tags": ["assert", "compare", "changes", "text", "diff"],
    "downloads": 19863012,
    "repositories": ["crates.io"]
  },
  "rust:owo-colors": {
    "coordinates": "rust:owo-colors",
    "name": "owo-colors",
    "description": "Zero-allocation terminal colors that''ll make people go owo",
    "license": [""],
    "tags": ["cli", "terminal", "no-std", "ansi_term", "color"],
    "downloads": 19836486,
    "repositories": ["crates.io"]
  },
  "rust:widestring": {
    "coordinates": "rust:widestring",
    "name": "widestring",
    "description": "A wide string Rust library for converting to and from wide strings, such as those often used in Windows API or other FFI libaries. Both `u16` and `u32` string types are provided, including support for UTF-16 and UTF-32, malformed encoding, C-style strings, etc.",
    "license": [""],
    "tags": ["utf-32", "utf-16", "wide", "win32", "string"],
    "downloads": 19776685,
    "repositories": ["crates.io"]
  },
  "rust:powerfmt": {
    "coordinates": "rust:powerfmt",
    "name": "powerfmt",
    "description": "    `powerfmt` is a library that provides utilities for formatting values. This crate makes it     significantly easier to support filling to a minimum width with alignment, avoid heap     allocation, and avoid repetitive calculations. ",
    "license": [""],
    "tags": ["extension", "display", "fmt", "formatter", "format"],
    "downloads": 19759744,
    "repositories": ["crates.io"]
  },
  "rust:actix-rt": {
    "coordinates": "rust:actix-rt",
    "name": "actix-rt",
    "description": "Tokio-based single-threaded async runtime for the Actix ecosystem",
    "license": [""],
    "tags": ["runtime", "futures", "async", "io"],
    "downloads": 19684763,
    "repositories": ["crates.io"]
  },
  "rust:chrono-tz": {
    "coordinates": "rust:chrono-tz",
    "name": "chrono-tz",
    "description": "TimeZone implementations for chrono from the IANA database",
    "license": [""],
    "tags": ["iana", "zone", "timezone", "time", "date"],
    "downloads": 19606339,
    "repositories": ["crates.io"]
  },
  "rust:openssl-src": {
    "coordinates": "rust:openssl-src",
    "name": "openssl-src",
    "description": "Source of OpenSSL and logic to build it. ",
    "license": [""],
    "tags": [],
    "downloads": 19550840,
    "repositories": ["crates.io"]
  },
  "rust:anes": {
    "coordinates": "rust:anes",
    "name": "anes",
    "description": "ANSI Escape Sequences provider & parser",
    "license": [""],
    "tags": ["sequence", "ansi", "code", "terminal", "parser"],
    "downloads": 19535957,
    "repositories": ["crates.io"]
  },
  "rust:cxxbridge-macro": {
    "coordinates": "rust:cxxbridge-macro",
    "name": "cxxbridge-macro",
    "description": "Implementation detail of the `cxx` crate.",
    "license": [""],
    "tags": ["ffi"],
    "downloads": 19519394,
    "repositories": ["crates.io"]
  },
  "rust:rawpointer": {
    "coordinates": "rust:rawpointer",
    "name": "rawpointer",
    "description": "Extra methods for raw pointers and `NonNull<T>`.  For example `.post_inc()` and `.pre_dec()` (c.f. `ptr++` and `--ptr`), `offset` and `add` for `NonNull<T>`, and the function `ptrdistance`. ",
    "license": [""],
    "tags": ["raw", "pointer", "no_std"],
    "downloads": 19456974,
    "repositories": ["crates.io"]
  },
  "rust:cxx": {
    "coordinates": "rust:cxx",
    "name": "cxx",
    "description": "Safe interop between Rust and C++",
    "license": [""],
    "tags": ["c++", "ffi"],
    "downloads": 19453244,
    "repositories": ["crates.io"]
  },
  "rust:cxxbridge-flags": {
    "coordinates": "rust:cxxbridge-flags",
    "name": "cxxbridge-flags",
    "description": "Compiler configuration of the `cxx` crate (implementation detail)",
    "license": [""],
    "tags": [],
    "downloads": 19331716,
    "repositories": ["crates.io"]
  },
  "rust:num-bigint-dig": {
    "coordinates": "rust:num-bigint-dig",
    "name": "num-bigint-dig",
    "description": "Big integer implementation for Rust",
    "license": [""],
    "tags": ["bignum", "numerics", "mathematics"],
    "downloads": 19277844,
    "repositories": ["crates.io"]
  },
  "rust:debugid": {
    "coordinates": "rust:debugid",
    "name": "debugid",
    "description": "Common reusable types for implementing the sentry.io protocol.",
    "license": [""],
    "tags": ["crashpad", "debugid", "sentry", "breakpad"],
    "downloads": 19131332,
    "repositories": ["crates.io"]
  },
  "rust:ureq": {
    "coordinates": "rust:ureq",
    "name": "ureq",
    "description": "Simple, safe HTTP client",
    "license": [""],
    "tags": ["client", "https", "request", "http", "web"],
    "downloads": 19060910,
    "repositories": ["crates.io"]
  },
  "rust:mio-uds": {
    "coordinates": "rust:mio-uds",
    "name": "mio-uds",
    "description": "Unix domain socket bindings for mio ",
    "license": [""],
    "tags": [],
    "downloads": 19051837,
    "repositories": ["crates.io"]
  },
  "rust:portable-atomic": {
    "coordinates": "rust:portable-atomic",
    "name": "portable-atomic",
    "description": "Portable atomic types including support for 128-bit atomics, atomic float, etc. ",
    "license": [""],
    "tags": ["atomic"],
    "downloads": 18990416,
    "repositories": ["crates.io"]
  },
  "rust:link-cplusplus": {
    "coordinates": "rust:link-cplusplus",
    "name": "link-cplusplus",
    "description": "Link libstdc++ or libc++ automatically or manually",
    "license": [""],
    "tags": ["linkage", "c++"],
    "downloads": 18983083,
    "repositories": ["crates.io"]
  },
  "rust:actix-web": {
    "coordinates": "rust:actix-web",
    "name": "actix-web",
    "description": "Actix Web is a powerful, pragmatic, and extremely fast web framework for Rust",
    "license": [""],
    "tags": ["http", "web", "async", "actix", "framework"],
    "downloads": 18798601,
    "repositories": ["crates.io"]
  },
  "rust:bs58": {
    "coordinates": "rust:bs58",
    "name": "bs58",
    "description": "Another Base58 codec implementation.",
    "license": [""],
    "tags": ["base58"],
    "downloads": 18745066,
    "repositories": ["crates.io"]
  },
  "rust:const-random": {
    "coordinates": "rust:const-random",
    "name": "const-random",
    "description": "Provides compile time random number generation.",
    "license": [""],
    "tags": ["constants", "macro", "rust"],
    "downloads": 18531608,
    "repositories": ["crates.io"]
  },
  "rust:const-random-macro": {
    "coordinates": "rust:const-random-macro",
    "name": "const-random-macro",
    "description": "Provides the procedural macro used by const-random",
    "license": [""],
    "tags": ["constants", "macro", "rust"],
    "downloads": 18476573,
    "repositories": ["crates.io"]
  },
  "rust:snap": {
    "coordinates": "rust:snap",
    "name": "snap",
    "description": "A pure Rust implementation of the Snappy compression algorithm. Includes streaming compression and decompression. ",
    "license": [""],
    "tags": [
      "snappy",
      "compression",
      "compress",
      "decompress",
      "decompression"
    ],
    "downloads": 18427081,
    "repositories": ["crates.io"]
  },
  "rust:actix-http": {
    "coordinates": "rust:actix-http",
    "name": "actix-http",
    "description": "HTTP types and services for the Actix ecosystem",
    "license": [""],
    "tags": ["http", "futures", "async", "actix", "framework"],
    "downloads": 18403670,
    "repositories": ["crates.io"]
  },
  "rust:jsonwebtoken": {
    "coordinates": "rust:jsonwebtoken",
    "name": "jsonwebtoken",
    "description": "Create and decode JWTs in a strongly typed way.",
    "license": [""],
    "tags": ["jwk", "jwt", "token", "api"],
    "downloads": 18385742,
    "repositories": ["crates.io"]
  },
  "rust:android-tzdata": {
    "coordinates": "rust:android-tzdata",
    "name": "android-tzdata",
    "description": "Parser for the Android-specific tzdata file",
    "license": [""],
    "tags": ["android", "timezone", "parser"],
    "downloads": 18287404,
    "repositories": ["crates.io"]
  },
  "rust:unicode_categories": {
    "coordinates": "rust:unicode_categories",
    "name": "unicode_categories",
    "description": "Query Unicode category membership for chars",
    "license": [""],
    "tags": ["unicode"],
    "downloads": 18274082,
    "repositories": ["crates.io"]
  },
  "rust:actix-codec": {
    "coordinates": "rust:actix-codec",
    "name": "actix-codec",
    "description": "Codec utilities for working with framed protocols",
    "license": [""],
    "tags": ["futures", "network", "async", "framework"],
    "downloads": 18259358,
    "repositories": ["crates.io"]
  },
  "rust:tempdir": {
    "coordinates": "rust:tempdir",
    "name": "tempdir",
    "description": "A library for managing a temporary directory and deleting all contents when it''s dropped. ",
    "license": [""],
    "tags": ["fs", "filesystem", "file"],
    "downloads": 18184268,
    "repositories": ["crates.io"]
  },
  "rust:tokio-io": {
    "coordinates": "rust:tokio-io",
    "name": "tokio-io",
    "description": "Core I/O primitives for asynchronous I/O in Rust. ",
    "license": [""],
    "tags": [],
    "downloads": 18136026,
    "repositories": ["crates.io"]
  },
  "rust:string_cache_codegen": {
    "coordinates": "rust:string_cache_codegen",
    "name": "string_cache_codegen",
    "description": "A codegen library for string-cache, developed as part of the Servo project.",
    "license": [""],
    "tags": [],
    "downloads": 18066464,
    "repositories": ["crates.io"]
  },
  "rust:gif": {
    "coordinates": "rust:gif",
    "name": "gif",
    "description": "GIF de- and encoder",
    "license": [""],
    "tags": [],
    "downloads": 18058151,
    "repositories": ["crates.io"]
  },
  "rust:actix-utils": {
    "coordinates": "rust:actix-utils",
    "name": "actix-utils",
    "description": "Various utilities used in the Actix ecosystem",
    "license": [""],
    "tags": ["futures", "network", "async", "framework"],
    "downloads": 18002789,
    "repositories": ["crates.io"]
  },
  "rust:infer": {
    "coordinates": "rust:infer",
    "name": "infer",
    "description": "Small crate to infer file type based on magic number signatures",
    "license": [""],
    "tags": ["mime-types", "no_std", "filetype", "magic-number", "mime"],
    "downloads": 17989407,
    "repositories": ["crates.io"]
  },
  "rust:proptest": {
    "coordinates": "rust:proptest",
    "name": "proptest",
    "description": "Hypothesis-like property-based testing and shrinking. ",
    "license": [""],
    "tags": ["fuzz", "property", "testing", "quickcheck", "hypothesis"],
    "downloads": 17969735,
    "repositories": ["crates.io"]
  },
  "rust:parse-zoneinfo": {
    "coordinates": "rust:parse-zoneinfo",
    "name": "parse-zoneinfo",
    "description": "Parse zoneinfo files from the IANA database",
    "license": [""],
    "tags": ["zone", "timezone", "date", "time", "calendar"],
    "downloads": 17915092,
    "repositories": ["crates.io"]
  },
  "rust:curl": {
    "coordinates": "rust:curl",
    "name": "curl",
    "description": "Rust bindings to libcurl for making HTTP requests",
    "license": [""],
    "tags": [],
    "downloads": 17902842,
    "repositories": ["crates.io"]
  },
  "rust:pkcs1": {
    "coordinates": "rust:pkcs1",
    "name": "pkcs1",
    "description": "Pure Rust implementation of Public-Key Cryptography Standards (PKCS) #1: RSA Cryptography Specifications Version 2.2 (RFC 8017) ",
    "license": [""],
    "tags": ["pkcs", "pem", "key", "rsa", "crypto"],
    "downloads": 17870285,
    "repositories": ["crates.io"]
  },
  "rust:rmp": {
    "coordinates": "rust:rmp",
    "name": "rmp",
    "description": "Pure Rust MessagePack serialization implementation",
    "license": [""],
    "tags": ["messagepack", "msgpack"],
    "downloads": 17861481,
    "repositories": ["crates.io"]
  },
  "rust:rust_decimal": {
    "coordinates": "rust:rust_decimal",
    "name": "rust_decimal",
    "description": "Decimal number implementation written in pure Rust suitable for financial and fixed-precision calculations.",
    "license": [""],
    "tags": ["financial", "decimal", "precision", "fixed", "number"],
    "downloads": 17747509,
    "repositories": ["crates.io"]
  },
  "rust:actix-macros": {
    "coordinates": "rust:actix-macros",
    "name": "actix-macros",
    "description": "Macros for Actix system and runtime",
    "license": [""],
    "tags": [],
    "downloads": 17722060,
    "repositories": ["crates.io"]
  },
  "rust:cxx-build": {
    "coordinates": "rust:cxx-build",
    "name": "cxx-build",
    "description": "C++ code generator for integrating `cxx` crate into a Cargo build.",
    "license": [""],
    "tags": ["build-dependencies", "ffi"],
    "downloads": 17673411,
    "repositories": ["crates.io"]
  },
  "rust:der-parser": {
    "coordinates": "rust:der-parser",
    "name": "der-parser",
    "description": "Parser/encoder for ASN.1 BER/DER data",
    "license": [""],
    "tags": ["asn1", "der", "ber", "parser", "nom"],
    "downloads": 17597166,
    "repositories": ["crates.io"]
  },
  "rust:actix-service": {
    "coordinates": "rust:actix-service",
    "name": "actix-service",
    "description": "Service trait and combinators for representing asynchronous request/response operations.",
    "license": [""],
    "tags": ["futures", "network", "service", "framework", "async"],
    "downloads": 17596787,
    "repositories": ["crates.io"]
  },
  "rust:integer-encoding": {
    "coordinates": "rust:integer-encoding",
    "name": "integer-encoding",
    "description": "varint+zigzag and fixedint integer encoding/decoding (https://developers.google.com/protocol-buffers/docs/encoding)",
    "license": [""],
    "tags": ["zigzag", "varint", "serialize", "protobuf", "integer"],
    "downloads": 17557414,
    "repositories": ["crates.io"]
  },
  "rust:actix-server": {
    "coordinates": "rust:actix-server",
    "name": "actix-server",
    "description": "General purpose TCP server built for the Actix ecosystem",
    "license": [""],
    "tags": ["server", "framework", "async", "tcp", "network"],
    "downloads": 17537376,
    "repositories": ["crates.io"]
  },
  "rust:cbindgen": {
    "coordinates": "rust:cbindgen",
    "name": "cbindgen",
    "description": "A tool for generating C bindings to Rust code.",
    "license": [""],
    "tags": ["code-generation", "ffi", "bindings"],
    "downloads": 17420683,
    "repositories": ["crates.io"]
  },
  "rust:fallible-streaming-iterator": {
    "coordinates": "rust:fallible-streaming-iterator",
    "name": "fallible-streaming-iterator",
    "description": "Fallible streaming iteration",
    "license": [""],
    "tags": [],
    "downloads": 17395296,
    "repositories": ["crates.io"]
  },
  "rust:similar": {
    "coordinates": "rust:similar",
    "name": "similar",
    "description": "A diff library for Rust",
    "license": [""],
    "tags": ["patience", "difference", "diff", "changes", "compare"],
    "downloads": 17352060,
    "repositories": ["crates.io"]
  },
  "rust:displaydoc": {
    "coordinates": "rust:displaydoc",
    "name": "displaydoc",
    "description": "A derive macro for implementing the display Trait via a doc comment and string interpolation ",
    "license": [""],
    "tags": ["derive", "display"],
    "downloads": 17325743,
    "repositories": ["crates.io"]
  },
  "rust:take_mut": {
    "coordinates": "rust:take_mut",
    "name": "take_mut",
    "description": "Take a T from a &mut T temporarily",
    "license": [""],
    "tags": [],
    "downloads": 17280220,
    "repositories": ["crates.io"]
  },
  "rust:actix-router": {
    "coordinates": "rust:actix-router",
    "name": "actix-router",
    "description": "Resource path matching and router",
    "license": [""],
    "tags": ["router", "routing", "actix"],
    "downloads": 17273315,
    "repositories": ["crates.io"]
  },
  "rust:scratch": {
    "coordinates": "rust:scratch",
    "name": "scratch",
    "description": "Compile-time temporary directory shared by multiple crates and erased by `cargo clean`",
    "license": [""],
    "tags": [],
    "downloads": 17257106,
    "repositories": ["crates.io"]
  },
  "rust:rand_xoshiro": {
    "coordinates": "rust:rand_xoshiro",
    "name": "rand_xoshiro",
    "description": "Xoshiro, xoroshiro and splitmix64 random number generators",
    "license": [""],
    "tags": ["rng", "random"],
    "downloads": 17216456,
    "repositories": ["crates.io"]
  },
  "rust:backoff": {
    "coordinates": "rust:backoff",
    "name": "backoff",
    "description": "Retry operations with exponential backoff policy. ",
    "license": [""],
    "tags": [],
    "downloads": 17156068,
    "repositories": ["crates.io"]
  },
  "rust:actix-web-codegen": {
    "coordinates": "rust:actix-web-codegen",
    "name": "actix-web-codegen",
    "description": "Routing and runtime macros for Actix Web",
    "license": [""],
    "tags": [],
    "downloads": 17140081,
    "repositories": ["crates.io"]
  },
  "rust:anstyle-wincon": {
    "coordinates": "rust:anstyle-wincon",
    "name": "anstyle-wincon",
    "description": "Styling legacy Windows terminals",
    "license": [""],
    "tags": ["ansi", "terminal", "windows", "color"],
    "downloads": 17030633,
    "repositories": ["crates.io"]
  },
  "rust:enum-iterator": {
    "coordinates": "rust:enum-iterator",
    "name": "enum-iterator",
    "description": "Tools to iterate over all values of a type (e.g. all variants of an enumeration)",
    "license": [""],
    "tags": ["variants", "enumerate", "iterator", "cardinality", "enum"],
    "downloads": 17006024,
    "repositories": ["crates.io"]
  },
  "rust:enum-iterator-derive": {
    "coordinates": "rust:enum-iterator-derive",
    "name": "enum-iterator-derive",
    "description": "Procedural macro to derive Sequence",
    "license": [""],
    "tags": ["variants", "enumerate", "iterator", "cardinality", "enum"],
    "downloads": 17000937,
    "repositories": ["crates.io"]
  },
  "rust:rusty-fork": {
    "coordinates": "rust:rusty-fork",
    "name": "rusty-fork",
    "description": "Cross-platform library for running Rust tests in sub-processes using a fork-like interface. ",
    "license": [""],
    "tags": ["process", "fork", "testing"],
    "downloads": 16910402,
    "repositories": ["crates.io"]
  },
  "rust:tokio-timer": {
    "coordinates": "rust:tokio-timer",
    "name": "tokio-timer",
    "description": "Timer facilities for Tokio ",
    "license": [""],
    "tags": [],
    "downloads": 16796161,
    "repositories": ["crates.io"]
  },
  "rust:directories": {
    "coordinates": "rust:directories",
    "name": "directories",
    "description": "A tiny mid-level library that provides platform-specific standard locations of directories for config, cache and other data on Linux, Windows and macOS by leveraging the mechanisms defined by the XDG base/user directory specifications on Linux, the Known Folder API on Windows, and the Standard Directory guidelines on macOS.",
    "license": [""],
    "tags": ["app_dirs", "xdg", "path", "folder", "basedir"],
    "downloads": 16763355,
    "repositories": ["crates.io"]
  },
  "rust:cpuid-bool": {
    "coordinates": "rust:cpuid-bool",
    "name": "cpuid-bool",
    "description": "DEPRECATED: replaced by the `cpufeatures` crate",
    "license": [""],
    "tags": [],
    "downloads": 16761523,
    "repositories": ["crates.io"]
  },
  "rust:pyo3-ffi": {
    "coordinates": "rust:pyo3-ffi",
    "name": "pyo3-ffi",
    "description": "Python-API bindings for the PyO3 ecosystem",
    "license": [""],
    "tags": ["cpython", "pyo3", "ffi", "python"],
    "downloads": 16744830,
    "repositories": ["crates.io"]
  },
  "rust:async-process": {
    "coordinates": "rust:async-process",
    "name": "async-process",
    "description": "Async interface for working with processes",
    "license": [""],
    "tags": ["command", "subprocess", "spawn", "child", "process"],
    "downloads": 16706185,
    "repositories": ["crates.io"]
  },
  "rust:fancy-regex": {
    "coordinates": "rust:fancy-regex",
    "name": "fancy-regex",
    "description": "An implementation of regexes, supporting a relatively rich set of features, including backreferences and look-around.",
    "license": [""],
    "tags": [],
    "downloads": 16677683,
    "repositories": ["crates.io"]
  },
  "rust:bytestring": {
    "coordinates": "rust:bytestring",
    "name": "bytestring",
    "description": "A UTF-8 encoded read-only string using `Bytes` as storage",
    "license": [""],
    "tags": ["string", "utf8", "web", "actix", "bytes"],
    "downloads": 16665801,
    "repositories": ["crates.io"]
  },
  "rust:quanta": {
    "coordinates": "rust:quanta",
    "name": "quanta",
    "description": "high-speed timing library",
    "license": [""],
    "tags": ["nanosecond", "rdtsc", "timing"],
    "downloads": 16628139,
    "repositories": ["crates.io"]
  },
  "rust:tokio-executor": {
    "coordinates": "rust:tokio-executor",
    "name": "tokio-executor",
    "description": "Future execution primitives ",
    "license": [""],
    "tags": ["tokio", "futures"],
    "downloads": 16553993,
    "repositories": ["crates.io"]
  },
  "rust:gethostname": {
    "coordinates": "rust:gethostname",
    "name": "gethostname",
    "description": "gethostname for all platforms",
    "license": [""],
    "tags": ["gethostname", "dns", "hostname"],
    "downloads": 16537260,
    "repositories": ["crates.io"]
  },
  "rust:quickcheck": {
    "coordinates": "rust:quickcheck",
    "name": "quickcheck",
    "description": "Automatic property based testing with shrinking.",
    "license": [""],
    "tags": ["shrinking", "fuzz", "testing", "property", "quickcheck"],
    "downloads": 16491831,
    "repositories": ["crates.io"]
  },
  "rust:dotenv": {
    "coordinates": "rust:dotenv",
    "name": "dotenv",
    "description": "A `dotenv` implementation for Rust",
    "license": [""],
    "tags": ["env", "config", "environment", "dotenv", "settings"],
    "downloads": 16463727,
    "repositories": ["crates.io"]
  },
  "rust:raw-cpuid": {
    "coordinates": "rust:raw-cpuid",
    "name": "raw-cpuid",
    "description": "A library to parse the x86 CPUID instruction, written in rust with no external dependencies. The implementation closely resembles the Intel CPUID manual description. The library does only depend on libcore.",
    "license": [""],
    "tags": ["os", "libcore", "x86", "amd64", "cpuid"],
    "downloads": 16344404,
    "repositories": ["crates.io"]
  },
  "rust:shell-words": {
    "coordinates": "rust:shell-words",
    "name": "shell-words",
    "description": "Process command line according to parsing rules of UNIX shell",
    "license": [""],
    "tags": ["words", "quote", "shell", "unix", "split"],
    "downloads": 16336581,
    "repositories": ["crates.io"]
  },
  "rust:serde_qs": {
    "coordinates": "rust:serde_qs",
    "name": "serde_qs",
    "description": "Querystrings for Serde",
    "license": [""],
    "tags": ["querystring", "serialization", "serde"],
    "downloads": 16325373,
    "repositories": ["crates.io"]
  },
  "rust:rustc-serialize": {
    "coordinates": "rust:rustc-serialize",
    "name": "rustc-serialize",
    "description": "Generic serialization/deserialization support corresponding to the `derive(RustcEncodable, RustcDecodable)` mode in the compiler. Also includes support for hex, base64, and json encoding and decoding.  This crate is deprecated in favor of serde. ",
    "license": [""],
    "tags": [],
    "downloads": 16322819,
    "repositories": ["crates.io"]
  },
  "rust:base-x": {
    "coordinates": "rust:base-x",
    "name": "base-x",
    "description": "Encode/decode any base",
    "license": [""],
    "tags": ["base-x", "base", "convert"],
    "downloads": 16279568,
    "repositories": ["crates.io"]
  },
  "rust:opentelemetry-semantic-conventions": {
    "coordinates": "rust:opentelemetry-semantic-conventions",
    "name": "opentelemetry-semantic-conventions",
    "description": "Semantic conventions for OpenTelemetry",
    "license": [""],
    "tags": ["tracing", "opentelemetry", "async"],
    "downloads": 16146027,
    "repositories": ["crates.io"]
  },
  "rust:x509-parser": {
    "coordinates": "rust:x509-parser",
    "name": "x509-parser",
    "description": "Parser for the X.509 v3 format (RFC 5280 certificates)",
    "license": [""],
    "tags": ["parser", "x509", "certificate", "nom"],
    "downloads": 16127083,
    "repositories": ["crates.io"]
  },
  "rust:leb128": {
    "coordinates": "rust:leb128",
    "name": "leb128",
    "description": "Read and write DWARF''s \"Little Endian Base 128\" (LEB128) variable length integer encoding.",
    "license": [""],
    "tags": ["length", "variable", "leb128", "dwarf", "encoding"],
    "downloads": 16123046,
    "repositories": ["crates.io"]
  },
  "rust:tiff": {
    "coordinates": "rust:tiff",
    "name": "tiff",
    "description": "TIFF decoding and encoding library in pure Rust",
    "license": [""],
    "tags": [],
    "downloads": 16112286,
    "repositories": ["crates.io"]
  },
  "rust:derive_builder_macro": {
    "coordinates": "rust:derive_builder_macro",
    "name": "derive_builder_macro",
    "description": "Rust macro to automatically implement the builder pattern for arbitrary structs.",
    "license": [""],
    "tags": ["setter", "struct", "macro", "builder", "derive"],
    "downloads": 16112020,
    "repositories": ["crates.io"]
  },
  "rust:xmlparser": {
    "coordinates": "rust:xmlparser",
    "name": "xmlparser",
    "description": "Pull-based, zero-allocation XML parser.",
    "license": [""],
    "tags": ["xml", "tokenizer", "parser"],
    "downloads": 16106940,
    "repositories": ["crates.io"]
  },
  "rust:schemars": {
    "coordinates": "rust:schemars",
    "name": "schemars",
    "description": "Generate JSON Schemas from Rust code",
    "license": [""],
    "tags": ["rust", "json-schema", "serde"],
    "downloads": 16106274,
    "repositories": ["crates.io"]
  },
  "rust:owning_ref": {
    "coordinates": "rust:owning_ref",
    "name": "owning_ref",
    "description": "A library for creating references that carry their owner with them.",
    "license": [""],
    "tags": ["owning", "reference", "sibling", "field"],
    "downloads": 16095379,
    "repositories": ["crates.io"]
  },
  "rust:rand_distr": {
    "coordinates": "rust:rand_distr",
    "name": "rand_distr",
    "description": "Sampling from random number distributions ",
    "license": [""],
    "tags": ["random", "distribution", "probability", "rng"],
    "downloads": 16077223,
    "repositories": ["crates.io"]
  },
  "rust:schemars_derive": {
    "coordinates": "rust:schemars_derive",
    "name": "schemars_derive",
    "description": "Macros for #[derive(JsonSchema)], for use with schemars",
    "license": [""],
    "tags": ["rust", "json-schema", "serde"],
    "downloads": 16069698,
    "repositories": ["crates.io"]
  },
  "rust:blake2b_simd": {
    "coordinates": "rust:blake2b_simd",
    "name": "blake2b_simd",
    "description": "a pure Rust BLAKE2b implementation with dynamic SIMD",
    "license": [""],
    "tags": ["blake2bp", "blake2", "blake2b"],
    "downloads": 16067517,
    "repositories": ["crates.io"]
  },
  "rust:slog": {
    "coordinates": "rust:slog",
    "name": "slog",
    "description": "Structured, extensible, composable logging for Rust",
    "license": [""],
    "tags": ["structured", "log", "logging", "hierarchical"],
    "downloads": 16067307,
    "repositories": ["crates.io"]
  },
  "rust:weezl": {
    "coordinates": "rust:weezl",
    "name": "weezl",
    "description": "Fast LZW compression and decompression.",
    "license": [""],
    "tags": [],
    "downloads": 16066661,
    "repositories": ["crates.io"]
  },
  "rust:bytesize": {
    "coordinates": "rust:bytesize",
    "name": "bytesize",
    "description": "an utility for human-readable bytes representations",
    "license": [""],
    "tags": ["byte-size", "human-readable", "byte", "format", "utility"],
    "downloads": 16013005,
    "repositories": ["crates.io"]
  },
  "rust:rusqlite": {
    "coordinates": "rust:rusqlite",
    "name": "rusqlite",
    "description": "Ergonomic wrapper for SQLite",
    "license": [""],
    "tags": ["database", "ffi", "sqlite"],
    "downloads": 15976577,
    "repositories": ["crates.io"]
  },
  "rust:dunce": {
    "coordinates": "rust:dunce",
    "name": "dunce",
    "description": "Normalize Windows paths to the most compatible format, avoiding UNC where possible",
    "license": [""],
    "tags": ["unc", "realpath", "deunc", "windows", "canonicalize"],
    "downloads": 15925285,
    "repositories": ["crates.io"]
  },
  "rust:uint": {
    "coordinates": "rust:uint",
    "name": "uint",
    "description": "Large fixed-size integer arithmetic",
    "license": [""],
    "tags": [],
    "downloads": 15902827,
    "repositories": ["crates.io"]
  },
  "rust:console_error_panic_hook": {
    "coordinates": "rust:console_error_panic_hook",
    "name": "console_error_panic_hook",
    "description": "A panic hook for `wasm32-unknown-unknown` that logs panics to `console.error`",
    "license": [""],
    "tags": [],
    "downloads": 15901037,
    "repositories": ["crates.io"]
  },
  "rust:fuchsia-cprng": {
    "coordinates": "rust:fuchsia-cprng",
    "name": "fuchsia-cprng",
    "description": "Rust crate for the Fuchsia cryptographically secure pseudorandom number generator",
    "license": [""],
    "tags": [],
    "downloads": 15885532,
    "repositories": ["crates.io"]
  },
  "rust:platforms": {
    "coordinates": "rust:platforms",
    "name": "platforms",
    "description": "Rust platform registry with information about valid Rust platforms (target triple, target_arch, target_os) sourced from the Rust compiler. ",
    "license": [""],
    "tags": ["targets", "architectures", "os", "triples", "cpu"],
    "downloads": 15876336,
    "repositories": ["crates.io"]
  },
  "rust:password-hash": {
    "coordinates": "rust:password-hash",
    "name": "password-hash",
    "description": "Traits which describe the functionality of password hashing algorithms, as well as a `no_std`-friendly implementation of the PHC string format (a well-defined subset of the Modular Crypt Format a.k.a. MCF) ",
    "license": [""],
    "tags": ["crypt", "mcf", "pbkdf", "phc", "password"],
    "downloads": 15846353,
    "repositories": ["crates.io"]
  },
  "rust:chacha20": {
    "coordinates": "rust:chacha20",
    "name": "chacha20",
    "description": "The ChaCha20 stream cipher (RFC 8439) implemented in pure Rust using traits from the RustCrypto `cipher` crate, with optional architecture-specific hardware acceleration (AVX2, SSE2). Additionally provides the ChaCha8, ChaCha12, XChaCha20, XChaCha12 and XChaCha8 stream ciphers, and also optional rand_core-compatible RNGs based on those ciphers. ",
    "license": [""],
    "tags": ["chacha8", "xchacha20", "chacha12", "stream-cipher", "crypto"],
    "downloads": 15844834,
    "repositories": ["crates.io"]
  },
  "rust:atoi": {
    "coordinates": "rust:atoi",
    "name": "atoi",
    "description": "Parse integers directly from `[u8]` slices in safe code",
    "license": [""],
    "tags": ["conversion", "atoi", "integer"],
    "downloads": 15824768,
    "repositories": ["crates.io"]
  },
  "rust:twoway": {
    "coordinates": "rust:twoway",
    "name": "twoway",
    "description": "(Deprecated - use crate memchr instead.) Fast substring search for strings and byte strings. Optional SSE4.2 acceleration (if detected at runtime) using pcmpestri. Memchr is the only mandatory dependency. The two way algorithm is also used by rust''s libstd itself, but here it is exposed both for byte strings, using memchr, and optionally using a SSE4.2 accelerated version.",
    "license": [""],
    "tags": ["substring-search", "pcmpestri", "memmem", "find", "string"],
    "downloads": 15796323,
    "repositories": ["crates.io"]
  },
  "rust:rdrand": {
    "coordinates": "rust:rdrand",
    "name": "rdrand",
    "description": "An implementation of random number generator based on rdrand and rdseed instructions",
    "license": [""],
    "tags": ["rdrand", "rdseed", "rand", "random"],
    "downloads": 15794219,
    "repositories": ["crates.io"]
  },
  "rust:rmp-serde": {
    "coordinates": "rust:rmp-serde",
    "name": "rmp-serde",
    "description": "Serde bindings for RMP",
    "license": [""],
    "tags": ["messagepack", "msgpack", "serialization", "serde"],
    "downloads": 15789494,
    "repositories": ["crates.io"]
  },
  "rust:typed-arena": {
    "coordinates": "rust:typed-arena",
    "name": "typed-arena",
    "description": "The arena, a fast but limited type of allocator",
    "license": [""],
    "tags": ["arena"],
    "downloads": 15760995,
    "repositories": ["crates.io"]
  },
  "rust:mach": {
    "coordinates": "rust:mach",
    "name": "mach",
    "description": "A Rust interface to the user-space API of the Mach 3.0 kernel that underlies OSX.",
    "license": [""],
    "tags": ["kernel", "macos", "darwin"],
    "downloads": 15639758,
    "repositories": ["crates.io"]
  },
  "rust:poly1305": {
    "coordinates": "rust:poly1305",
    "name": "poly1305",
    "description": "The Poly1305 universal hash function and message authentication code",
    "license": [""],
    "tags": ["salsa20", "mac", "chacha20", "universal-hashing", "crypto"],
    "downloads": 15584372,
    "repositories": ["crates.io"]
  },
  "rust:inventory": {
    "coordinates": "rust:inventory",
    "name": "inventory",
    "description": "Typed distributed plugin registration",
    "license": [""],
    "tags": ["linkage"],
    "downloads": 15526047,
    "repositories": ["crates.io"]
  },
  "rust:tokio-reactor": {
    "coordinates": "rust:tokio-reactor",
    "name": "tokio-reactor",
    "description": "Event loop that drives Tokio I/O resources. ",
    "license": [""],
    "tags": [],
    "downloads": 15519053,
    "repositories": ["crates.io"]
  },
  "rust:rusticata-macros": {
    "coordinates": "rust:rusticata-macros",
    "name": "rusticata-macros",
    "description": "Helper macros for Rusticata",
    "license": [""],
    "tags": ["serialize", "nom", "parser"],
    "downloads": 15413541,
    "repositories": ["crates.io"]
  },
  "rust:oid-registry": {
    "coordinates": "rust:oid-registry",
    "name": "oid-registry",
    "description": "Object Identifier (OID) database",
    "license": [""],
    "tags": ["oid", "der", "ber"],
    "downloads": 15390225,
    "repositories": ["crates.io"]
  },
  "rust:x25519-dalek": {
    "coordinates": "rust:x25519-dalek",
    "name": "x25519-dalek",
    "description": "X25519 elliptic curve Diffie-Hellman key exchange in pure-Rust, using curve25519-dalek.",
    "license": [""],
    "tags": [
      "diffie-hellman",
      "key-exchange",
      "cryptography",
      "x25519",
      "curve25519"
    ],
    "downloads": 15309958,
    "repositories": ["crates.io"]
  },
  "rust:assert_matches": {
    "coordinates": "rust:assert_matches",
    "name": "assert_matches",
    "description": "Asserts that a value matches a pattern",
    "license": [""],
    "tags": ["pattern", "assert", "match"],
    "downloads": 15309844,
    "repositories": ["crates.io"]
  },
  "rust:hdrhistogram": {
    "coordinates": "rust:hdrhistogram",
    "name": "hdrhistogram",
    "description": "A port of HdrHistogram to Rust",
    "license": [""],
    "tags": ["statistics", "sampling", "analytics"],
    "downloads": 15263819,
    "repositories": ["crates.io"]
  },
  "rust:os_pipe": {
    "coordinates": "rust:os_pipe",
    "name": "os_pipe",
    "description": "a cross-platform library for opening OS pipes",
    "license": [""],
    "tags": ["dup", "pipe2", "createpipe", "pipe"],
    "downloads": 15195708,
    "repositories": ["crates.io"]
  },
  "rust:warp": {
    "coordinates": "rust:warp",
    "name": "warp",
    "description": "serve the web at warp speeds",
    "license": [""],
    "tags": ["server", "warp", "hyper", "http"],
    "downloads": 15132042,
    "repositories": ["crates.io"]
  },
  "rust:thrift": {
    "coordinates": "rust:thrift",
    "name": "thrift",
    "description": "Rust bindings for the Apache Thrift RPC system",
    "license": [""],
    "tags": ["thrift"],
    "downloads": 15104176,
    "repositories": ["crates.io"]
  },
  "rust:atomic": {
    "coordinates": "rust:atomic",
    "name": "atomic",
    "description": "Generic Atomic<T> wrapper type",
    "license": [""],
    "tags": ["atomic", "no_std"],
    "downloads": 15083473,
    "repositories": ["crates.io"]
  },
  "rust:bigdecimal": {
    "coordinates": "rust:bigdecimal",
    "name": "bigdecimal",
    "description": "Arbitrary precision decimal numbers",
    "license": [""],
    "tags": ["arbitrary-precision", "decimal", "numerics", "bignum"],
    "downloads": 15061134,
    "repositories": ["crates.io"]
  },
  "rust:sqlformat": {
    "coordinates": "rust:sqlformat",
    "name": "sqlformat",
    "description": "Formats whitespace in a SQL string to make it easier to read",
    "license": [""],
    "tags": ["sql"],
    "downloads": 15014426,
    "repositories": ["crates.io"]
  },
  "rust:hex-literal": {
    "coordinates": "rust:hex-literal",
    "name": "hex-literal",
    "description": "Macro for converting hexadecimal string to a byte array at compile time",
    "license": [""],
    "tags": ["hex", "literals"],
    "downloads": 14976964,
    "repositories": ["crates.io"]
  },
  "rust:tokio-threadpool": {
    "coordinates": "rust:tokio-threadpool",
    "name": "tokio-threadpool",
    "description": "A task scheduler backed by a work-stealing thread pool. ",
    "license": [""],
    "tags": ["tokio", "futures"],
    "downloads": 14921341,
    "repositories": ["crates.io"]
  },
  "rust:backtrace-sys": {
    "coordinates": "rust:backtrace-sys",
    "name": "backtrace-sys",
    "description": "Bindings to the libbacktrace gcc library ",
    "license": [""],
    "tags": [],
    "downloads": 14920053,
    "repositories": ["crates.io"]
  },
  "rust:deflate": {
    "coordinates": "rust:deflate",
    "name": "deflate",
    "description": "A DEFLATE, zlib and gzip encoder written in Rust. ",
    "license": [""],
    "tags": ["flate", "gzip", "deflate", "compression", "zlib"],
    "downloads": 14918680,
    "repositories": ["crates.io"]
  },
  "rust:bytes-utils": {
    "coordinates": "rust:bytes-utils",
    "name": "bytes-utils",
    "description": "Additional utilities for working with the bytes crate",
    "license": [""],
    "tags": ["no_std", "zero-copy", "buffers", "bytes"],
    "downloads": 14890485,
    "repositories": ["crates.io"]
  },
  "rust:rkyv_derive": {
    "coordinates": "rust:rkyv_derive",
    "name": "rkyv_derive",
    "description": "Derive macro for rkyv",
    "license": [""],
    "tags": [],
    "downloads": 14837504,
    "repositories": ["crates.io"]
  },
  "rust:rkyv": {
    "coordinates": "rust:rkyv",
    "name": "rkyv",
    "description": "Zero-copy deserialization framework for Rust",
    "license": [""],
    "tags": ["no_std", "rkyv", "zero-copy", "archive", "serialization"],
    "downloads": 14830854,
    "repositories": ["crates.io"]
  },
  "rust:scheduled-thread-pool": {
    "coordinates": "rust:scheduled-thread-pool",
    "name": "scheduled-thread-pool",
    "description": "A scheduled thread pool",
    "license": [""],
    "tags": ["pool", "threadpool"],
    "downloads": 14815411,
    "repositories": ["crates.io"]
  },
  "rust:serde-value": {
    "coordinates": "rust:serde-value",
    "name": "serde-value",
    "description": "Serialization value trees",
    "license": [""],
    "tags": ["serde"],
    "downloads": 14802131,
    "repositories": ["crates.io"]
  },
  "rust:globwalk": {
    "coordinates": "rust:globwalk",
    "name": "globwalk",
    "description": "Glob-matched recursive file system walking.",
    "license": [""],
    "tags": ["walk", "glob", "regex", "iterator", "pattern"],
    "downloads": 14789187,
    "repositories": ["crates.io"]
  },
  "rust:enumflags2": {
    "coordinates": "rust:enumflags2",
    "name": "enumflags2",
    "description": "Enum-based bit flags",
    "license": [""],
    "tags": ["enum", "flag", "bitflag", "bitflags"],
    "downloads": 14777103,
    "repositories": ["crates.io"]
  },
  "rust:paste-impl": {
    "coordinates": "rust:paste-impl",
    "name": "paste-impl",
    "description": "Implementation detail of the `paste` crate",
    "license": [""],
    "tags": [],
    "downloads": 14769640,
    "repositories": ["crates.io"]
  },
  "rust:futures-intrusive": {
    "coordinates": "rust:futures-intrusive",
    "name": "futures-intrusive",
    "description": "Futures based on intrusive data structures - for std and no-std environments. ",
    "license": [""],
    "tags": [],
    "downloads": 14767375,
    "repositories": ["crates.io"]
  },
  "rust:jni": {
    "coordinates": "rust:jni",
    "name": "jni",
    "description": "Rust bindings to the JNI",
    "license": [""],
    "tags": ["jni", "java", "ffi"],
    "downloads": 14733822,
    "repositories": ["crates.io"]
  },
  "rust:enumflags2_derive": {
    "coordinates": "rust:enumflags2_derive",
    "name": "enumflags2_derive",
    "description": "Do not use directly, use the reexport in the `enumflags2` crate. This allows for better compatibility across versions.",
    "license": [""],
    "tags": ["enum", "flag", "bitflag", "bitflags"],
    "downloads": 14729711,
    "repositories": ["crates.io"]
  },
  "rust:retain_mut": {
    "coordinates": "rust:retain_mut",
    "name": "retain_mut",
    "description": "Provide retain_mut method that has the same functionality as retain but gives mutable borrow to the predicate.",
    "license": [""],
    "tags": ["retain", "no_std"],
    "downloads": 14726393,
    "repositories": ["crates.io"]
  },
  "rust:gloo-timers": {
    "coordinates": "rust:gloo-timers",
    "name": "gloo-timers",
    "description": "Convenience crate for working with JavaScript timers",
    "license": [""],
    "tags": [],
    "downloads": 14724546,
    "repositories": ["crates.io"]
  },
  "rust:cpp_demangle": {
    "coordinates": "rust:cpp_demangle",
    "name": "cpp_demangle",
    "description": "A crate for demangling C++ symbols",
    "license": [""],
    "tags": ["itanium", "c-plus-plus", "demangle", "symbolicate"],
    "downloads": 14721853,
    "repositories": ["crates.io"]
  },
  "rust:p256": {
    "coordinates": "rust:p256",
    "name": "p256",
    "description": "Pure Rust implementation of the NIST P-256 (a.k.a. secp256r1, prime256v1) elliptic curve as defined in SP 800-186, with support for ECDH, ECDSA signing/verification, and general purpose curve arithmetic ",
    "license": [""],
    "tags": ["secp256r1", "prime256v1", "nist", "ecc", "crypto"],
    "downloads": 14703754,
    "repositories": ["crates.io"]
  },
  "rust:dialoguer": {
    "coordinates": "rust:dialoguer",
    "name": "dialoguer",
    "description": "A command line prompting library.",
    "license": [""],
    "tags": ["prompt", "menu", "cli"],
    "downloads": 14679527,
    "repositories": ["crates.io"]
  },
  "rust:chrono-tz-build": {
    "coordinates": "rust:chrono-tz-build",
    "name": "chrono-tz-build",
    "description": "internal build script for chrono-tz",
    "license": [""],
    "tags": ["chrono-tz", "script", "iana", "timezone"],
    "downloads": 14676329,
    "repositories": ["crates.io"]
  },
  "rust:secp256k1": {
    "coordinates": "rust:secp256k1",
    "name": "secp256k1",
    "description": "Rust wrapper library for Pieter Wuille''s `libsecp256k1`. Implements ECDSA and BIP 340 signatures for the SECG elliptic curve group secp256k1 and related utilities.",
    "license": [""],
    "tags": ["ecdsa", "bitcoin", "crypto", "secp256k1", "libsecp256k1"],
    "downloads": 14670181,
    "repositories": ["crates.io"]
  },
  "rust:rpassword": {
    "coordinates": "rust:rpassword",
    "name": "rpassword",
    "description": "Read passwords in console applications.",
    "license": [""],
    "tags": ["password", "security", "getpass", "read", "pass"],
    "downloads": 14631394,
    "repositories": ["crates.io"]
  },
  "rust:if_chain": {
    "coordinates": "rust:if_chain",
    "name": "if_chain",
    "description": "Macro for writing nested `if let` expressions.",
    "license": [""],
    "tags": [],
    "downloads": 14587548,
    "repositories": ["crates.io"]
  },
  "rust:secrecy": {
    "coordinates": "rust:secrecy",
    "name": "secrecy",
    "description": "Wrapper types and traits for secret management which help ensure they aren''t accidentally copied, logged, or otherwise exposed (as much as possible), and also ensure secrets are securely wiped from memory when dropped. ",
    "license": [""],
    "tags": ["secure", "clear", "wipe", "secret", "memory"],
    "downloads": 14587363,
    "repositories": ["crates.io"]
  },
  "rust:bytecheck_derive": {
    "coordinates": "rust:bytecheck_derive",
    "name": "bytecheck_derive",
    "description": "Derive macro for bytecheck",
    "license": [""],
    "tags": [],
    "downloads": 14584820,
    "repositories": ["crates.io"]
  },
  "rust:bytecheck": {
    "coordinates": "rust:bytecheck",
    "name": "bytecheck",
    "description": "Derive macro for bytecheck",
    "license": [""],
    "tags": ["zero-copy", "bytecheck", "rkyv", "validation"],
    "downloads": 14583108,
    "repositories": ["crates.io"]
  },
  "rust:tokio-tcp": {
    "coordinates": "rust:tokio-tcp",
    "name": "tokio-tcp",
    "description": "TCP bindings for tokio. ",
    "license": [""],
    "tags": [],
    "downloads": 14581641,
    "repositories": ["crates.io"]
  },
  "rust:libssh2-sys": {
    "coordinates": "rust:libssh2-sys",
    "name": "libssh2-sys",
    "description": "Native bindings to the libssh2 library",
    "license": [""],
    "tags": [],
    "downloads": 14575150,
    "repositories": ["crates.io"]
  },
  "rust:typed-builder": {
    "coordinates": "rust:typed-builder",
    "name": "typed-builder",
    "description": "Compile-time type-checked builder derive",
    "license": [""],
    "tags": ["builder"],
    "downloads": 14500018,
    "repositories": ["crates.io"]
  },
  "rust:raw-window-handle": {
    "coordinates": "rust:raw-window-handle",
    "name": "raw-window-handle",
    "description": "Interoperability library for Rust Windowing applications.",
    "license": [""],
    "tags": ["windowing"],
    "downloads": 14490528,
    "repositories": ["crates.io"]
  },
  "rust:ws2_32-sys": {
    "coordinates": "rust:ws2_32-sys",
    "name": "ws2_32-sys",
    "description": "Contains function definitions for the Windows API library ws2_32. See winapi for types and constants.",
    "license": [""],
    "tags": ["win32", "windows", "ffi"],
    "downloads": 14466858,
    "repositories": ["crates.io"]
  },
  "rust:chunked_transfer": {
    "coordinates": "rust:chunked_transfer",
    "name": "chunked_transfer",
    "description": "Encoder and decoder for HTTP chunked transfer coding (RFC 7230 § 4.1)",
    "license": [""],
    "tags": [],
    "downloads": 14454859,
    "repositories": ["crates.io"]
  },
  "rust:assert-json-diff": {
    "coordinates": "rust:assert-json-diff",
    "name": "assert-json-diff",
    "description": "Easily compare two JSON values and get great output",
    "license": [""],
    "tags": ["serde_json", "testing", "json"],
    "downloads": 14425821,
    "repositories": ["crates.io"]
  },
  "rust:gcc": {
    "coordinates": "rust:gcc",
    "name": "gcc",
    "description": "**Deprecated** crate, renamed to `cc`  A build-time dependency for Cargo build scripts to assist in invoking the native C compiler to compile native C code into a static archive to be linked into Rust code. ",
    "license": [""],
    "tags": ["build-dependencies"],
    "downloads": 14424562,
    "repositories": ["crates.io"]
  },
  "rust:ptr_meta_derive": {
    "coordinates": "rust:ptr_meta_derive",
    "name": "ptr_meta_derive",
    "description": "Macros for ptr_meta",
    "license": [""],
    "tags": [],
    "downloads": 14394876,
    "repositories": ["crates.io"]
  },
  "rust:ptr_meta": {
    "coordinates": "rust:ptr_meta",
    "name": "ptr_meta",
    "description": "A radioactive stabilization of the ptr_meta rfc",
    "license": [""],
    "tags": ["ptr", "meta", "no_std"],
    "downloads": 14390168,
    "repositories": ["crates.io"]
  },
  "rust:zerocopy-derive": {
    "coordinates": "rust:zerocopy-derive",
    "name": "zerocopy-derive",
    "description": "Custom derive for traits from the zerocopy crate",
    "license": [""],
    "tags": [],
    "downloads": 14341048,
    "repositories": ["crates.io"]
  },
  "rust:rend": {
    "coordinates": "rust:rend",
    "name": "rend",
    "description": "Endian-aware primitives for Rust",
    "license": [""],
    "tags": ["endian", "no_std"],
    "downloads": 14307371,
    "repositories": ["crates.io"]
  },
  "rust:cfg-expr": {
    "coordinates": "rust:cfg-expr",
    "name": "cfg-expr",
    "description": "A parser and evaluator for Rust `cfg()` expressions.",
    "license": [""],
    "tags": ["rustc", "cargo", "cfg"],
    "downloads": 14291608,
    "repositories": ["crates.io"]
  },
  "rust:snafu-derive": {
    "coordinates": "rust:snafu-derive",
    "name": "snafu-derive",
    "description": "An ergonomic error handling library",
    "license": [""],
    "tags": [],
    "downloads": 14240456,
    "repositories": ["crates.io"]
  },
  "rust:vte": {
    "coordinates": "rust:vte",
    "name": "vte",
    "description": "Parser for implementing terminal emulators",
    "license": [""],
    "tags": ["vte", "ansi", "terminal", "parser"],
    "downloads": 14232383,
    "repositories": ["crates.io"]
  },
  "rust:snafu": {
    "coordinates": "rust:snafu",
    "name": "snafu",
    "description": "An ergonomic error handling library",
    "license": [""],
    "tags": ["ergonomic", "library", "no_std", "error"],
    "downloads": 14207389,
    "repositories": ["crates.io"]
  },
  "rust:lexical-util": {
    "coordinates": "rust:lexical-util",
    "name": "lexical-util",
    "description": "Shared utilities for lexical creates.",
    "license": [""],
    "tags": ["no_std"],
    "downloads": 14182179,
    "repositories": ["crates.io"]
  },
  "rust:lexical-parse-integer": {
    "coordinates": "rust:lexical-parse-integer",
    "name": "lexical-parse-integer",
    "description": "Efficient parsing of integers from strings.",
    "license": [""],
    "tags": ["parsing", "lexical", "no_std"],
    "downloads": 14160687,
    "repositories": ["crates.io"]
  },
  "rust:lexical-parse-float": {
    "coordinates": "rust:lexical-parse-float",
    "name": "lexical-parse-float",
    "description": "Efficient parsing of floats from strings.",
    "license": [""],
    "tags": ["parsing", "lexical", "no_std"],
    "downloads": 14151565,
    "repositories": ["crates.io"]
  },
  "rust:psm": {
    "coordinates": "rust:psm",
    "name": "psm",
    "description": "Portable Stack Manipulation: stack manipulation and introspection routines",
    "license": [""],
    "tags": ["stack", "no_std"],
    "downloads": 14140420,
    "repositories": ["crates.io"]
  },
  "rust:sqlx": {
    "coordinates": "rust:sqlx",
    "name": "sqlx",
    "description": "🧰 The Rust SQL Toolkit. An async, pure Rust SQL crate featuring compile-time checked queries without a DSL. Supports PostgreSQL, MySQL, and SQLite.",
    "license": [""],
    "tags": [],
    "downloads": 14081366,
    "repositories": ["crates.io"]
  },
  "rust:ena": {
    "coordinates": "rust:ena",
    "name": "ena",
    "description": "Union-find, congruence closure, and other unification code. Based on code from rustc.",
    "license": [""],
    "tags": ["union-find", "unification"],
    "downloads": 14061843,
    "repositories": ["crates.io"]
  },
  "rust:hash32": {
    "coordinates": "rust:hash32",
    "name": "hash32",
    "description": "32-bit hashing algorithms",
    "license": [""],
    "tags": ["32-bit", "murmur3", "fnv", "hash"],
    "downloads": 13978996,
    "repositories": ["crates.io"]
  },
  "rust:parity-scale-codec": {
    "coordinates": "rust:parity-scale-codec",
    "name": "parity-scale-codec",
    "description": "SCALE - Simple Concatenating Aggregated Little Endians",
    "license": [""],
    "tags": [],
    "downloads": 13972990,
    "repositories": ["crates.io"]
  },
  "rust:sqlx-core": {
    "coordinates": "rust:sqlx-core",
    "name": "sqlx-core",
    "description": "Core of SQLx, the rust SQL toolkit. Not intended to be used directly.",
    "license": [""],
    "tags": [],
    "downloads": 13935863,
    "repositories": ["crates.io"]
  },
  "rust:byte-slice-cast": {
    "coordinates": "rust:byte-slice-cast",
    "name": "byte-slice-cast",
    "description": "Safely cast bytes slices from/to slices of built-in fundamental numeric types",
    "license": [""],
    "tags": ["no_std"],
    "downloads": 13906150,
    "repositories": ["crates.io"]
  },
  "rust:tokio-sync": {
    "coordinates": "rust:tokio-sync",
    "name": "tokio-sync",
    "description": "Synchronization utilities. ",
    "license": [""],
    "tags": [],
    "downloads": 13905259,
    "repositories": ["crates.io"]
  },
  "rust:lexical-write-float": {
    "coordinates": "rust:lexical-write-float",
    "name": "lexical-write-float",
    "description": "Efficient formatting of floats to strings.",
    "license": [""],
    "tags": ["lexical", "encoding", "no_std"],
    "downloads": 13872742,
    "repositories": ["crates.io"]
  },
  "rust:lz4-sys": {
    "coordinates": "rust:lz4-sys",
    "name": "lz4-sys",
    "description": "Rust LZ4 sys package.",
    "license": [""],
    "tags": [],
    "downloads": 13868352,
    "repositories": ["crates.io"]
  },
  "rust:sqlx-macros": {
    "coordinates": "rust:sqlx-macros",
    "name": "sqlx-macros",
    "description": "Macros for SQLx, the rust SQL toolkit. Not intended to be used directly.",
    "license": [""],
    "tags": [],
    "downloads": 13846525,
    "repositories": ["crates.io"]
  },
  "rust:yasna": {
    "coordinates": "rust:yasna",
    "name": "yasna",
    "description": "ASN.1 library for Rust",
    "license": [""],
    "tags": ["serialization", "parser"],
    "downloads": 13803811,
    "repositories": ["crates.io"]
  },
  "rust:lexical-write-integer": {
    "coordinates": "rust:lexical-write-integer",
    "name": "lexical-write-integer",
    "description": "Efficient formatting of integers to strings.",
    "license": [""],
    "tags": ["lexical", "encoding", "no_std"],
    "downloads": 13803628,
    "repositories": ["crates.io"]
  },
  "rust:tokio-current-thread": {
    "coordinates": "rust:tokio-current-thread",
    "name": "tokio-current-thread",
    "description": "Single threaded executor which manage many tasks concurrently on the current thread. ",
    "license": [""],
    "tags": ["tokio", "futures"],
    "downloads": 13721515,
    "repositories": ["crates.io"]
  },
  "rust:publicsuffix": {
    "coordinates": "rust:publicsuffix",
    "name": "publicsuffix",
    "description": "Extract root domain and suffix from a domain name",
    "license": [""],
    "tags": ["tld", "psl", "no_std", "tldextract", "domain"],
    "downloads": 13706830,
    "repositories": ["crates.io"]
  },
  "rust:dotenvy": {
    "coordinates": "rust:dotenvy",
    "name": "dotenvy",
    "description": "A well-maintained fork of the dotenv crate",
    "license": [""],
    "tags": ["env", "config", "environment", "dotenv", "settings"],
    "downloads": 13706644,
    "repositories": ["crates.io"]
  },
  "rust:opentelemetry_sdk": {
    "coordinates": "rust:opentelemetry_sdk",
    "name": "opentelemetry_sdk",
    "description": "The SDK for the OpenTelemetry metrics collection and distributed tracing framework",
    "license": [""],
    "tags": [],
    "downloads": 13648119,
    "repositories": ["crates.io"]
  },
  "rust:primitive-types": {
    "coordinates": "rust:primitive-types",
    "name": "primitive-types",
    "description": "Primitive types shared by Ethereum and Substrate",
    "license": [""],
    "tags": [],
    "downloads": 13647729,
    "repositories": ["crates.io"]
  },
  "rust:dlv-list": {
    "coordinates": "rust:dlv-list",
    "name": "dlv-list",
    "description": "Semi-doubly linked list implemented using a vector",
    "license": [""],
    "tags": ["linked", "list", "vector"],
    "downloads": 13586986,
    "repositories": ["crates.io"]
  },
  "rust:simdutf8": {
    "coordinates": "rust:simdutf8",
    "name": "simdutf8",
    "description": "SIMD-accelerated UTF-8 validation.",
    "license": [""],
    "tags": ["utf-8", "string", "simd", "validation", "unicode"],
    "downloads": 13574440,
    "repositories": ["crates.io"]
  },
  "rust:borsh-derive": {
    "coordinates": "rust:borsh-derive",
    "name": "borsh-derive",
    "description": "Binary Object Representation Serializer for Hashing ",
    "license": [""],
    "tags": [],
    "downloads": 13561454,
    "repositories": ["crates.io"]
  },
  "rust:ouroboros": {
    "coordinates": "rust:ouroboros",
    "name": "ouroboros",
    "description": "Easy, safe self-referential struct generation.",
    "license": [""],
    "tags": [],
    "downloads": 13549930,
    "repositories": ["crates.io"]
  },
  "rust:nanorand": {
    "coordinates": "rust:nanorand",
    "name": "nanorand",
    "description": "A tiny, fast, zero-dep library for random number generation.",
    "license": [""],
    "tags": ["random", "entropy", "no-std", "rand"],
    "downloads": 13539470,
    "repositories": ["crates.io"]
  },
  "rust:cloudabi": {
    "coordinates": "rust:cloudabi",
    "name": "cloudabi",
    "description": "Low level interface to CloudABI. Contains all syscalls and related types.",
    "license": [""],
    "tags": ["cloudabi"],
    "downloads": 13528439,
    "repositories": ["crates.io"]
  },
  "rust:aws-smithy-types": {
    "coordinates": "rust:aws-smithy-types",
    "name": "aws-smithy-types",
    "description": "Types for smithy-rs codegen.",
    "license": [""],
    "tags": [],
    "downloads": 13520193,
    "repositories": ["crates.io"]
  },
  "rust:chacha20poly1305": {
    "coordinates": "rust:chacha20poly1305",
    "name": "chacha20poly1305",
    "description": "Pure Rust implementation of the ChaCha20Poly1305 Authenticated Encryption with Additional Data Cipher (RFC 8439) with optional architecture-specific hardware acceleration. Also contains implementations of the XChaCha20Poly1305 extended nonce variant of ChaCha20Poly1305, and the reduced-round ChaCha8Poly1305 and ChaCha12Poly1305 lightweight variants. ",
    "license": [""],
    "tags": ["xchacha20", "poly1305", "xchacha20poly1305", "chacha20", "aead"],
    "downloads": 13427732,
    "repositories": ["crates.io"]
  },
  "rust:aws-smithy-http": {
    "coordinates": "rust:aws-smithy-http",
    "name": "aws-smithy-http",
    "description": "Smithy HTTP logic for smithy-rs.",
    "license": [""],
    "tags": [],
    "downloads": 13420967,
    "repositories": ["crates.io"]
  },
  "rust:borsh": {
    "coordinates": "rust:borsh",
    "name": "borsh",
    "description": "Binary Object Representation Serializer for Hashing ",
    "license": [""],
    "tags": [],
    "downloads": 13419639,
    "repositories": ["crates.io"]
  },
  "rust:ref-cast-impl": {
    "coordinates": "rust:ref-cast-impl",
    "name": "ref-cast-impl",
    "description": "Derive implementation for ref_cast::RefCast.",
    "license": [""],
    "tags": [],
    "downloads": 13398013,
    "repositories": ["crates.io"]
  },
  "rust:ref-cast": {
    "coordinates": "rust:ref-cast",
    "name": "ref-cast",
    "description": "Safely cast &T to &U where the struct U contains a single field of type T.",
    "license": [""],
    "tags": [],
    "downloads": 13394829,
    "repositories": ["crates.io"]
  },
  "rust:ouroboros_macro": {
    "coordinates": "rust:ouroboros_macro",
    "name": "ouroboros_macro",
    "description": "Proc macro for ouroboros crate.",
    "license": [""],
    "tags": [],
    "downloads": 13346245,
    "repositories": ["crates.io"]
  },
  "rust:shell-escape": {
    "coordinates": "rust:shell-escape",
    "name": "shell-escape",
    "description": "Escape characters that may have a special meaning in a shell",
    "license": [""],
    "tags": [],
    "downloads": 13334845,
    "repositories": ["crates.io"]
  },
  "rust:uncased": {
    "coordinates": "rust:uncased",
    "name": "uncased",
    "description": "Case-preserving, ASCII case-insensitive, no_std string types.",
    "license": [""],
    "tags": [
      "case-insensitive",
      "no_std",
      "uncased",
      "case-preserving",
      "ascii"
    ],
    "downloads": 13305904,
    "repositories": ["crates.io"]
  },
  "rust:aes-soft": {
    "coordinates": "rust:aes-soft",
    "name": "aes-soft",
    "description": "DEPRECATED: replaced by the `aes` crate",
    "license": [""],
    "tags": [],
    "downloads": 13280220,
    "repositories": ["crates.io"]
  },
  "rust:fixed-hash": {
    "coordinates": "rust:fixed-hash",
    "name": "fixed-hash",
    "description": "Macros to define custom fixed-size hash types",
    "license": [""],
    "tags": [],
    "downloads": 13279757,
    "repositories": ["crates.io"]
  },
  "rust:jni-sys": {
    "coordinates": "rust:jni-sys",
    "name": "jni-sys",
    "description": "Rust definitions corresponding to jni.h",
    "license": [""],
    "tags": ["java", "jni"],
    "downloads": 13273082,
    "repositories": ["crates.io"]
  },
  "rust:clap_complete": {
    "coordinates": "rust:clap_complete",
    "name": "clap_complete",
    "description": "Generate shell completion scripts for your clap::Command",
    "license": [""],
    "tags": ["completion", "clap", "bash", "cli"],
    "downloads": 13270656,
    "repositories": ["crates.io"]
  },
  "rust:procfs": {
    "coordinates": "rust:procfs",
    "name": "procfs",
    "description": "Interface to the linux procfs pseudo-filesystem",
    "license": [""],
    "tags": ["process", "linux", "proc", "procfs"],
    "downloads": 13192327,
    "repositories": ["crates.io"]
  },
  "rust:aws-smithy-async": {
    "coordinates": "rust:aws-smithy-async",
    "name": "aws-smithy-async",
    "description": "Async runtime agnostic abstractions for smithy-rs.",
    "license": [""],
    "tags": [],
    "downloads": 13159011,
    "repositories": ["crates.io"]
  },
  "rust:secp256k1-sys": {
    "coordinates": "rust:secp256k1-sys",
    "name": "secp256k1-sys",
    "description": "FFI for Pieter Wuille''s `libsecp256k1` library.",
    "license": [""],
    "tags": ["secp256k1", "libsecp256k1", "ffi"],
    "downloads": 13112880,
    "repositories": ["crates.io"]
  },
  "rust:aws-sigv4": {
    "coordinates": "rust:aws-sigv4",
    "name": "aws-sigv4",
    "description": "SigV4 signer for HTTP requests and Event Stream messages.",
    "license": [""],
    "tags": [],
    "downloads": 13081653,
    "repositories": ["crates.io"]
  },
  "rust:ron": {
    "coordinates": "rust:ron",
    "name": "ron",
    "description": "Rusty Object Notation",
    "license": [""],
    "tags": ["parser", "serde", "serialization"],
    "downloads": 13074311,
    "repositories": ["crates.io"]
  },
  "rust:const_format": {
    "coordinates": "rust:const_format",
    "name": "const_format",
    "description": "Compile-time string formatting",
    "license": [""],
    "tags": ["no-std", "concat", "format"],
    "downloads": 13060493,
    "repositories": ["crates.io"]
  },
  "rust:output_vt100": {
    "coordinates": "rust:output_vt100",
    "name": "output_vt100",
    "description": "Utility to activate escape codes in Windows'' CMD and PowerShell",
    "license": [""],
    "tags": ["vt100", "console", "ansi"],
    "downloads": 13040693,
    "repositories": ["crates.io"]
  },
  "rust:fuchsia-zircon": {
    "coordinates": "rust:fuchsia-zircon",
    "name": "fuchsia-zircon",
    "description": "Rust bindings for the Zircon kernel",
    "license": [""],
    "tags": [],
    "downloads": 13024402,
    "repositories": ["crates.io"]
  },
  "rust:const_format_proc_macros": {
    "coordinates": "rust:const_format_proc_macros",
    "name": "const_format_proc_macros",
    "description": "Implementation detail of the `const_format` crate",
    "license": [""],
    "tags": ["no-std", "concat", "format"],
    "downloads": 12998505,
    "repositories": ["crates.io"]
  },
  "rust:aws-types": {
    "coordinates": "rust:aws-types",
    "name": "aws-types",
    "description": "Cross-service types for the AWS SDK.",
    "license": [""],
    "tags": [],
    "downloads": 12990536,
    "repositories": ["crates.io"]
  },
  "rust:fuchsia-zircon-sys": {
    "coordinates": "rust:fuchsia-zircon-sys",
    "name": "fuchsia-zircon-sys",
    "description": "Low-level Rust bindings for the Zircon kernel",
    "license": [""],
    "tags": [],
    "downloads": 12988454,
    "repositories": ["crates.io"]
  },
  "rust:signal-hook-mio": {
    "coordinates": "rust:signal-hook-mio",
    "name": "signal-hook-mio",
    "description": "MIO support for signal-hook",
    "license": [""],
    "tags": ["signal", "mio", "unix"],
    "downloads": 12981997,
    "repositories": ["crates.io"]
  },
  "rust:radix_trie": {
    "coordinates": "rust:radix_trie",
    "name": "radix_trie",
    "description": "Generic radix trie data-structure.",
    "license": [""],
    "tags": ["generic", "prefix", "collection", "trie", "patricia"],
    "downloads": 12947301,
    "repositories": ["crates.io"]
  },
  "rust:nibble_vec": {
    "coordinates": "rust:nibble_vec",
    "name": "nibble_vec",
    "description": "Vector data-structure for half-byte values.",
    "license": [""],
    "tags": ["nibble", "collection", "slice", "data-structure", "vector"],
    "downloads": 12905514,
    "repositories": ["crates.io"]
  },
  "rust:multipart": {
    "coordinates": "rust:multipart",
    "name": "multipart",
    "description": "A backend-agnostic extension for HTTP libraries that provides support for POST multipart/form-data requests on both client and server.",
    "license": [""],
    "tags": ["iron", "form-data", "upload", "hyper", "http"],
    "downloads": 12894123,
    "repositories": ["crates.io"]
  },
  "rust:ordered-multimap": {
    "coordinates": "rust:ordered-multimap",
    "name": "ordered-multimap",
    "description": "Insertion ordered multimap",
    "license": [""],
    "tags": [],
    "downloads": 12882214,
    "repositories": ["crates.io"]
  },
  "rust:memmap": {
    "coordinates": "rust:memmap",
    "name": "memmap",
    "description": "Cross-platform Rust API for memory-mapped file IO",
    "license": [""],
    "tags": ["io", "memory-map", "mmap", "file"],
    "downloads": 12878623,
    "repositories": ["crates.io"]
  },
  "rust:sized-chunks": {
    "coordinates": "rust:sized-chunks",
    "name": "sized-chunks",
    "description": "Efficient sized chunk datatypes",
    "license": [""],
    "tags": ["sparse-array"],
    "downloads": 12867994,
    "repositories": ["crates.io"]
  },
  "rust:rgb": {
    "coordinates": "rust:rgb",
    "name": "rgb",
    "description": "`struct RGB/RGBA/etc.` for sharing pixels between crates + convenience methods for color manipulation. Allows no-copy high-level interoperability. Also adds common convenience methods and implements standard Rust traits to make `RGB`/`RGBA` pixels and slices first-class Rust objects.",
    "license": [""],
    "tags": ["bgra", "rgba", "pixel", "color", "rgb"],
    "downloads": 12835885,
    "repositories": ["crates.io"]
  },
  "rust:aws-smithy-json": {
    "coordinates": "rust:aws-smithy-json",
    "name": "aws-smithy-json",
    "description": "Token streaming JSON parser for smithy-rs.",
    "license": [""],
    "tags": [],
    "downloads": 12825300,
    "repositories": ["crates.io"]
  },
  "rust:endian-type": {
    "coordinates": "rust:endian-type",
    "name": "endian-type",
    "description": "Type safe wrappers for types with a defined byte order",
    "license": [""],
    "tags": ["endian", "byteorder", "no_std"],
    "downloads": 12813365,
    "repositories": ["crates.io"]
  },
  "rust:parity-scale-codec-derive": {
    "coordinates": "rust:parity-scale-codec-derive",
    "name": "parity-scale-codec-derive",
    "description": "Serialization and deserialization derive macro for Parity SCALE Codec",
    "license": [""],
    "tags": [],
    "downloads": 12802487,
    "repositories": ["crates.io"]
  },
  "rust:buf_redux": {
    "coordinates": "rust:buf_redux",
    "name": "buf_redux",
    "description": "Drop-in replacements for buffered I/O in `std::io` with extra features.",
    "license": [""],
    "tags": ["buffered", "buffer", "io"],
    "downloads": 12801208,
    "repositories": ["crates.io"]
  },
  "rust:fs-err": {
    "coordinates": "rust:fs-err",
    "name": "fs-err",
    "description": "A drop-in replacement for std::fs with more helpful error messages.",
    "license": [""],
    "tags": [],
    "downloads": 12745022,
    "repositories": ["crates.io"]
  },
  "rust:rusoto_credential": {
    "coordinates": "rust:rusoto_credential",
    "name": "rusoto_credential",
    "description": "AWS credential tooling",
    "license": [""],
    "tags": [],
    "downloads": 12704604,
    "repositories": ["crates.io"]
  },
  "rust:thread-id": {
    "coordinates": "rust:thread-id",
    "name": "thread-id",
    "description": "Get a unique thread ID",
    "license": [""],
    "tags": ["pthread", "thread", "getcurrentthreadid"],
    "downloads": 12687347,
    "repositories": ["crates.io"]
  },
  "rust:local-channel": {
    "coordinates": "rust:local-channel",
    "name": "local-channel",
    "description": "A non-threadsafe multi-producer, single-consumer, futures-aware, FIFO queue",
    "license": [""],
    "tags": ["local", "channel", "futures"],
    "downloads": 12652240,
    "repositories": ["crates.io"]
  },
  "rust:local-waker": {
    "coordinates": "rust:local-waker",
    "name": "local-waker",
    "description": "A synchronization primitive for thread-local task wakeup",
    "license": [""],
    "tags": ["local", "no-std", "waker", "futures"],
    "downloads": 12650806,
    "repositories": ["crates.io"]
  },
  "rust:rusoto_core": {
    "coordinates": "rust:rusoto_core",
    "name": "rusoto_core",
    "description": "AWS SDK for Rust - Core",
    "license": [""],
    "tags": ["amazon", "aws"],
    "downloads": 12626395,
    "repositories": ["crates.io"]
  },
  "rust:jemalloc-sys": {
    "coordinates": "rust:jemalloc-sys",
    "name": "jemalloc-sys",
    "description": "Rust FFI bindings to jemalloc ",
    "license": [""],
    "tags": ["jemalloc", "allocator"],
    "downloads": 12600726,
    "repositories": ["crates.io"]
  },
  "rust:aws-smithy-xml": {
    "coordinates": "rust:aws-smithy-xml",
    "name": "aws-smithy-xml",
    "description": "XML parsing logic for Smithy protocols.",
    "license": [""],
    "tags": [],
    "downloads": 12590081,
    "repositories": ["crates.io"]
  },
  "rust:aliasable": {
    "coordinates": "rust:aliasable",
    "name": "aliasable",
    "description": "Basic aliasable (non unique pointer) types",
    "license": [""],
    "tags": [],
    "downloads": 12580997,
    "repositories": ["crates.io"]
  },
  "rust:nalgebra": {
    "coordinates": "rust:nalgebra",
    "name": "nalgebra",
    "description": "General-purpose linear algebra library with transformations and statically-sized or dynamically-sized matrices.",
    "license": [""],
    "tags": ["vector", "algebra", "linear", "math", "matrix"],
    "downloads": 12547613,
    "repositories": ["crates.io"]
  },
  "rust:cfg_aliases": {
    "coordinates": "rust:cfg_aliases",
    "name": "cfg_aliases",
    "description": "A tiny utility to help save you a lot of effort with long winded `#[cfg()]` checks.",
    "license": [""],
    "tags": ["cfg", "alias", "compilation", "conditional", "build"],
    "downloads": 12488798,
    "repositories": ["crates.io"]
  },
  "rust:humansize": {
    "coordinates": "rust:humansize",
    "name": "humansize",
    "description": "A configurable crate to easily represent sizes in a human-readable format.",
    "license": [""],
    "tags": ["size", "humanize", "file-size", "formatting"],
    "downloads": 12465896,
    "repositories": ["crates.io"]
  },
  "rust:ghost": {
    "coordinates": "rust:ghost",
    "name": "ghost",
    "description": "Define your own PhantomData",
    "license": [""],
    "tags": [],
    "downloads": 12458965,
    "repositories": ["crates.io"]
  },
  "rust:redis": {
    "coordinates": "rust:redis",
    "name": "redis",
    "description": "Redis driver for Rust.",
    "license": [""],
    "tags": ["redis", "database"],
    "downloads": 12450397,
    "repositories": ["crates.io"]
  },
  "rust:k256": {
    "coordinates": "rust:k256",
    "name": "k256",
    "description": "secp256k1 elliptic curve library written in pure Rust with support for ECDSA signing/verification/public-key recovery, Taproot Schnorr signatures (BIP340), Elliptic Curve Diffie-Hellman (ECDH), and general-purpose secp256k1 elliptic curve group operations which can be used to implement arbitrary protocols ",
    "license": [""],
    "tags": ["ecc", "secp256k1", "ethereum", "bitcoin", "crypto"],
    "downloads": 12423927,
    "repositories": ["crates.io"]
  },
  "rust:block-modes": {
    "coordinates": "rust:block-modes",
    "name": "block-modes",
    "description": "This crate is deprecated. Use crates from https://github.com/RustCrypto/block-modes instead.",
    "license": [""],
    "tags": [],
    "downloads": 12403769,
    "repositories": ["crates.io"]
  },
  "rust:bitmaps": {
    "coordinates": "rust:bitmaps",
    "name": "bitmaps",
    "description": "Fixed size boolean arrays",
    "license": [""],
    "tags": [],
    "downloads": 12377179,
    "repositories": ["crates.io"]
  },
  "rust:aws-sdk-sts": {
    "coordinates": "rust:aws-sdk-sts",
    "name": "aws-sdk-sts",
    "description": "AWS SDK for AWS Security Token Service",
    "license": [""],
    "tags": [],
    "downloads": 12373365,
    "repositories": ["crates.io"]
  },
  "rust:os_info": {
    "coordinates": "rust:os_info",
    "name": "os_info",
    "description": "Detect the operating system type and version.",
    "license": [""],
    "tags": ["os_type", "os_info", "os", "os_version"],
    "downloads": 12363821,
    "repositories": ["crates.io"]
  },
  "rust:cesu8": {
    "coordinates": "rust:cesu8",
    "name": "cesu8",
    "description": "Convert to and from CESU-8 encoding (similar to UTF-8)",
    "license": [""],
    "tags": [],
    "downloads": 12328920,
    "repositories": ["crates.io"]
  },
  "rust:build_const": {
    "coordinates": "rust:build_const",
    "name": "build_const",
    "description": "library for creating importable constants from build.rs or a script",
    "license": [""],
    "tags": ["no_std", "const", "build", "embedded", "static"],
    "downloads": 12320951,
    "repositories": ["crates.io"]
  },
  "rust:multer": {
    "coordinates": "rust:multer",
    "name": "multer",
    "description": "An async parser for `multipart/form-data` content-type in Rust.",
    "license": [""],
    "tags": [
      "formdata",
      "multipart-formdata",
      "multipart",
      "multipart-uploads",
      "async"
    ],
    "downloads": 12299365,
    "repositories": ["crates.io"]
  },
  "rust:aws-smithy-query": {
    "coordinates": "rust:aws-smithy-query",
    "name": "aws-smithy-query",
    "description": "AWSQuery and EC2Query Smithy protocol logic for smithy-rs.",
    "license": [""],
    "tags": [],
    "downloads": 12266749,
    "repositories": ["crates.io"]
  },
  "rust:aws-config": {
    "coordinates": "rust:aws-config",
    "name": "aws-config",
    "description": "AWS SDK config and credential provider implementations.",
    "license": [""],
    "tags": [],
    "downloads": 12233798,
    "repositories": ["crates.io"]
  },
  "rust:cookie_store": {
    "coordinates": "rust:cookie_store",
    "name": "cookie_store",
    "description": "Implementation of Cookie storage and retrieval",
    "license": [""],
    "tags": ["jar", "http", "store", "cookie"],
    "downloads": 12213433,
    "repositories": ["crates.io"]
  },
  "rust:scoped_threadpool": {
    "coordinates": "rust:scoped_threadpool",
    "name": "scoped_threadpool",
    "description": "A library for scoped and cached threadpools.",
    "license": [""],
    "tags": ["cached", "threadpool", "scoped", "pool", "thread"],
    "downloads": 12185644,
    "repositories": ["crates.io"]
  },
  "rust:deadpool": {
    "coordinates": "rust:deadpool",
    "name": "deadpool",
    "description": "Dead simple async pool",
    "license": [""],
    "tags": ["async", "pool", "database"],
    "downloads": 12171948,
    "repositories": ["crates.io"]
  },
  "rust:color-eyre": {
    "coordinates": "rust:color-eyre",
    "name": "color-eyre",
    "description": "An error report handler for panics and eyre::Reports for colorful, consistent, and well formatted error reports for all kinds of errors.",
    "license": [""],
    "tags": [],
    "downloads": 12156732,
    "repositories": ["crates.io"]
  },
  "rust:rustc-hex": {
    "coordinates": "rust:rustc-hex",
    "name": "rustc-hex",
    "description": "rustc-serialize compatible hex conversion traits ",
    "license": [""],
    "tags": ["rustc", "hex", "serialize"],
    "downloads": 12122820,
    "repositories": ["crates.io"]
  },
  "rust:assert_cmd": {
    "coordinates": "rust:assert_cmd",
    "name": "assert_cmd",
    "description": "Test CLI Applications.",
    "license": [""],
    "tags": ["duct", "assert", "cli", "test", "command"],
    "downloads": 12099520,
    "repositories": ["crates.io"]
  },
  "rust:metrics": {
    "coordinates": "rust:metrics",
    "name": "metrics",
    "description": "A lightweight metrics facade.",
    "license": [""],
    "tags": ["facade", "metrics"],
    "downloads": 12062135,
    "repositories": ["crates.io"]
  },
  "rust:smawk": {
    "coordinates": "rust:smawk",
    "name": "smawk",
    "description": "Functions for finding row-minima in a totally monotone matrix.",
    "license": [""],
    "tags": ["dynamic-programming", "smawk", "matrix", "optimization"],
    "downloads": 12027759,
    "repositories": ["crates.io"]
  },
  "rust:strip-ansi-escapes": {
    "coordinates": "rust:strip-ansi-escapes",
    "name": "strip-ansi-escapes",
    "description": "Strip ANSI escape sequences from byte streams.",
    "license": [""],
    "tags": ["ansi", "escape", "terminal"],
    "downloads": 12020834,
    "repositories": ["crates.io"]
  },
  "rust:rusoto_signature": {
    "coordinates": "rust:rusoto_signature",
    "name": "rusoto_signature",
    "description": "AWS SDK for Rust - Request Signing",
    "license": [""],
    "tags": ["amazon", "aws"],
    "downloads": 12013777,
    "repositories": ["crates.io"]
  },
  "rust:wast": {
    "coordinates": "rust:wast",
    "name": "wast",
    "description": "Customizable Rust parsers for the WebAssembly Text formats WAT and WAST ",
    "license": [""],
    "tags": [],
    "downloads": 11973169,
    "repositories": ["crates.io"]
  },
  "rust:asn1-rs": {
    "coordinates": "rust:asn1-rs",
    "name": "asn1-rs",
    "description": "Parser/encoder for ASN.1 BER/DER data",
    "license": [""],
    "tags": ["der", "asn1", "ber", "parser", "nom"],
    "downloads": 11945099,
    "repositories": ["crates.io"]
  },
  "rust:futures-cpupool": {
    "coordinates": "rust:futures-cpupool",
    "name": "futures-cpupool",
    "description": "An implementation of thread pools which hand out futures to the results of the computation on the threads themselves. ",
    "license": [""],
    "tags": [],
    "downloads": 11929947,
    "repositories": ["crates.io"]
  },
  "rust:lz4": {
    "coordinates": "rust:lz4",
    "name": "lz4",
    "description": "Rust LZ4 bindings library.",
    "license": [""],
    "tags": [],
    "downloads": 11915011,
    "repositories": ["crates.io"]
  },
  "rust:html5ever": {
    "coordinates": "rust:html5ever",
    "name": "html5ever",
    "description": "High-performance browser-grade HTML5 parser",
    "license": [""],
    "tags": [],
    "downloads": 11898913,
    "repositories": ["crates.io"]
  },
  "rust:aws-http": {
    "coordinates": "rust:aws-http",
    "name": "aws-http",
    "description": "This crate is no longer used by the AWS SDK and is deprecated.",
    "license": [""],
    "tags": [],
    "downloads": 11847065,
    "repositories": ["crates.io"]
  },
  "rust:asn1-rs-derive": {
    "coordinates": "rust:asn1-rs-derive",
    "name": "asn1-rs-derive",
    "description": "Derive macros for the `asn1-rs` crate",
    "license": [""],
    "tags": [],
    "downloads": 11839255,
    "repositories": ["crates.io"]
  },
  "rust:mio-extras": {
    "coordinates": "rust:mio-extras",
    "name": "mio-extras",
    "description": "Extra components for use with Mio",
    "license": [""],
    "tags": ["non-blocking", "async", "io"],
    "downloads": 11781532,
    "repositories": ["crates.io"]
  },
  "rust:libflate": {
    "coordinates": "rust:libflate",
    "name": "libflate",
    "description": "A Rust implementation of DEFLATE algorithm and related formats (ZLIB, GZIP)",
    "license": [""],
    "tags": ["gzip", "zlib", "deflate"],
    "downloads": 11777872,
    "repositories": ["crates.io"]
  },
  "rust:bytemuck_derive": {
    "coordinates": "rust:bytemuck_derive",
    "name": "bytemuck_derive",
    "description": "derive proc-macros for `bytemuck`",
    "license": [""],
    "tags": ["casting", "transmute", "bytes"],
    "downloads": 11751434,
    "repositories": ["crates.io"]
  },
  "rust:rcgen": {
    "coordinates": "rust:rcgen",
    "name": "rcgen",
    "description": "Rust X.509 certificate generator",
    "license": [""],
    "tags": ["certificate", "mkcert", "ca"],
    "downloads": 11730514,
    "repositories": ["crates.io"]
  },
  "rust:markup5ever": {
    "coordinates": "rust:markup5ever",
    "name": "markup5ever",
    "description": "Common code for xml5ever and html5ever",
    "license": [""],
    "tags": [],
    "downloads": 11724829,
    "repositories": ["crates.io"]
  },
  "rust:lexical": {
    "coordinates": "rust:lexical",
    "name": "lexical",
    "description": "Lexical, to- and from-string conversion routines.",
    "license": [""],
    "tags": ["parsing", "lexical", "encoding", "no_std"],
    "downloads": 11722043,
    "repositories": ["crates.io"]
  },
  "rust:opentelemetry_api": {
    "coordinates": "rust:opentelemetry_api",
    "name": "opentelemetry_api",
    "description": "OpenTelemetry is a metrics collection and distributed tracing framework",
    "license": [""],
    "tags": [],
    "downloads": 11720483,
    "repositories": ["crates.io"]
  },
  "rust:tendril": {
    "coordinates": "rust:tendril",
    "name": "tendril",
    "description": "Compact buffer/string type for zero-copy parsing",
    "license": [""],
    "tags": [],
    "downloads": 11708940,
    "repositories": ["crates.io"]
  },
  "rust:impl-codec": {
    "coordinates": "rust:impl-codec",
    "name": "impl-codec",
    "description": "Parity Codec serialization support for uint and fixed hash.",
    "license": [""],
    "tags": [],
    "downloads": 11678155,
    "repositories": ["crates.io"]
  },
  "rust:tokio-tls": {
    "coordinates": "rust:tokio-tls",
    "name": "tokio-tls",
    "description": "Deprecated in favor of `tokio-naitve-tls`.  An implementation of TLS/SSL streams for Tokio giving an implementation of TLS for nonblocking I/O streams. ",
    "license": [""],
    "tags": [],
    "downloads": 11668666,
    "repositories": ["crates.io"]
  },
  "rust:simd-adler32": {
    "coordinates": "rust:simd-adler32",
    "name": "simd-adler32",
    "description": "A SIMD-accelerated Adler-32 hash algorithm implementation.",
    "license": [""],
    "tags": ["ssse3", "adler", "adler32", "simd", "avx2"],
    "downloads": 11655345,
    "repositories": ["crates.io"]
  },
  "rust:json": {
    "coordinates": "rust:json",
    "name": "json",
    "description": "JSON implementation in Rust",
    "license": [""],
    "tags": [],
    "downloads": 11636715,
    "repositories": ["crates.io"]
  },
  "rust:arbitrary": {
    "coordinates": "rust:arbitrary",
    "name": "arbitrary",
    "description": "The trait for generating structured data from unstructured data",
    "license": [""],
    "tags": ["testing", "arbitrary"],
    "downloads": 11625214,
    "repositories": ["crates.io"]
  },
  "rust:heapless": {
    "coordinates": "rust:heapless",
    "name": "heapless",
    "description": "`static` friendly data structures that don''t require dynamic memory allocation",
    "license": [""],
    "tags": ["static", "no-heap"],
    "downloads": 11624744,
    "repositories": ["crates.io"]
  },
  "rust:unicode-linebreak": {
    "coordinates": "rust:unicode-linebreak",
    "name": "unicode-linebreak",
    "description": "Implementation of the Unicode Line Breaking Algorithm",
    "license": [""],
    "tags": ["layout", "unicode", "text"],
    "downloads": 11606522,
    "repositories": ["crates.io"]
  },
  "rust:protobuf-codegen": {
    "coordinates": "rust:protobuf-codegen",
    "name": "protobuf-codegen",
    "description": "Code generator for rust-protobuf.  Includes a library to invoke programmatically (e. g. from `build.rs`) and `protoc-gen-rust` binary. ",
    "license": [""],
    "tags": [],
    "downloads": 11602301,
    "repositories": ["crates.io"]
  },
  "rust:serde_ignored": {
    "coordinates": "rust:serde_ignored",
    "name": "serde_ignored",
    "description": "Find out about keys that are ignored when deserializing data",
    "license": [""],
    "tags": ["serialization", "serde"],
    "downloads": 11556548,
    "repositories": ["crates.io"]
  },
  "rust:opentelemetry-otlp": {
    "coordinates": "rust:opentelemetry-otlp",
    "name": "opentelemetry-otlp",
    "description": "Exporter for the OpenTelemetry Collector",
    "license": [""],
    "tags": ["tracing", "otlp", "logging", "metrics", "opentelemetry"],
    "downloads": 11549456,
    "repositories": ["crates.io"]
  },
  "rust:num-format": {
    "coordinates": "rust:num-format",
    "name": "num-format",
    "description": "A Rust crate for producing string-representations of numbers, formatted according to international standards",
    "license": [""],
    "tags": [
      "thousands",
      "separator",
      "comma",
      "number",
      "internationalization"
    ],
    "downloads": 11493932,
    "repositories": ["crates.io"]
  },
  "rust:unsigned-varint": {
    "coordinates": "rust:unsigned-varint",
    "name": "unsigned-varint",
    "description": "unsigned varint encoding",
    "license": [""],
    "tags": [],
    "downloads": 11470650,
    "repositories": ["crates.io"]
  },
  "rust:impl-trait-for-tuples": {
    "coordinates": "rust:impl-trait-for-tuples",
    "name": "impl-trait-for-tuples",
    "description": "Attribute macro to implement a trait for tuples ",
    "license": [""],
    "tags": ["trait", "macro", "tuple", "crate", "proc-macro"],
    "downloads": 11464154,
    "repositories": ["crates.io"]
  },
  "rust:deunicode": {
    "coordinates": "rust:deunicode",
    "name": "deunicode",
    "description": "Convert Unicode strings to pure ASCII by intelligently transliterating them. Suppors Emoji and Chinese.",
    "license": [""],
    "tags": ["unidecode", "emoji", "transliteration", "unicode", "ascii"],
    "downloads": 11457360,
    "repositories": ["crates.io"]
  },
  "rust:futf": {
    "coordinates": "rust:futf",
    "name": "futf",
    "description": "Handling fragments of UTF-8",
    "license": [""],
    "tags": [],
    "downloads": 11454489,
    "repositories": ["crates.io"]
  },
  "rust:dissimilar": {
    "coordinates": "rust:dissimilar",
    "name": "dissimilar",
    "description": "Diff library with semantic cleanup, based on Google''s diff-match-patch",
    "license": [""],
    "tags": ["diff"],
    "downloads": 11450926,
    "repositories": ["crates.io"]
  },
  "rust:beef": {
    "coordinates": "rust:beef",
    "name": "beef",
    "description": "More compact Cow",
    "license": [""],
    "tags": ["borrow", "cow", "slice", "str"],
    "downloads": 11438743,
    "repositories": ["crates.io"]
  },
  "rust:pretty_env_logger": {
    "coordinates": "rust:pretty_env_logger",
    "name": "pretty_env_logger",
    "description": "a visually pretty env_logger",
    "license": [""],
    "tags": ["logging", "logger", "log"],
    "downloads": 11431603,
    "repositories": ["crates.io"]
  },
  "rust:ndarray": {
    "coordinates": "rust:ndarray",
    "name": "ndarray",
    "description": "An n-dimensional array for general elements and for numerics. Lightweight array views and slicing; views support chunking and splitting.",
    "license": [""],
    "tags": ["data-structure", "multidimensional", "blas", "array", "matrix"],
    "downloads": 11415934,
    "repositories": ["crates.io"]
  },
  "rust:aws-sdk-sso": {
    "coordinates": "rust:aws-sdk-sso",
    "name": "aws-sdk-sso",
    "description": "AWS SDK for AWS Single Sign-On",
    "license": [""],
    "tags": [],
    "downloads": 11411864,
    "repositories": ["crates.io"]
  },
  "rust:cranelift-entity": {
    "coordinates": "rust:cranelift-entity",
    "name": "cranelift-entity",
    "description": "Data structures using entity references as mapping keys",
    "license": [""],
    "tags": ["set", "entity", "map"],
    "downloads": 11355717,
    "repositories": ["crates.io"]
  },
  "rust:sentry-types": {
    "coordinates": "rust:sentry-types",
    "name": "sentry-types",
    "description": "Common reusable types for implementing the sentry.io protocol. ",
    "license": [""],
    "tags": ["sentry", "protocol"],
    "downloads": 11349835,
    "repositories": ["crates.io"]
  },
  "rust:lalrpop-util": {
    "coordinates": "rust:lalrpop-util",
    "name": "lalrpop-util",
    "description": "Runtime library for parsers generated by LALRPOP",
    "license": [""],
    "tags": [],
    "downloads": 11317012,
    "repositories": ["crates.io"]
  },
  "rust:serde_test": {
    "coordinates": "rust:serde_test",
    "name": "serde_test",
    "description": "Token De/Serializer for testing De/Serialize implementations",
    "license": [""],
    "tags": ["dev-dependencies", "testing", "serialization", "serde"],
    "downloads": 11310171,
    "repositories": ["crates.io"]
  },
  "rust:mac": {
    "coordinates": "rust:mac",
    "name": "mac",
    "description": "A collection of great and ubiqutitous macros.",
    "license": [""],
    "tags": [],
    "downloads": 11292182,
    "repositories": ["crates.io"]
  },
  "rust:r2d2": {
    "coordinates": "rust:r2d2",
    "name": "r2d2",
    "description": "A generic connection pool",
    "license": [""],
    "tags": ["database", "pool"],
    "downloads": 11250868,
    "repositories": ["crates.io"]
  },
  "rust:jemallocator": {
    "coordinates": "rust:jemallocator",
    "name": "jemallocator",
    "description": "A Rust allocator backed by jemalloc ",
    "license": [""],
    "tags": ["jemalloc", "allocator"],
    "downloads": 11229958,
    "repositories": ["crates.io"]
  },
  "rust:async-mutex": {
    "coordinates": "rust:async-mutex",
    "name": "async-mutex",
    "description": "Async mutex",
    "license": [""],
    "tags": ["synchronization", "lock", "mutex", "asynchronous"],
    "downloads": 11205640,
    "repositories": ["crates.io"]
  },
  "rust:opentelemetry-http": {
    "coordinates": "rust:opentelemetry-http",
    "name": "opentelemetry-http",
    "description": "Helper implementations for sending HTTP requests. Uses include propagating and extracting context over http, exporting telemetry, requesting sampling strategies.",
    "license": [""],
    "tags": ["propagation", "tracing", "context", "opentelemetry"],
    "downloads": 11121298,
    "repositories": ["crates.io"]
  },
  "rust:ipnetwork": {
    "coordinates": "rust:ipnetwork",
    "name": "ipnetwork",
    "description": "A library to work with IP CIDRs in Rust",
    "license": [""],
    "tags": ["cidr", "ip", "address", "network"],
    "downloads": 11093620,
    "repositories": ["crates.io"]
  },
  "rust:tracing-error": {
    "coordinates": "rust:tracing-error",
    "name": "tracing-error",
    "description": "Utilities for enriching errors with `tracing`. ",
    "license": [""],
    "tags": ["exception-reporting", "error-handling", "backtrace", "tracing"],
    "downloads": 11065446,
    "repositories": ["crates.io"]
  },
  "rust:cranelift-frontend": {
    "coordinates": "rust:cranelift-frontend",
    "name": "cranelift-frontend",
    "description": "Cranelift IR builder helper",
    "license": [""],
    "tags": [],
    "downloads": 11030647,
    "repositories": ["crates.io"]
  },
  "rust:more-asserts": {
    "coordinates": "rust:more-asserts",
    "name": "more-asserts",
    "description": "Small library providing additional assert_* and debug_assert_* macros.",
    "license": [""],
    "tags": ["debug_assert", "testing", "assertions", "debug", "assert"],
    "downloads": 11001261,
    "repositories": ["crates.io"]
  },
  "rust:sentry": {
    "coordinates": "rust:sentry",
    "name": "sentry",
    "description": "Sentry (getsentry.com) client for rust ;) ",
    "license": [""],
    "tags": [],
    "downloads": 10973019,
    "repositories": ["crates.io"]
  },
  "rust:ipconfig": {
    "coordinates": "rust:ipconfig",
    "name": "ipconfig",
    "description": "Get network adapters information and network configuration for windows.",
    "license": [""],
    "tags": ["network", "ipconfig", "adapter", "windows", "interface"],
    "downloads": 10958844,
    "repositories": ["crates.io"]
  },
  "rust:vergen": {
    "coordinates": "rust:vergen",
    "name": "vergen",
    "description": "Generate ''cargo:rustc-env'' instructions via ''build.rs'' for use in your code via the ''env!'' macro",
    "license": [""],
    "tags": ["cargo", "instructions", "build", "tool"],
    "downloads": 10916477,
    "repositories": ["crates.io"]
  },
  "rust:slog-term": {
    "coordinates": "rust:slog-term",
    "name": "slog-term",
    "description": "Unix terminal drain and formatter for slog-rs",
    "license": [""],
    "tags": ["term", "log", "logging", "slog"],
    "downloads": 10910712,
    "repositories": ["crates.io"]
  },
  "rust:tokio-openssl": {
    "coordinates": "rust:tokio-openssl",
    "name": "tokio-openssl",
    "description": "An implementation of SSL streams for Tokio backed by OpenSSL ",
    "license": [""],
    "tags": [],
    "downloads": 10909958,
    "repositories": ["crates.io"]
  },
  "rust:indoc-impl": {
    "coordinates": "rust:indoc-impl",
    "name": "indoc-impl",
    "description": "Indented document literals",
    "license": [""],
    "tags": ["string", "literal", "heredoc", "multiline", "nowdoc"],
    "downloads": 10908088,
    "repositories": ["crates.io"]
  },
  "rust:triomphe": {
    "coordinates": "rust:triomphe",
    "name": "triomphe",
    "description": "A fork of std::sync::Arc with some extra functionality and without weak references (originally servo_arc)",
    "license": [""],
    "tags": ["sync", "data-structure", "ffi", "arc"],
    "downloads": 10892745,
    "repositories": ["crates.io"]
  },
  "rust:tokio-codec": {
    "coordinates": "rust:tokio-codec",
    "name": "tokio-codec",
    "description": "Utilities for encoding and decoding frames. ",
    "license": [""],
    "tags": [],
    "downloads": 10855020,
    "repositories": ["crates.io"]
  },
  "rust:cranelift-codegen-meta": {
    "coordinates": "rust:cranelift-codegen-meta",
    "name": "cranelift-codegen-meta",
    "description": "Metaprogram for cranelift-codegen code generator library",
    "license": [""],
    "tags": [],
    "downloads": 10800833,
    "repositories": ["crates.io"]
  },
  "rust:cranelift-codegen": {
    "coordinates": "rust:cranelift-codegen",
    "name": "cranelift-codegen",
    "description": "Low-level code generator library",
    "license": [""],
    "tags": ["compile", "compiler", "jit"],
    "downloads": 10795623,
    "repositories": ["crates.io"]
  },
  "rust:cranelift-bforest": {
    "coordinates": "rust:cranelift-bforest",
    "name": "cranelift-bforest",
    "description": "A forest of B+-trees",
    "license": [""],
    "tags": ["forest", "set", "btree", "map"],
    "downloads": 10785359,
    "repositories": ["crates.io"]
  },
  "rust:ucd-util": {
    "coordinates": "rust:ucd-util",
    "name": "ucd-util",
    "description": "A small utility library for working with the Unicode character database. ",
    "license": [""],
    "tags": ["character", "unicode", "property", "database"],
    "downloads": 10784729,
    "repositories": ["crates.io"]
  },
  "rust:string": {
    "coordinates": "rust:string",
    "name": "string",
    "description": "A UTF-8 encoded string with configurable byte storage.",
    "license": [""],
    "tags": ["string"],
    "downloads": 10772145,
    "repositories": ["crates.io"]
  },
  "rust:docopt": {
    "coordinates": "rust:docopt",
    "name": "docopt",
    "description": "Command line argument parsing.",
    "license": [""],
    "tags": ["argv", "docopt", "argument", "command"],
    "downloads": 10752121,
    "repositories": ["crates.io"]
  },
  "rust:tracing-appender": {
    "coordinates": "rust:tracing-appender",
    "name": "tracing-appender",
    "description": "Provides utilities for file appenders and making non-blocking writers. ",
    "license": [""],
    "tags": ["file-appender", "non-blocking-writer", "tracing", "logging"],
    "downloads": 10750686,
    "repositories": ["crates.io"]
  },
  "rust:aws-smithy-http-tower": {
    "coordinates": "rust:aws-smithy-http-tower",
    "name": "aws-smithy-http-tower",
    "description": "This crate is no longer used by smithy-rs and is deprecated.",
    "license": [""],
    "tags": [],
    "downloads": 10747753,
    "repositories": ["crates.io"]
  },
  "rust:aws-smithy-client": {
    "coordinates": "rust:aws-smithy-client",
    "name": "aws-smithy-client",
    "description": "This crate is no longer used by smithy-rs and is deprecated.",
    "license": [""],
    "tags": [],
    "downloads": 10734814,
    "repositories": ["crates.io"]
  },
  "rust:bit_field": {
    "coordinates": "rust:bit_field",
    "name": "bit_field",
    "description": "Simple bit field trait providing get_bit, get_bits, set_bit, and set_bits methods for Rust''s integral types.",
    "license": [""],
    "tags": ["no_std"],
    "downloads": 10731622,
    "repositories": ["crates.io"]
  },
  "rust:cranelift-codegen-shared": {
    "coordinates": "rust:cranelift-codegen-shared",
    "name": "cranelift-codegen-shared",
    "description": "For code shared between cranelift-codegen-meta and cranelift-codegen",
    "license": [""],
    "tags": [],
    "downloads": 10726505,
    "repositories": ["crates.io"]
  },
  "rust:version-compare": {
    "coordinates": "rust:version-compare",
    "name": "version-compare",
    "description": "Rust library to easily compare version numbers with no specific format, and test against various comparison operators.",
    "license": [""],
    "tags": ["comparing", "version", "compare", "comparison"],
    "downloads": 10716004,
    "repositories": ["crates.io"]
  },
  "rust:impl-serde": {
    "coordinates": "rust:impl-serde",
    "name": "impl-serde",
    "description": "Serde serialization support for uint and fixed hash.",
    "license": [""],
    "tags": [],
    "downloads": 10715660,
    "repositories": ["crates.io"]
  },
  "rust:termios": {
    "coordinates": "rust:termios",
    "name": "termios",
    "description": "Safe bindings for the termios library.",
    "license": [""],
    "tags": ["termios", "tty", "posix", "terminal"],
    "downloads": 10695075,
    "repositories": ["crates.io"]
  },
  "rust:postgres-protocol": {
    "coordinates": "rust:postgres-protocol",
    "name": "postgres-protocol",
    "description": "Low level Postgres protocol APIs",
    "license": [""],
    "tags": [],
    "downloads": 10662857,
    "repositories": ["crates.io"]
  },
  "rust:pico-args": {
    "coordinates": "rust:pico-args",
    "name": "pico-args",
    "description": "An ultra simple CLI arguments parser.",
    "license": [""],
    "tags": ["cli", "args"],
    "downloads": 10645068,
    "repositories": ["crates.io"]
  },
  "rust:enum_dispatch": {
    "coordinates": "rust:enum_dispatch",
    "name": "enum_dispatch",
    "description": "Near drop-in replacement for dynamic-dispatched method calls with up to 10x the speed",
    "license": [""],
    "tags": ["traits", "speed", "dynamic", "optimization", "performance"],
    "downloads": 10598131,
    "repositories": ["crates.io"]
  },
  "rust:http-types": {
    "coordinates": "rust:http-types",
    "name": "http-types",
    "description": "Common types for HTTP operations.",
    "license": [""],
    "tags": ["response", "h2", "types", "request", "http"],
    "downloads": 10537775,
    "repositories": ["crates.io"]
  },
  "rust:bech32": {
    "coordinates": "rust:bech32",
    "name": "bech32",
    "description": "Encodes and decodes the Bech32 format and implements the bech32 and bech32m checksums",
    "license": [""],
    "tags": ["bech32", "base32", "bitcoin", "encoding", "cryptocurrency"],
    "downloads": 10533545,
    "repositories": ["crates.io"]
  },
  "rust:trybuild": {
    "coordinates": "rust:trybuild",
    "name": "trybuild",
    "description": "Test harness for ui tests of compiler diagnostics",
    "license": [""],
    "tags": ["macros", "dev-dependencies", "testing"],
    "downloads": 10530391,
    "repositories": ["crates.io"]
  },
  "rust:rocksdb": {
    "coordinates": "rust:rocksdb",
    "name": "rocksdb",
    "description": "Rust wrapper for Facebook''s RocksDB embeddable database",
    "license": [""],
    "tags": ["lsm-tree", "persistence", "embedded", "database"],
    "downloads": 10515084,
    "repositories": ["crates.io"]
  },
  "rust:cty": {
    "coordinates": "rust:cty",
    "name": "cty",
    "description": "Type aliases to C types like c_int for use with bindgen",
    "license": [""],
    "tags": ["types", "bindgen", "c", "ffi"],
    "downloads": 10505925,
    "repositories": ["crates.io"]
  },
  "rust:lalrpop": {
    "coordinates": "rust:lalrpop",
    "name": "lalrpop",
    "description": "convenient LR(1) parser generator",
    "license": [""],
    "tags": ["generator", "lr", "yacc", "parser", "grammar"],
    "downloads": 10502561,
    "repositories": ["crates.io"]
  },
  "rust:fdeflate": {
    "coordinates": "rust:fdeflate",
    "name": "fdeflate",
    "description": "Fast specialized deflate implementation",
    "license": [""],
    "tags": [],
    "downloads": 10469610,
    "repositories": ["crates.io"]
  },
  "rust:ttf-parser": {
    "coordinates": "rust:ttf-parser",
    "name": "ttf-parser",
    "description": "A high-level, safe, zero-allocation TrueType font parser.",
    "license": [""],
    "tags": ["ttf", "opentype", "truetype"],
    "downloads": 10463444,
    "repositories": ["crates.io"]
  },
  "rust:tokio-udp": {
    "coordinates": "rust:tokio-udp",
    "name": "tokio-udp",
    "description": "UDP bindings for tokio. ",
    "license": [""],
    "tags": [],
    "downloads": 10458907,
    "repositories": ["crates.io"]
  },
  "rust:unic-common": {
    "coordinates": "rust:unic-common",
    "name": "unic-common",
    "description": "UNIC — Common Utilities",
    "license": [""],
    "tags": ["version", "unicode"],
    "downloads": 10456052,
    "repositories": ["crates.io"]
  },
  "rust:unic-char-property": {
    "coordinates": "rust:unic-char-property",
    "name": "unic-char-property",
    "description": "UNIC — Unicode Character Tools — Character Property taxonomy, contracts and build macros",
    "license": [""],
    "tags": ["character-property", "text", "unicode"],
    "downloads": 10452090,
    "repositories": ["crates.io"]
  },
  "rust:unic-ucd-version": {
    "coordinates": "rust:unic-ucd-version",
    "name": "unic-ucd-version",
    "description": "UNIC — Unicode Character Database — Version",
    "license": [""],
    "tags": ["version", "text", "unicode"],
    "downloads": 10450798,
    "repositories": ["crates.io"]
  },
  "rust:librocksdb-sys": {
    "coordinates": "rust:librocksdb-sys",
    "name": "librocksdb-sys",
    "description": "Native bindings to librocksdb",
    "license": [""],
    "tags": ["rocksdb", "ffi", "bindings"],
    "downloads": 10441614,
    "repositories": ["crates.io"]
  },
  "rust:shared_child": {
    "coordinates": "rust:shared_child",
    "name": "shared_child",
    "description": "a library for using child processes from multiple threads",
    "license": [""],
    "tags": ["child", "command", "process", "subprocess"],
    "downloads": 10436032,
    "repositories": ["crates.io"]
  },
  "rust:rstest": {
    "coordinates": "rust:rstest",
    "name": "rstest",
    "description": "Rust fixture based test framework. It use procedural macro to implement fixtures and table based tests. ",
    "license": [""],
    "tags": ["fixture", "test"],
    "downloads": 10432594,
    "repositories": ["crates.io"]
  },
  "rust:tokio-uds": {
    "coordinates": "rust:tokio-uds",
    "name": "tokio-uds",
    "description": "Unix Domain sockets for Tokio ",
    "license": [""],
    "tags": [],
    "downloads": 10430033,
    "repositories": ["crates.io"]
  },
  "rust:slog-async": {
    "coordinates": "rust:slog-async",
    "name": "slog-async",
    "description": "Asynchronous drain for slog-rs",
    "license": [""],
    "tags": ["log", "slog", "logging", "asynchronous"],
    "downloads": 10418576,
    "repositories": ["crates.io"]
  },
  "rust:borsh-derive-internal": {
    "coordinates": "rust:borsh-derive-internal",
    "name": "borsh-derive-internal",
    "description": "Binary Object Representation Serializer for Hashing ",
    "license": [""],
    "tags": [],
    "downloads": 10414805,
    "repositories": ["crates.io"]
  },
  "rust:sentry-core": {
    "coordinates": "rust:sentry-core",
    "name": "sentry-core",
    "description": "Core sentry library used for instrumentation and integration development. ",
    "license": [""],
    "tags": [],
    "downloads": 10411307,
    "repositories": ["crates.io"]
  },
  "rust:unic-char-range": {
    "coordinates": "rust:unic-char-range",
    "name": "unic-char-range",
    "description": "UNIC — Unicode Character Tools — Character Range and Iteration",
    "license": [""],
    "tags": ["iteration", "text", "utilities", "unicode"],
    "downloads": 10406808,
    "repositories": ["crates.io"]
  },
  "rust:borsh-schema-derive-internal": {
    "coordinates": "rust:borsh-schema-derive-internal",
    "name": "borsh-schema-derive-internal",
    "description": "Schema Generator for Borsh ",
    "license": [""],
    "tags": [],
    "downloads": 10393036,
    "repositories": ["crates.io"]
  },
  "rust:uname": {
    "coordinates": "rust:uname",
    "name": "uname",
    "description": "Name and information about current kernel",
    "license": [""],
    "tags": ["uname", "hostname"],
    "downloads": 10364838,
    "repositories": ["crates.io"]
  },
  "rust:smol_str": {
    "coordinates": "rust:smol_str",
    "name": "smol_str",
    "description": "small-string optimized string type with O(1) clone",
    "license": [""],
    "tags": [],
    "downloads": 10364087,
    "repositories": ["crates.io"]
  },
  "rust:synom": {
    "coordinates": "rust:synom",
    "name": "synom",
    "description": "Stripped-down Nom parser used by Syn",
    "license": [""],
    "tags": [],
    "downloads": 10362146,
    "repositories": ["crates.io"]
  },
  "rust:vte_generate_state_changes": {
    "coordinates": "rust:vte_generate_state_changes",
    "name": "vte_generate_state_changes",
    "description": "Proc macro for generating VTE state changes",
    "license": [""],
    "tags": [],
    "downloads": 10324365,
    "repositories": ["crates.io"]
  },
  "rust:tokio-fs": {
    "coordinates": "rust:tokio-fs",
    "name": "tokio-fs",
    "description": "Filesystem API for Tokio. ",
    "license": [""],
    "tags": ["async", "fs", "tokio", "file", "futures"],
    "downloads": 10251884,
    "repositories": ["crates.io"]
  },
  "rust:outref": {
    "coordinates": "rust:outref",
    "name": "outref",
    "description": "Out reference",
    "license": [""],
    "tags": ["write-only", "reference", "slice"],
    "downloads": 10209510,
    "repositories": ["crates.io"]
  },
  "rust:sentry-backtrace": {
    "coordinates": "rust:sentry-backtrace",
    "name": "sentry-backtrace",
    "description": "Sentry integration and utilities for dealing with stacktraces. ",
    "license": [""],
    "tags": [],
    "downloads": 10198017,
    "repositories": ["crates.io"]
  },
  "rust:simba": {
    "coordinates": "rust:simba",
    "name": "simba",
    "description": "SIMD algebra for Rust",
    "license": [""],
    "tags": ["math", "algebra", "simd"],
    "downloads": 10194445,
    "repositories": ["crates.io"]
  },
  "rust:libsecp256k1": {
    "coordinates": "rust:libsecp256k1",
    "name": "libsecp256k1",
    "description": "Pure Rust secp256k1 implementation.",
    "license": [""],
    "tags": ["no_std", "crypto", "bitcoin", "ecdsa", "secp256k1"],
    "downloads": 10176197,
    "repositories": ["crates.io"]
  },
  "rust:base64-simd": {
    "coordinates": "rust:base64-simd",
    "name": "base64-simd",
    "description": "SIMD-accelerated base64 encoding and decoding",
    "license": [""],
    "tags": ["simd", "base64"],
    "downloads": 10170407,
    "repositories": ["crates.io"]
  },
  "rust:stdweb": {
    "coordinates": "rust:stdweb",
    "name": "stdweb",
    "description": "A standard library for the client-side Web",
    "license": [""],
    "tags": ["javascript", "webasm", "asmjs", "web"],
    "downloads": 10162261,
    "repositories": ["crates.io"]
  },
  "rust:serde-wasm-bindgen": {
    "coordinates": "rust:serde-wasm-bindgen",
    "name": "serde-wasm-bindgen",
    "description": "Native Serde adapter for wasm-bindgen",
    "license": [""],
    "tags": ["webassembly", "wasm", "serde", "serialization", "javascript"],
    "downloads": 10148890,
    "repositories": ["crates.io"]
  },
  "rust:multihash": {
    "coordinates": "rust:multihash",
    "name": "multihash",
    "description": "Implementation of the multihash format",
    "license": [""],
    "tags": ["ipfs", "multihash"],
    "downloads": 10147709,
    "repositories": ["crates.io"]
  },
  "rust:option-ext": {
    "coordinates": "rust:option-ext",
    "name": "option-ext",
    "description": "Extends `Option` with additional operations",
    "license": [""],
    "tags": [],
    "downloads": 10095612,
    "repositories": ["crates.io"]
  },
  "rust:shellexpand": {
    "coordinates": "rust:shellexpand",
    "name": "shellexpand",
    "description": "Shell-like expansions in strings",
    "license": [""],
    "tags": ["shell", "strings", "variables"],
    "downloads": 10083392,
    "repositories": ["crates.io"]
  },
  "rust:nohash-hasher": {
    "coordinates": "rust:nohash-hasher",
    "name": "nohash-hasher",
    "description": "An implementation of `std::hash::Hasher` which does not hash at all.",
    "license": [""],
    "tags": ["hasher", "hash", "hashset", "hashmap"],
    "downloads": 10079947,
    "repositories": ["crates.io"]
  },
  "rust:asn1-rs-impl": {
    "coordinates": "rust:asn1-rs-impl",
    "name": "asn1-rs-impl",
    "description": "Implementation details for the `asn1-rs` crate",
    "license": [""],
    "tags": [],
    "downloads": 10024666,
    "repositories": ["crates.io"]
  },
  "rust:postgres-types": {
    "coordinates": "rust:postgres-types",
    "name": "postgres-types",
    "description": "Conversions between Rust and Postgres values",
    "license": [""],
    "tags": ["database", "sql", "postgresql", "postgres"],
    "downloads": 9974390,
    "repositories": ["crates.io"]
  },
  "rust:tikv-jemalloc-sys": {
    "coordinates": "rust:tikv-jemalloc-sys",
    "name": "tikv-jemalloc-sys",
    "description": "Rust FFI bindings to jemalloc ",
    "license": [""],
    "tags": ["jemalloc", "allocator"],
    "downloads": 9973863,
    "repositories": ["crates.io"]
  },
  "rust:sentry-contexts": {
    "coordinates": "rust:sentry-contexts",
    "name": "sentry-contexts",
    "description": "Sentry integration for os, device, and rust contexts. ",
    "license": [""],
    "tags": [],
    "downloads": 9932538,
    "repositories": ["crates.io"]
  },
  "rust:btm": {
    "coordinates": "rust:btm",
    "name": "btm",
    "description": "Blockchain Time Machine",
    "license": [""],
    "tags": ["btrfs", "zfs", "vcs", "snapshot"],
    "downloads": 9921189,
    "repositories": ["crates.io"]
  },
  "rust:windows-core": {
    "coordinates": "rust:windows-core",
    "name": "windows-core",
    "description": "Rust for Windows",
    "license": [""],
    "tags": [],
    "downloads": 9869276,
    "repositories": ["crates.io"]
  },
  "rust:comfy-table": {
    "coordinates": "rust:comfy-table",
    "name": "comfy-table",
    "description": "An easy to use library for building beautiful tables with automatic content wrapping",
    "license": [""],
    "tags": ["terminal", "table", "unicode"],
    "downloads": 9862654,
    "repositories": ["crates.io"]
  },
  "rust:lzma-sys": {
    "coordinates": "rust:lzma-sys",
    "name": "lzma-sys",
    "description": "Raw bindings to liblzma which contains an implementation of LZMA and xz stream encoding/decoding.  High level Rust bindings are available in the `xz2` crate. ",
    "license": [""],
    "tags": [],
    "downloads": 9851372,
    "repositories": ["crates.io"]
  },
  "rust:encoding": {
    "coordinates": "rust:encoding",
    "name": "encoding",
    "description": "Character encoding support for Rust",
    "license": [""],
    "tags": ["encoding", "charset", "unicode"],
    "downloads": 9844418,
    "repositories": ["crates.io"]
  },
  "rust:ascii-canvas": {
    "coordinates": "rust:ascii-canvas",
    "name": "ascii-canvas",
    "description": "simple canvas for drawing lines and styled text and emitting to the terminal",
    "license": [""],
    "tags": [],
    "downloads": 9821611,
    "repositories": ["crates.io"]
  },
  "rust:compiler_builtins": {
    "coordinates": "rust:compiler_builtins",
    "name": "compiler_builtins",
    "description": "Compiler intrinsics used by the Rust compiler. Also available for other targets if necessary! ",
    "license": [""],
    "tags": [],
    "downloads": 9817896,
    "repositories": ["crates.io"]
  },
  "rust:napi": {
    "coordinates": "rust:napi",
    "name": "napi",
    "description": "N-API bindings",
    "license": [""],
    "tags": ["node", "n-api", "napi", "nodejs", "ffi"],
    "downloads": 9816315,
    "repositories": ["crates.io"]
  },
  "rust:cadence": {
    "coordinates": "rust:cadence",
    "name": "cadence",
    "description": "An extensible Statsd client for Rust",
    "license": [""],
    "tags": ["statsd", "metrics"],
    "downloads": 9813897,
    "repositories": ["crates.io"]
  },
  "rust:sentry-panic": {
    "coordinates": "rust:sentry-panic",
    "name": "sentry-panic",
    "description": "Sentry integration for capturing panics. ",
    "license": [""],
    "tags": [],
    "downloads": 9790437,
    "repositories": ["crates.io"]
  },
  "rust:traitobject": {
    "coordinates": "rust:traitobject",
    "name": "traitobject",
    "description": "Unsafe helpers for working with raw trait objects.",
    "license": [""],
    "tags": [],
    "downloads": 9786872,
    "repositories": ["crates.io"]
  },
  "rust:utf8-width": {
    "coordinates": "rust:utf8-width",
    "name": "utf8-width",
    "description": "To determine the width of a UTF-8 character by providing its first byte.",
    "license": [""],
    "tags": ["width", "length", "utf-8", "character"],
    "downloads": 9780042,
    "repositories": ["crates.io"]
  },
  "rust:encoding-index-japanese": {
    "coordinates": "rust:encoding-index-japanese",
    "name": "encoding-index-japanese",
    "description": "Index tables for Japanese character encodings",
    "license": [""],
    "tags": [],
    "downloads": 9768433,
    "repositories": ["crates.io"]
  },
  "rust:encoding-index-korean": {
    "coordinates": "rust:encoding-index-korean",
    "name": "encoding-index-korean",
    "description": "Index tables for Korean character encodings",
    "license": [""],
    "tags": [],
    "downloads": 9767260,
    "repositories": ["crates.io"]
  },
  "rust:encoding-index-simpchinese": {
    "coordinates": "rust:encoding-index-simpchinese",
    "name": "encoding-index-simpchinese",
    "description": "Index tables for simplified Chinese character encodings",
    "license": [""],
    "tags": [],
    "downloads": 9766950,
    "repositories": ["crates.io"]
  },
  "rust:encoding-index-tradchinese": {
    "coordinates": "rust:encoding-index-tradchinese",
    "name": "encoding-index-tradchinese",
    "description": "Index tables for traditional Chinese character encodings",
    "license": [""],
    "tags": [],
    "downloads": 9765437,
    "repositories": ["crates.io"]
  },
  "rust:encoding-index-singlebyte": {
    "coordinates": "rust:encoding-index-singlebyte",
    "name": "encoding-index-singlebyte",
    "description": "Index tables for various single-byte character encodings",
    "license": [""],
    "tags": [],
    "downloads": 9761722,
    "repositories": ["crates.io"]
  },
  "rust:lz4_flex": {
    "coordinates": "rust:lz4_flex",
    "name": "lz4_flex",
    "description": "Fastest LZ4 implementation in Rust, no unsafe by default.",
    "license": [""],
    "tags": ["compression", "lz4", "decompress", "decompression", "compress"],
    "downloads": 9756738,
    "repositories": ["crates.io"]
  },
  "rust:tokio-test": {
    "coordinates": "rust:tokio-test",
    "name": "tokio-test",
    "description": "Testing utilities for Tokio- and futures-based code ",
    "license": [""],
    "tags": [],
    "downloads": 9754000,
    "repositories": ["crates.io"]
  },
  "rust:flatbuffers": {
    "coordinates": "rust:flatbuffers",
    "name": "flatbuffers",
    "description": "Official FlatBuffers Rust runtime library.",
    "license": [""],
    "tags": ["flatbuffers", "zero-copy", "serialization"],
    "downloads": 9746694,
    "repositories": ["crates.io"]
  },
  "rust:smartstring": {
    "coordinates": "rust:smartstring",
    "name": "smartstring",
    "description": "Compact inlined strings",
    "license": [""],
    "tags": [
      "cpu-cache",
      "sso",
      "inline-string",
      "small-string",
      "cache-local"
    ],
    "downloads": 9744976,
    "repositories": ["crates.io"]
  },
  "rust:encoding_index_tests": {
    "coordinates": "rust:encoding_index_tests",
    "name": "encoding_index_tests",
    "description": "Helper macros used to test index tables for character encodings",
    "license": [""],
    "tags": [],
    "downloads": 9730098,
    "repositories": ["crates.io"]
  },
  "rust:diesel_derives": {
    "coordinates": "rust:diesel_derives",
    "name": "diesel_derives",
    "description": "You should not use this crate directly, it is internal to Diesel.",
    "license": [""],
    "tags": [],
    "downloads": 9708445,
    "repositories": ["crates.io"]
  },
  "rust:RustyXML": {
    "coordinates": "rust:RustyXML",
    "name": "RustyXML",
    "description": "A SAX-like streaming XML parser, and a DOM-like interface based on that",
    "license": [""],
    "tags": ["xml", "parser"],
    "downloads": 1697332,
    "repositories": ["crates.io"]
  },
  "rust:ab_glyph": {
    "coordinates": "rust:ab_glyph",
    "name": "ab_glyph",
    "description": "API for loading, scaling, positioning and rasterizing OpenType font glyphs.",
    "license": [""],
    "tags": ["text", "ttf", "truetype", "otf", "opentype"],
    "downloads": 4907615,
    "repositories": ["crates.io"]
  },
  "rust:ab_glyph_rasterizer": {
    "coordinates": "rust:ab_glyph_rasterizer",
    "name": "ab_glyph_rasterizer",
    "description": "Coverage rasterization for lines, quadratic & cubic beziers",
    "license": [""],
    "tags": ["otf", "ttf", "font", "text"],
    "downloads": 6376723,
    "repositories": ["crates.io"]
  },
  "rust:accesskit": {
    "coordinates": "rust:accesskit",
    "name": "accesskit",
    "description": "UI accessibility infrastructure across platforms",
    "license": [""],
    "tags": ["accessibility", "gui", "ui"],
    "downloads": 1882442,
    "repositories": ["crates.io"]
  },
  "rust:accesskit_consumer": {
    "coordinates": "rust:accesskit_consumer",
    "name": "accesskit_consumer",
    "description": "AccessKit consumer library (internal)",
    "license": [""],
    "tags": ["accessibility", "gui", "ui"],
    "downloads": 1149839,
    "repositories": ["crates.io"]
  },
  "rust:accesskit_macos": {
    "coordinates": "rust:accesskit_macos",
    "name": "accesskit_macos",
    "description": "AccessKit UI accessibility infrastructure: macOS adapter",
    "license": [""],
    "tags": ["accessibility", "gui", "ui"],
    "downloads": 653906,
    "repositories": ["crates.io"]
  },
  "rust:accesskit_unix": {
    "coordinates": "rust:accesskit_unix",
    "name": "accesskit_unix",
    "description": "AccessKit UI accessibility infrastructure: Linux adapter",
    "license": [""],
    "tags": ["accessibility", "ui", "gui"],
    "downloads": 709245,
    "repositories": ["crates.io"]
  },
  "rust:accesskit_windows": {
    "coordinates": "rust:accesskit_windows",
    "name": "accesskit_windows",
    "description": "AccessKit UI accessibility infrastructure: Windows adapter",
    "license": [""],
    "tags": ["accessibility", "gui", "ui"],
    "downloads": 705942,
    "repositories": ["crates.io"]
  },
  "rust:accesskit_winit": {
    "coordinates": "rust:accesskit_winit",
    "name": "accesskit_winit",
    "description": "AccessKit UI accessibility infrastructure: winit adapter",
    "license": [""],
    "tags": ["accessibility", "ui", "gui", "winit"],
    "downloads": 1530331,
    "repositories": ["crates.io"]
  },
  "rust:actix-cors": {
    "coordinates": "rust:actix-cors",
    "name": "actix-cors",
    "description": "Cross-Origin Resource Sharing (CORS) controls for Actix Web",
    "license": [""],
    "tags": ["cors", "crossorigin", "security", "web", "actix"],
    "downloads": 5029826,
    "repositories": ["crates.io"]
  },
  "rust:actix-multipart": {
    "coordinates": "rust:actix-multipart",
    "name": "actix-multipart",
    "description": "Multipart form support for Actix Web",
    "license": [""],
    "tags": ["framework", "futures", "web", "async", "http"],
    "downloads": 1934659,
    "repositories": ["crates.io"]
  },
  "rust:actix-multipart-derive": {
    "coordinates": "rust:actix-multipart-derive",
    "name": "actix-multipart-derive",
    "description": "Multipart form derive macro for Actix Web",
    "license": [""],
    "tags": ["framework", "futures", "web", "async", "http"],
    "downloads": 824552,
    "repositories": ["crates.io"]
  },
  "rust:actix-session": {
    "coordinates": "rust:actix-session",
    "name": "actix-session",
    "description": "Session management for Actix Web",
    "license": [""],
    "tags": ["session", "http", "framework", "web", "async"],
    "downloads": 922609,
    "repositories": ["crates.io"]
  },
  "rust:actix-tls": {
    "coordinates": "rust:actix-tls",
    "name": "actix-tls",
    "description": "TLS acceptor and connector services for Actix ecosystem",
    "license": [""],
    "tags": ["ssl", "transport", "tls", "network", "async"],
    "downloads": 8687135,
    "repositories": ["crates.io"]
  },
  "rust:actix-web-httpauth": {
    "coordinates": "rust:actix-web-httpauth",
    "name": "actix-web-httpauth",
    "description": "HTTP authentication schemes for Actix Web",
    "license": [""],
    "tags": ["framework", "authentication", "security", "http", "web"],
    "downloads": 1996558,
    "repositories": ["crates.io"]
  },
  "rust:actix-web-lab": {
    "coordinates": "rust:actix-web-lab",
    "name": "actix-web-lab",
    "description": "In-progress extractors and middleware for Actix Web",
    "license": [""],
    "tags": ["actix", "framework", "web", "http", "async"],
    "downloads": 351133,
    "repositories": ["crates.io"]
  },
  "rust:actix-web-lab-derive": {
    "coordinates": "rust:actix-web-lab-derive",
    "name": "actix-web-lab-derive",
    "description": "Experimental macros for Actix Web",
    "license": [""],
    "tags": ["http", "framework", "web", "actix", "async"],
    "downloads": 302412,
    "repositories": ["crates.io"]
  },
  "rust:actix-web-opentelemetry": {
    "coordinates": "rust:actix-web-opentelemetry",
    "name": "actix-web-opentelemetry",
    "description": "OpenTelemetry integration for Actix Web apps",
    "license": [""],
    "tags": ["actix-web", "opentelemetry", "prometheus", "actix", "jaeger"],
    "downloads": 506597,
    "repositories": ["crates.io"]
  },
  "rust:actix-web-prometheus": {
    "coordinates": "rust:actix-web-prometheus",
    "name": "actix-web-prometheus",
    "description": "Actix web middleware for prometheus metrics",
    "license": [""],
    "tags": [],
    "downloads": 56903,
    "repositories": ["crates.io"]
  },
  "rust:actix-web-rust-embed-responder": {
    "coordinates": "rust:actix-web-rust-embed-responder",
    "name": "actix-web-rust-embed-responder",
    "description": "An actix-web responder for rust-embed that implements cache revalidation and compressed responses.",
    "license": [""],
    "tags": [],
    "downloads": 24774,
    "repositories": ["crates.io"]
  },
  "rust:actix-web-static-files": {
    "coordinates": "rust:actix-web-static-files",
    "name": "actix-web-static-files",
    "description": "actix-web static files as resources support. ",
    "license": [""],
    "tags": ["actix", "web", "static", "http"],
    "downloads": 108879,
    "repositories": ["crates.io"]
  },
  "rust:advapi32-sys": {
    "coordinates": "rust:advapi32-sys",
    "name": "advapi32-sys",
    "description": "Contains function definitions for the Windows API library advapi32. See winapi for types and constants.",
    "license": [""],
    "tags": ["windows", "ffi", "win32"],
    "downloads": 1427650,
    "repositories": ["crates.io"]
  },
  "rust:aes-gcm-siv": {
    "coordinates": "rust:aes-gcm-siv",
    "name": "aes-gcm-siv",
    "description": "Pure Rust implementation of the AES-GCM-SIV Misuse-Resistant Authenticated Encryption Cipher (RFC 8452) with optional architecture-specific hardware acceleration ",
    "license": [""],
    "tags": ["siv", "aes", "encryption", "aead", "aes-gcm"],
    "downloads": 2668890,
    "repositories": ["crates.io"]
  },
  "rust:aesni": {
    "coordinates": "rust:aesni",
    "name": "aesni",
    "description": "DEPRECATED: replaced by the `aes` crate",
    "license": [""],
    "tags": [],
    "downloads": 5137608,
    "repositories": ["crates.io"]
  },
  "rust:afl": {
    "coordinates": "rust:afl",
    "name": "afl",
    "description": "Fuzzing Rust code with american-fuzzy-lop",
    "license": [""],
    "tags": [],
    "downloads": 391968,
    "repositories": ["crates.io"]
  },
  "rust:aligned": {
    "coordinates": "rust:aligned",
    "name": "aligned",
    "description": "A newtype with alignment of at least `A` bytes",
    "license": [""],
    "tags": ["static", "aligned", "array", "alignment"],
    "downloads": 1761266,
    "repositories": ["crates.io"]
  },
  "rust:aligned-vec": {
    "coordinates": "rust:aligned-vec",
    "name": "aligned-vec",
    "description": "Aligned vector and box containers",
    "license": [""],
    "tags": ["alignment", "vec", "box", "slice", "allocation"],
    "downloads": 279680,
    "repositories": ["crates.io"]
  },
  "rust:alloy-chains": {
    "coordinates": "rust:alloy-chains",
    "name": "alloy-chains",
    "description": "Canonical type definitions for EIP-155 chains",
    "license": [""],
    "tags": ["ethereum", "reth", "ethers", "primitives", "revm"],
    "downloads": 102098,
    "repositories": ["crates.io"]
  },
  "rust:alloy-consensus": {
    "coordinates": "rust:alloy-consensus",
    "name": "alloy-consensus",
    "description": "consensus types for alloy",
    "license": [""],
    "tags": [],
    "downloads": 264,
    "repositories": ["crates.io"]
  },
  "rust:alloy-dyn-abi": {
    "coordinates": "rust:alloy-dyn-abi",
    "name": "alloy-dyn-abi",
    "description": "Run-time ABI and EIP-712 implementations",
    "license": [""],
    "tags": ["ethereum", "encoding", "abi", "solidity", "evm"],
    "downloads": 136852,
    "repositories": ["crates.io"]
  },
  "rust:alloy-eips": { "name": "alloy-eips" },
  "rust:alloy-genesis": {
    "coordinates": "rust:alloy-genesis",
    "name": "alloy-genesis",
    "description": "alloy-genesis",
    "license": [""],
    "tags": [],
    "downloads": 242,
    "repositories": ["crates.io"]
  },
  "rust:alloy-json-abi": {
    "coordinates": "rust:alloy-json-abi",
    "name": "alloy-json-abi",
    "description": "Full Ethereum JSON-ABI implementation",
    "license": [""],
    "tags": ["ethereum", "abi", "json", "serde", "serialization"],
    "downloads": 176592,
    "repositories": ["crates.io"]
  },
  "rust:alloy-json-rpc": {
    "coordinates": "rust:alloy-json-rpc",
    "name": "alloy-json-rpc",
    "description": "alloy-json-rpc",
    "license": [""],
    "tags": [],
    "downloads": 282,
    "repositories": ["crates.io"]
  },
  "rust:alloy-network": {
    "coordinates": "rust:alloy-network",
    "name": "alloy-network",
    "description": "network types for alloy",
    "license": [""],
    "tags": [],
    "downloads": 261,
    "repositories": ["crates.io"]
  },
  "rust:alloy-node-bindings": {
    "coordinates": "rust:alloy-node-bindings",
    "name": "alloy-node-bindings",
    "description": "alloy-node-bindings",
    "license": [""],
    "tags": [],
    "downloads": 245,
    "repositories": ["crates.io"]
  },
  "rust:alloy-primitives": {
    "coordinates": "rust:alloy-primitives",
    "name": "alloy-primitives",
    "description": "Ethereum primitive types",
    "license": [""],
    "tags": ["ethereum", "reth", "ethers", "primitives", "revm"],
    "downloads": 795163,
    "repositories": ["crates.io"]
  },
  "rust:alloy-provider": {
    "coordinates": "rust:alloy-provider",
    "name": "alloy-provider",
    "description": "providers for alloy",
    "license": [""],
    "tags": [],
    "downloads": 290,
    "repositories": ["crates.io"]
  },
  "rust:alloy-rlp": {
    "coordinates": "rust:alloy-rlp",
    "name": "alloy-rlp",
    "description": "Implementation of Ethereum RLP serialization",
    "license": [""],
    "tags": ["ethereum", "rlp", "serialization"],
    "downloads": 921781,
    "repositories": ["crates.io"]
  },
  "rust:alloy-rlp-derive": {
    "coordinates": "rust:alloy-rlp-derive",
    "name": "alloy-rlp-derive",
    "description": "Derive macros for alloy-rlp",
    "license": [""],
    "tags": ["ethereum", "macros", "rlp", "serialization"],
    "downloads": 598498,
    "repositories": ["crates.io"]
  },
  "rust:alloy-rpc-client": {
    "coordinates": "rust:alloy-rpc-client",
    "name": "alloy-rpc-client",
    "description": "alloy-rpc-client",
    "license": [""],
    "tags": [],
    "downloads": 292,
    "repositories": ["crates.io"]
  },
  "rust:alloy-rpc-types": {
    "coordinates": "rust:alloy-rpc-types",
    "name": "alloy-rpc-types",
    "description": "alloy-rpc-types",
    "license": [""],
    "tags": [],
    "downloads": 315,
    "repositories": ["crates.io"]
  },
  "rust:alloy-rpc-types-anvil": { "name": "alloy-rpc-types-anvil" },
  "rust:alloy-rpc-types-engine": { "name": "alloy-rpc-types-engine" },
  "rust:alloy-rpc-types-trace": { "name": "alloy-rpc-types-trace" },
  "rust:alloy-serde": { "name": "alloy-serde" },
  "rust:alloy-signer": {
    "coordinates": "rust:alloy-signer",
    "name": "alloy-signer",
    "description": "alloy-signer",
    "license": [""],
    "tags": [],
    "downloads": 296,
    "repositories": ["crates.io"]
  },
  "rust:alloy-signer-wallet": { "name": "alloy-signer-wallet" },
  "rust:alloy-sol-macro": {
    "coordinates": "rust:alloy-sol-macro",
    "name": "alloy-sol-macro",
    "description": "Solidity to Rust procedural macro",
    "license": [""],
    "tags": ["encoding", "ethereum", "abi", "solidity", "evm"],
    "downloads": 621572,
    "repositories": ["crates.io"]
  },
  "rust:alloy-sol-macro-input": {
    "coordinates": "rust:alloy-sol-macro-input",
    "name": "alloy-sol-macro-input",
    "description": "Input types for sol!-like macros",
    "license": [""],
    "tags": ["ethereum", "encoding", "abi", "solidity", "evm"],
    "downloads": 13495,
    "repositories": ["crates.io"]
  },
  "rust:alloy-sol-type-parser": {
    "coordinates": "rust:alloy-sol-type-parser",
    "name": "alloy-sol-type-parser",
    "description": "Simple and light-weight Solidity type strings parser",
    "license": [""],
    "tags": ["ethereum", "abi", "solidity", "evm", "parser"],
    "downloads": 175948,
    "repositories": ["crates.io"]
  },
  "rust:alloy-sol-types": {
    "coordinates": "rust:alloy-sol-types",
    "name": "alloy-sol-types",
    "description": "Compile-time ABI and EIP-712 implementations",
    "license": [""],
    "tags": ["ethereum", "encoding", "abi", "solidity", "evm"],
    "downloads": 621967,
    "repositories": ["crates.io"]
  },
  "rust:alloy-transport": {
    "coordinates": "rust:alloy-transport",
    "name": "alloy-transport",
    "description": "alloy-transport",
    "license": [""],
    "tags": [],
    "downloads": 288,
    "repositories": ["crates.io"]
  },
  "rust:alloy-transport-http": {
    "coordinates": "rust:alloy-transport-http",
    "name": "alloy-transport-http",
    "description": "alloy-transport-http",
    "license": [""],
    "tags": [],
    "downloads": 277,
    "repositories": ["crates.io"]
  },
  "rust:alloy-trie": {
    "coordinates": "rust:alloy-trie",
    "name": "alloy-trie",
    "description": "Fast Merkle-Patricia Trie (MPT) state root calculator and proof generator for prefix-sorted nibbles ",
    "license": [""],
    "tags": ["mpt", "merkle", "nibbles", "ethereum", "trie"],
    "downloads": 54436,
    "repositories": ["crates.io"]
  },
  "rust:alsa": {
    "coordinates": "rust:alsa",
    "name": "alsa",
    "description": "Thin but safe wrappers for ALSA (Linux sound API)",
    "license": [""],
    "tags": ["sound", "audio", "alsa"],
    "downloads": 3164242,
    "repositories": ["crates.io"]
  },
  "rust:alsa-sys": {
    "coordinates": "rust:alsa-sys",
    "name": "alsa-sys",
    "description": "FFI bindings for the ALSA project (Advanced Linux Sound Architecture)",
    "license": [""],
    "tags": ["audio", "sound", "alsa"],
    "downloads": 3070713,
    "repositories": ["crates.io"]
  },
  "rust:ammonia": {
    "coordinates": "rust:ammonia",
    "name": "ammonia",
    "description": "HTML Sanitization",
    "license": [""],
    "tags": ["security", "xss", "sanitization", "html"],
    "downloads": 4136019,
    "repositories": ["crates.io"]
  },
  "rust:analytics": {
    "coordinates": "rust:analytics",
    "name": "analytics",
    "description": "Segment analytics client for Rust https://segment.com/docs/libraries/rust",
    "license": [""],
    "tags": [],
    "downloads": 37494,
    "repositories": ["crates.io"]
  },
  "rust:android-activity": {
    "coordinates": "rust:android-activity",
    "name": "android-activity",
    "description": "Glue for building Rust applications on Android with NativeActivity or GameActivity",
    "license": [""],
    "tags": ["ndk", "android"],
    "downloads": 1176271,
    "repositories": ["crates.io"]
  },
  "rust:android-properties": {
    "coordinates": "rust:android-properties",
    "name": "android-properties",
    "description": "Rust-based Android properties wrapper",
    "license": [""],
    "tags": ["bionic", "properties", "cutils", "android", "persistent"],
    "downloads": 1146408,
    "repositories": ["crates.io"]
  },
  "rust:android_log-sys": {
    "coordinates": "rust:android_log-sys",
    "name": "android_log-sys",
    "description": "FFI bindings to Android log Library. ",
    "license": [""],
    "tags": ["log", "android", "ffi"],
    "downloads": 5567342,
    "repositories": ["crates.io"]
  },
  "rust:android_logger": {
    "coordinates": "rust:android_logger",
    "name": "android_logger",
    "description": "A logging implementation for `log` which hooks to android log output. ",
    "license": [""],
    "tags": ["bindings", "logger", "android", "log"],
    "downloads": 5254163,
    "repositories": ["crates.io"]
  },
  "rust:ansi-str": {
    "coordinates": "rust:ansi-str",
    "name": "ansi-str",
    "description": "A library which provides a set of methods to work with ANSI strings",
    "license": [""],
    "tags": ["ansi", "terminal", "color", "ansi_term", "cli"],
    "downloads": 622807,
    "repositories": ["crates.io"]
  },
  "rust:ansi_colours": {
    "coordinates": "rust:ansi_colours",
    "name": "ansi_colours",
    "description": "true-colour ↔ ANSI terminal palette converter",
    "license": [""],
    "tags": ["terminal", "ansi", "color", "rgb"],
    "downloads": 1593102,
    "repositories": ["crates.io"]
  },
  "rust:ansitok": {
    "coordinates": "rust:ansitok",
    "name": "ansitok",
    "description": "A library for parsing ANSI Escape Codes",
    "license": [""],
    "tags": ["escape", "terminal", "ansi"],
    "downloads": 540350,
    "repositories": ["crates.io"]
  },
  "rust:anymap": {
    "coordinates": "rust:anymap",
    "name": "anymap",
    "description": "A safe and convenient store for one value of each type",
    "license": [""],
    "tags": ["any", "map", "container"],
    "downloads": 4937700,
    "repositories": ["crates.io"]
  },
  "rust:anymap2": {
    "coordinates": "rust:anymap2",
    "name": "anymap2",
    "description": "A safe and convenient store for one value of each type",
    "license": [""],
    "tags": ["data-structure", "container", "map"],
    "downloads": 2160756,
    "repositories": ["crates.io"]
  },
  "rust:apache-avro": {
    "coordinates": "rust:apache-avro",
    "name": "apache-avro",
    "description": "A library for working with Apache Avro in Rust",
    "license": [""],
    "tags": ["serialization", "avro", "data"],
    "downloads": 1478739,
    "repositories": ["crates.io"]
  },
  "rust:api_models": { "name": "api_models" },
  "rust:aquamarine": {
    "coordinates": "rust:aquamarine",
    "name": "aquamarine",
    "description": "A mermaid.js integration for rustdoc",
    "license": [""],
    "tags": ["rustdoc", "docs", "proc_macro", "mermaid", "diagram"],
    "downloads": 2562049,
    "repositories": ["crates.io"]
  },
  "rust:ar": {
    "coordinates": "rust:ar",
    "name": "ar",
    "description": "A library for encoding/decoding Unix archive files.",
    "license": [""],
    "tags": ["ar", "deb", "archive"],
    "downloads": 3039365,
    "repositories": ["crates.io"]
  },
  "rust:arbitrary-json": {
    "coordinates": "rust:arbitrary-json",
    "name": "arbitrary-json",
    "description": "A Json generator based on serde_json and arbitrary",
    "license": [""],
    "tags": ["fuzzer", "arbitrary", "json"],
    "downloads": 3314,
    "repositories": ["crates.io"]
  },
  "rust:arboard": {
    "coordinates": "rust:arboard",
    "name": "arboard",
    "description": "Image and text handling for the OS clipboard.",
    "license": [""],
    "tags": ["image", "clipboard"],
    "downloads": 4218147,
    "repositories": ["crates.io"]
  },
  "rust:arg_enum_proc_macro": {
    "coordinates": "rust:arg_enum_proc_macro",
    "name": "arg_enum_proc_macro",
    "description": "A procedural macro compatible with clap arg_enum",
    "license": [""],
    "tags": ["arg_enum", "proc_macro"],
    "downloads": 974706,
    "repositories": ["crates.io"]
  },
  "rust:argh": {
    "coordinates": "rust:argh",
    "name": "argh",
    "description": "Derive-based argument parser optimized for code size",
    "license": [""],
    "tags": ["args", "arguments", "derive", "cli"],
    "downloads": 3647596,
    "repositories": ["crates.io"]
  },
  "rust:argh_derive": {
    "coordinates": "rust:argh_derive",
    "name": "argh_derive",
    "description": "Derive-based argument parsing optimized for code size",
    "license": [""],
    "tags": [],
    "downloads": 3636104,
    "repositories": ["crates.io"]
  },
  "rust:argh_shared": {
    "coordinates": "rust:argh_shared",
    "name": "argh_shared",
    "description": "Derive-based argument parsing optimized for code size",
    "license": [""],
    "tags": [],
    "downloads": 3638109,
    "repositories": ["crates.io"]
  },
  "rust:argminmax": {
    "coordinates": "rust:argminmax",
    "name": "argminmax",
    "description": "ArgMinMax (argmin & argmax in 1 function) with SIMD for floats and integers",
    "license": [""],
    "tags": ["argminmax", "simd", "ndarray"],
    "downloads": 600944,
    "repositories": ["crates.io"]
  },
  "rust:argon2": {
    "coordinates": "rust:argon2",
    "name": "argon2",
    "description": "Pure Rust implementation of the Argon2 password hashing function with support for the Argon2d, Argon2i, and Argon2id algorithmic variants ",
    "license": [""],
    "tags": ["crypto", "password", "hashing", "phf"],
    "downloads": 3551919,
    "repositories": ["crates.io"]
  },
  "rust:ark-bls12-377": {
    "coordinates": "rust:ark-bls12-377",
    "name": "ark-bls12-377",
    "description": "The BLS12-377 pairing-friendly elliptic curve",
    "license": [""],
    "tags": ["finite-fields", "elliptic-curves", "cryptography"],
    "downloads": 1464334,
    "repositories": ["crates.io"]
  },
  "rust:ark-bls12-377-ext": {
    "coordinates": "rust:ark-bls12-377-ext",
    "name": "ark-bls12-377-ext",
    "description": "Extensions for the BLS12-377 pairing-friendly elliptic curve",
    "license": [""],
    "tags": ["pairing", "elliptic-curves", "cryptography"],
    "downloads": 672685,
    "repositories": ["crates.io"]
  },
  "rust:ark-bls12-381": {
    "coordinates": "rust:ark-bls12-381",
    "name": "ark-bls12-381",
    "description": "The BLS12-381 pairing-friendly elliptic curve",
    "license": [""],
    "tags": ["cryptography", "finite-fields", "elliptic-curves"],
    "downloads": 2284503,
    "repositories": ["crates.io"]
  },
  "rust:ark-bls12-381-ext": {
    "coordinates": "rust:ark-bls12-381-ext",
    "name": "ark-bls12-381-ext",
    "description": "Extensions for the BLS12-381 pairing-friendly elliptic curve",
    "license": [""],
    "tags": ["pairing", "elliptic-curves", "cryptography"],
    "downloads": 673080,
    "repositories": ["crates.io"]
  },
  "rust:ark-bn254": {
    "coordinates": "rust:ark-bn254",
    "name": "ark-bn254",
    "description": "The BN254 pairing-friendly elliptic curve",
    "license": [""],
    "tags": ["cryptography", "finite-fields", "elliptic-curves"],
    "downloads": 1937872,
    "repositories": ["crates.io"]
  },
  "rust:ark-bw6-761": {
    "coordinates": "rust:ark-bw6-761",
    "name": "ark-bw6-761",
    "description": "The BW6-761 pairing-friendly elliptic curve",
    "license": [""],
    "tags": ["elliptic-curves", "finite-fields", "cryptography"],
    "downloads": 995352,
    "repositories": ["crates.io"]
  },
  "rust:ark-bw6-761-ext": {
    "coordinates": "rust:ark-bw6-761-ext",
    "name": "ark-bw6-761-ext",
    "description": "Extensions for the BW6-761 pairing-friendly elliptic curve",
    "license": [""],
    "tags": ["pairing", "elliptic-curves", "cryptography"],
    "downloads": 672712,
    "repositories": ["crates.io"]
  },
  "rust:ark-crypto-primitives": {
    "coordinates": "rust:ark-crypto-primitives",
    "name": "ark-crypto-primitives",
    "description": "A library of useful cryptographic primitives",
    "license": [""],
    "tags": ["snark", "pedersen", "schnorr", "blake2s", "r1cs"],
    "downloads": 1396504,
    "repositories": ["crates.io"]
  },
  "rust:ark-ec": {
    "coordinates": "rust:ark-ec",
    "name": "ark-ec",
    "description": "A library for elliptic curves and pairings",
    "license": [""],
    "tags": ["cryptography", "elliptic-curves", "pairing"],
    "downloads": 4592009,
    "repositories": ["crates.io"]
  },
  "rust:ark-ed-on-bls12-377": {
    "coordinates": "rust:ark-ed-on-bls12-377",
    "name": "ark-ed-on-bls12-377",
    "description": "A Twisted Edwards curve defined over the scalar field of the BLS12-377 curve",
    "license": [""],
    "tags": ["elliptic-curves", "finite-fields", "cryptography"],
    "downloads": 1035978,
    "repositories": ["crates.io"]
  },
  "rust:ark-ed-on-bls12-377-ext": {
    "coordinates": "rust:ark-ed-on-bls12-377-ext",
    "name": "ark-ed-on-bls12-377-ext",
    "description": "Extensions for Twisted Edwards curve defined over the scalar field of the BLS12-377 curve",
    "license": [""],
    "tags": ["pairing", "elliptic-curves", "cryptography"],
    "downloads": 672567,
    "repositories": ["crates.io"]
  },
  "rust:ark-ed-on-bls12-381-bandersnatch": {
    "coordinates": "rust:ark-ed-on-bls12-381-bandersnatch",
    "name": "ark-ed-on-bls12-381-bandersnatch",
    "description": "Bandersnatch: a curve defined over the scalar field of the BLS12-381 curve",
    "license": [""],
    "tags": ["cryptography", "finite-fields", "elliptic-curves"],
    "downloads": 1053480,
    "repositories": ["crates.io"]
  },
  "rust:ark-ed-on-bls12-381-bandersnatch-ext": {
    "coordinates": "rust:ark-ed-on-bls12-381-bandersnatch-ext",
    "name": "ark-ed-on-bls12-381-bandersnatch-ext",
    "description": "Extensions for Bandersnatch curve defined over the scalar field of the BLS12-381 curve",
    "license": [""],
    "tags": ["pairing", "elliptic-curves", "cryptography"],
    "downloads": 672622,
    "repositories": ["crates.io"]
  },
  "rust:ark-ff": {
    "coordinates": "rust:ark-ff",
    "name": "ark-ff",
    "description": "A library for finite fields",
    "license": [""],
    "tags": ["cryptography", "finite-fields"],
    "downloads": 5947531,
    "repositories": ["crates.io"]
  },
  "rust:ark-ff-asm": {
    "coordinates": "rust:ark-ff-asm",
    "name": "ark-ff-asm",
    "description": "A library for generating x86-64 assembly for finite field multiplication",
    "license": [""],
    "tags": ["cryptography", "assembly", "finite-fields"],
    "downloads": 6046956,
    "repositories": ["crates.io"]
  },
  "rust:ark-ff-macros": {
    "coordinates": "rust:ark-ff-macros",
    "name": "ark-ff-macros",
    "description": "A library for generating x86-64 assembly for finite field multiplication",
    "license": [""],
    "tags": ["cryptography", "finite-fields", "assembly"],
    "downloads": 6017143,
    "repositories": ["crates.io"]
  },
  "rust:ark-groth16": {
    "coordinates": "rust:ark-groth16",
    "name": "ark-groth16",
    "description": "An implementation of the Groth 2016 zkSNARK proof system",
    "license": [""],
    "tags": [
      "cryptography",
      "snark",
      "groth-maller",
      "zksnark",
      "zero-knowledge"
    ],
    "downloads": 1192425,
    "repositories": ["crates.io"]
  },
  "rust:ark-models-ext": {
    "coordinates": "rust:ark-models-ext",
    "name": "ark-models-ext",
    "description": "Replacement models for BLS12 and BW6 of ark-ec",
    "license": [""],
    "tags": ["pairing", "elliptic-curves", "cryptography"],
    "downloads": 673755,
    "repositories": ["crates.io"]
  },
  "rust:ark-poly": {
    "coordinates": "rust:ark-poly",
    "name": "ark-poly",
    "description": "A library for efficient polynomial arithmetic via FFTs over finite fields",
    "license": [""],
    "tags": ["cryptography", "finite-fields", "polynomials", "fft"],
    "downloads": 4325528,
    "repositories": ["crates.io"]
  },
  "rust:ark-relations": {
    "coordinates": "rust:ark-relations",
    "name": "ark-relations",
    "description": "A library for rank-one constraint systems",
    "license": [""],
    "tags": [
      "snark",
      "constraint-systems",
      "zero-knowledge",
      "zksnark",
      "cryptography"
    ],
    "downloads": 1666659,
    "repositories": ["crates.io"]
  },
  "rust:ark-scale": {
    "coordinates": "rust:ark-scale",
    "name": "ark-scale",
    "description": "Arkworks serialization wrapped in Parity SCALE codec",
    "license": [""],
    "tags": [],
    "downloads": 1544302,
    "repositories": ["crates.io"]
  },
  "rust:ark-secret-scalar": { "name": "ark-secret-scalar" },
  "rust:ark-serialize": {
    "coordinates": "rust:ark-serialize",
    "name": "ark-serialize",
    "description": "A library for serializing types in the arkworks ecosystem",
    "license": [""],
    "tags": ["cryptography", "serialization"],
    "downloads": 6058746,
    "repositories": ["crates.io"]
  },
  "rust:ark-serialize-derive": {
    "coordinates": "rust:ark-serialize-derive",
    "name": "ark-serialize-derive",
    "description": "A library for deriving serialization traits for the arkworks ecosystem",
    "license": [""],
    "tags": [
      "cryptography",
      "elliptic-curves",
      "finite-fields",
      "serialization"
    ],
    "downloads": 4447140,
    "repositories": ["crates.io"]
  },
  "rust:ark-snark": {
    "coordinates": "rust:ark-snark",
    "name": "ark-snark",
    "description": "A library for SNARK traits",
    "license": [""],
    "tags": ["snark", "zero-knowledge", "zksnark", "cryptography"],
    "downloads": 1403983,
    "repositories": ["crates.io"]
  },
  "rust:ark-std": {
    "coordinates": "rust:ark-std",
    "name": "ark-std",
    "description": "A library for no_std compatibility",
    "license": [""],
    "tags": ["no_std"],
    "downloads": 6181125,
    "repositories": ["crates.io"]
  },
  "rust:ark-transcript": {
    "coordinates": "rust:ark-transcript",
    "name": "ark-transcript",
    "description": "Arkworks friendly transcripts for proofs using Fiat-Shamir",
    "license": [""],
    "tags": [],
    "downloads": 713,
    "repositories": ["crates.io"]
  },
  "rust:arm-gic": {
    "coordinates": "rust:arm-gic",
    "name": "arm-gic",
    "description": "A driver for the Arm Generic Interrupt Controller version 3 or 4.",
    "license": [""],
    "tags": ["aarch64", "gic", "interrupt-controller", "arm", "driver"],
    "downloads": 9059,
    "repositories": ["crates.io"]
  },
  "rust:array-bytes": {
    "coordinates": "rust:array-bytes",
    "name": "array-bytes",
    "description": "A collection of array/bytes/hex utilities.",
    "license": [""],
    "tags": ["no-std", "array", "vec", "hex", "slice"],
    "downloads": 3835049,
    "repositories": ["crates.io"]
  },
  "rust:array-init": {
    "coordinates": "rust:array-init",
    "name": "array-init",
    "description": "Safe wrapper for initializing fixed-size arrays",
    "license": [""],
    "tags": ["no_std", "initialization", "abstraction"],
    "downloads": 4352925,
    "repositories": ["crates.io"]
  },
  "rust:array-init-cursor": {
    "coordinates": "rust:array-init-cursor",
    "name": "array-init-cursor",
    "description": "Utility crate to help keep track of arrays of MaybeUninit",
    "license": [""],
    "tags": ["initialization", "abstraction", "no_std"],
    "downloads": 1704042,
    "repositories": ["crates.io"]
  },
  "rust:arrow": {
    "coordinates": "rust:arrow",
    "name": "arrow",
    "description": "Rust implementation of Apache Arrow",
    "license": [""],
    "tags": ["arrow"],
    "downloads": 4152998,
    "repositories": ["crates.io"]
  },
  "rust:arrow-arith": {
    "coordinates": "rust:arrow-arith",
    "name": "arrow-arith",
    "description": "Arrow arithmetic kernels",
    "license": [""],
    "tags": ["arrow"],
    "downloads": 3046005,
    "repositories": ["crates.io"]
  },
  "rust:arrow-array": {
    "coordinates": "rust:arrow-array",
    "name": "arrow-array",
    "description": "Array abstractions for Apache Arrow",
    "license": [""],
    "tags": ["arrow"],
    "downloads": 4154013,
    "repositories": ["crates.io"]
  },
  "rust:arrow-buffer": {
    "coordinates": "rust:arrow-buffer",
    "name": "arrow-buffer",
    "description": "Buffer abstractions for Apache Arrow",
    "license": [""],
    "tags": ["arrow"],
    "downloads": 4203107,
    "repositories": ["crates.io"]
  },
  "rust:arrow-cast": {
    "coordinates": "rust:arrow-cast",
    "name": "arrow-cast",
    "description": "Cast kernel and utilities for Apache Arrow",
    "license": [""],
    "tags": ["arrow"],
    "downloads": 3972933,
    "repositories": ["crates.io"]
  },
  "rust:arrow-csv": {
    "coordinates": "rust:arrow-csv",
    "name": "arrow-csv",
    "description": "Support for parsing CSV format to and from the Arrow format",
    "license": [""],
    "tags": ["arrow"],
    "downloads": 2713437,
    "repositories": ["crates.io"]
  },
  "rust:arrow-data": {
    "coordinates": "rust:arrow-data",
    "name": "arrow-data",
    "description": "Array data abstractions for Apache Arrow",
    "license": [""],
    "tags": ["arrow"],
    "downloads": 4158694,
    "repositories": ["crates.io"]
  },
  "rust:arrow-format": {
    "coordinates": "rust:arrow-format",
    "name": "arrow-format",
    "description": "Unofficial flatbuffers and tonic code of Apache Arrow spec",
    "license": [""],
    "tags": ["analytics", "arrow"],
    "downloads": 1558103,
    "repositories": ["crates.io"]
  },
  "rust:arrow-ipc": {
    "coordinates": "rust:arrow-ipc",
    "name": "arrow-ipc",
    "description": "Support for the Arrow IPC format",
    "license": [""],
    "tags": ["arrow"],
    "downloads": 3756920,
    "repositories": ["crates.io"]
  },
  "rust:arrow-json": {
    "coordinates": "rust:arrow-json",
    "name": "arrow-json",
    "description": "Support for parsing JSON format to and from the Arrow format",
    "license": [""],
    "tags": ["arrow"],
    "downloads": 2716408,
    "repositories": ["crates.io"]
  },
  "rust:arrow-ord": {
    "coordinates": "rust:arrow-ord",
    "name": "arrow-ord",
    "description": "Ordering kernels for arrow arrays",
    "license": [""],
    "tags": ["arrow"],
    "downloads": 3035092,
    "repositories": ["crates.io"]
  },
  "rust:arrow-row": {
    "coordinates": "rust:arrow-row",
    "name": "arrow-row",
    "description": "Arrow row format",
    "license": [""],
    "tags": ["arrow"],
    "downloads": 2970882,
    "repositories": ["crates.io"]
  },
  "rust:arrow-schema": {
    "coordinates": "rust:arrow-schema",
    "name": "arrow-schema",
    "description": "Defines the logical types for arrow arrays",
    "license": [""],
    "tags": ["arrow"],
    "downloads": 4167715,
    "repositories": ["crates.io"]
  },
  "rust:arrow-select": {
    "coordinates": "rust:arrow-select",
    "name": "arrow-select",
    "description": "Selection kernels for arrow arrays",
    "license": [""],
    "tags": ["arrow"],
    "downloads": 4063039,
    "repositories": ["crates.io"]
  },
  "rust:arrow-string": {
    "coordinates": "rust:arrow-string",
    "name": "arrow-string",
    "description": "String kernels for arrow arrays",
    "license": [""],
    "tags": ["arrow"],
    "downloads": 2903662,
    "repositories": ["crates.io"]
  },
  "rust:arrow2": {
    "coordinates": "rust:arrow2",
    "name": "arrow2",
    "description": "Unofficial implementation of Apache Arrow spec in safe Rust",
    "license": [""],
    "tags": ["arrow", "analytics"],
    "downloads": 1145933,
    "repositories": ["crates.io"]
  },
  "rust:arroy": {
    "coordinates": "rust:arroy",
    "name": "arroy",
    "description": "Annoy-inspired Approximate Nearest Neighbors in Rust, based on LMDB and optimized for memory usage",
    "license": [""],
    "tags": ["vector-search", "graph-algorithms", "store", "ann-search"],
    "downloads": 18291,
    "repositories": ["crates.io"]
  },
  "rust:as-raw-xcb-connection": {
    "coordinates": "rust:as-raw-xcb-connection",
    "name": "as-raw-xcb-connection",
    "description": "Trait to facilitate interoperatibility with libxcb C API",
    "license": [""],
    "tags": ["x11", "xcb"],
    "downloads": 670417,
    "repositories": ["crates.io"]
  },
  "rust:as-slice": {
    "coordinates": "rust:as-slice",
    "name": "as-slice",
    "description": "`AsSlice` and `AsMutSlice` traits",
    "license": [""],
    "tags": ["array", "slice", "conversion"],
    "downloads": 3107393,
    "repositories": ["crates.io"]
  },
  "rust:ash": {
    "coordinates": "rust:ash",
    "name": "ash",
    "description": "Vulkan bindings for Rust",
    "license": [""],
    "tags": ["bindings", "graphics", "vulkan", "gamedev"],
    "downloads": 5347827,
    "repositories": ["crates.io"]
  },
  "rust:ashpd": {
    "coordinates": "rust:ashpd",
    "name": "ashpd",
    "description": "XDG portals wrapper in Rust using zbus",
    "license": [""],
    "tags": ["flatpak", "xdg", "portal", "desktop", "dbus"],
    "downloads": 502887,
    "repositories": ["crates.io"]
  },
  "rust:askama": {
    "coordinates": "rust:askama",
    "name": "askama",
    "description": "Type-safe, compiled Jinja-like templates for Rust",
    "license": [""],
    "tags": ["template", "markup", "jinja2", "html"],
    "downloads": 6224055,
    "repositories": ["crates.io"]
  },
  "rust:askama_derive": {
    "coordinates": "rust:askama_derive",
    "name": "askama_derive",
    "description": "Procedural macro package for Askama",
    "license": [""],
    "tags": [],
    "downloads": 6241124,
    "repositories": ["crates.io"]
  },
  "rust:askama_escape": {
    "coordinates": "rust:askama_escape",
    "name": "askama_escape",
    "description": "Optimized HTML escaping code, extracted from Askama",
    "license": [""],
    "tags": ["html", "escaping"],
    "downloads": 7936729,
    "repositories": ["crates.io"]
  },
  "rust:askama_parser": {
    "coordinates": "rust:askama_parser",
    "name": "askama_parser",
    "description": "Parser for Askama templates",
    "license": [""],
    "tags": ["markup", "template", "html", "jinja2"],
    "downloads": 1072403,
    "repositories": ["crates.io"]
  },
  "rust:asn1_der": {
    "coordinates": "rust:asn1_der",
    "name": "asn1_der",
    "description": "This crate provides an ASN.1-DER en-/decoder",
    "license": [""],
    "tags": ["asn1-der", "deserialize", "no_panic", "asn1", "serialize"],
    "downloads": 3848404,
    "repositories": ["crates.io"]
  },
  "rust:async-attributes": {
    "coordinates": "rust:async-attributes",
    "name": "async-attributes",
    "description": "Experimental language-level polyfills for Async Rust.",
    "license": [""],
    "tags": ["futures", "macro", "await", "async"],
    "downloads": 8037585,
    "repositories": ["crates.io"]
  },
  "rust:async-bb8-diesel": {
    "coordinates": "rust:async-bb8-diesel",
    "name": "async-bb8-diesel",
    "description": "async bb8 connection manager for Diesel",
    "license": [""],
    "tags": ["r2d2", "diesel", "tokio", "pool", "async"],
    "downloads": 8779,
    "repositories": ["crates.io"]
  },
  "rust:async-broadcast": {
    "coordinates": "rust:async-broadcast",
    "name": "async-broadcast",
    "description": "Async broadcast channels",
    "license": [""],
    "tags": [],
    "downloads": 7322739,
    "repositories": ["crates.io"]
  },
  "rust:async-dup": {
    "coordinates": "rust:async-dup",
    "name": "async-dup",
    "description": "Duplicate an async I/O handle",
    "license": [""],
    "tags": ["share", "clone", "duplicate", "split", "asynchronous"],
    "downloads": 2586977,
    "repositories": ["crates.io"]
  },
  "rust:async-fs": {
    "coordinates": "rust:async-fs",
    "name": "async-fs",
    "description": "Async filesystem primitives",
    "license": [""],
    "tags": ["io", "file", "asynchronous", "filesystem"],
    "downloads": 7226932,
    "repositories": ["crates.io"]
  },
  "rust:async-h1": {
    "coordinates": "rust:async-h1",
    "name": "async-h1",
    "description": "Asynchronous HTTP 1.1 parser.",
    "license": [""],
    "tags": ["parser", "stream", "http", "http1", "async"],
    "downloads": 3062145,
    "repositories": ["crates.io"]
  },
  "rust:async-http-codec": {
    "coordinates": "rust:async-http-codec",
    "name": "async-http-codec",
    "description": "async HTTP 1.1 encoding and decoding",
    "license": [""],
    "tags": [],
    "downloads": 28041,
    "repositories": ["crates.io"]
  },
  "rust:async-native-tls": {
    "coordinates": "rust:async-native-tls",
    "name": "async-native-tls",
    "description": "Native TLS using futures ",
    "license": [""],
    "tags": [],
    "downloads": 4153585,
    "repositories": ["crates.io"]
  },
  "rust:async-nats": {
    "coordinates": "rust:async-nats",
    "name": "async-nats",
    "description": "A async Rust NATS client",
    "license": [""],
    "tags": ["nats", "client", "messaging", "api"],
    "downloads": 935983,
    "repositories": ["crates.io"]
  },
  "rust:async-net": {
    "coordinates": "rust:async-net",
    "name": "async-net",
    "description": "Async networking primitives for TCP/UDP/Unix communication",
    "license": [""],
    "tags": ["networking", "mio", "uds", "reactor", "std"],
    "downloads": 4330725,
    "repositories": ["crates.io"]
  },
  "rust:async-once-cell": {
    "coordinates": "rust:async-once-cell",
    "name": "async-once-cell",
    "description": "Async single assignment cells and lazy values.",
    "license": [""],
    "tags": ["lazy", "async", "static"],
    "downloads": 1131265,
    "repositories": ["crates.io"]
  },
  "rust:async-session": {
    "coordinates": "rust:async-session",
    "name": "async-session",
    "description": "Async session support with pluggable middleware",
    "license": [""],
    "tags": [],
    "downloads": 1249488,
    "repositories": ["crates.io"]
  },
  "rust:async-signal": {
    "coordinates": "rust:async-signal",
    "name": "async-signal",
    "description": "Async signal handling",
    "license": [""],
    "tags": ["signal-hook-registry", "signal-hook", "signal", "async"],
    "downloads": 2887146,
    "repositories": ["crates.io"]
  },
  "rust:async-speed-limit": {
    "coordinates": "rust:async-speed-limit",
    "name": "async-speed-limit",
    "description": "Asynchronously speed-limiting multiple byte streams",
    "license": [""],
    "tags": [],
    "downloads": 114829,
    "repositories": ["crates.io"]
  },
  "rust:async-sse": {
    "coordinates": "rust:async-sse",
    "name": "async-sse",
    "description": "Async Server Sent Event parser and encoder",
    "license": [""],
    "tags": ["sse", "async", "server-sent-events", "server", "client"],
    "downloads": 1601466,
    "repositories": ["crates.io"]
  },
  "rust:async-tungstenite": {
    "coordinates": "rust:async-tungstenite",
    "name": "async-tungstenite",
    "description": "Async binding for Tungstenite, the Lightweight stream-based WebSocket implementation",
    "license": [""],
    "tags": ["io", "async-std", "tokio", "websocket", "web"],
    "downloads": 5283293,
    "repositories": ["crates.io"]
  },
  "rust:async-walkdir": {
    "coordinates": "rust:async-walkdir",
    "name": "async-walkdir",
    "description": "Asynchronous directory traversal for Rust.",
    "license": [""],
    "tags": ["recursive", "stream", "walk", "directory", "async"],
    "downloads": 255668,
    "repositories": ["crates.io"]
  },
  "rust:async-web-client": {
    "coordinates": "rust:async-web-client",
    "name": "async-web-client",
    "description": "async web client helpers",
    "license": [""],
    "tags": [],
    "downloads": 22956,
    "repositories": ["crates.io"]
  },
  "rust:async-ws": {
    "coordinates": "rust:async-ws",
    "name": "async-ws",
    "description": "async websocket implementation",
    "license": [""],
    "tags": [],
    "downloads": 23185,
    "repositories": ["crates.io"]
  },
  "rust:asynchronous-codec": {
    "coordinates": "rust:asynchronous-codec",
    "name": "asynchronous-codec",
    "description": "Utilities for encoding and decoding frames using `async/await`",
    "license": [""],
    "tags": ["future", "async", "futures", "codec"],
    "downloads": 8244389,
    "repositories": ["crates.io"]
  },
  "rust:atk": {
    "coordinates": "rust:atk",
    "name": "atk",
    "description": "Rust bindings for the ATK library",
    "license": [""],
    "tags": ["accessibility", "atk", "gtk-rs", "gnome"],
    "downloads": 2961448,
    "repositories": ["crates.io"]
  },
  "rust:atk-sys": {
    "coordinates": "rust:atk-sys",
    "name": "atk-sys",
    "description": "FFI bindings to libatk-1",
    "license": [""],
    "tags": ["ffi", "atk", "gtk-rs", "gnome"],
    "downloads": 3706435,
    "repositories": ["crates.io"]
  },
  "rust:atoi_simd": {
    "coordinates": "rust:atoi_simd",
    "name": "atoi_simd",
    "description": "Fast `&[u8]` to integer parser",
    "license": [""],
    "tags": ["simd", "u8", "atoi", "parseint", "parse"],
    "downloads": 267126,
    "repositories": ["crates.io"]
  },
  "rust:atom_syndication": {
    "coordinates": "rust:atom_syndication",
    "name": "atom_syndication",
    "description": "Library for serializing the Atom web content syndication format",
    "license": [""],
    "tags": ["atom", "parser", "feed", "parsing"],
    "downloads": 450243,
    "repositories": ["crates.io"]
  },
  "rust:atomic-polyfill": {
    "coordinates": "rust:atomic-polyfill",
    "name": "atomic-polyfill",
    "description": "Atomic polyfills, for targets where they''re not available.",
    "license": [""],
    "tags": [],
    "downloads": 5884770,
    "repositories": ["crates.io"]
  },
  "rust:atomic-shim": {
    "coordinates": "rust:atomic-shim",
    "name": "atomic-shim",
    "description": "Atomic types for unsupported platforms",
    "license": [""],
    "tags": ["atomic"],
    "downloads": 2582237,
    "repositories": ["crates.io"]
  },
  "rust:atomic-take": {
    "coordinates": "rust:atomic-take",
    "name": "atomic-take",
    "description": "Atomically take a value out of a container once.",
    "license": [""],
    "tags": ["option", "take", "atomic", "lock-free"],
    "downloads": 2759194,
    "repositories": ["crates.io"]
  },
  "rust:atomic-write-file": {
    "coordinates": "rust:atomic-write-file",
    "name": "atomic-write-file",
    "description": "Write files atomically to a file system",
    "license": [""],
    "tags": ["file", "write", "atomic"],
    "downloads": 1688128,
    "repositories": ["crates.io"]
  },
  "rust:atspi": {
    "coordinates": "rust:atspi",
    "name": "atspi",
    "description": "Pure-Rust, zbus-based AT-SPI2 protocol implementation.",
    "license": [""],
    "tags": ["a11y", "screen-reader", "tts", "accessibility", "linux"],
    "downloads": 726368,
    "repositories": ["crates.io"]
  },
  "rust:atspi-common": {
    "coordinates": "rust:atspi-common",
    "name": "atspi-common",
    "description": "Primitive types used for sending and receiving Linux accessibility events.",
    "license": [""],
    "tags": ["macros", "accessibility"],
    "downloads": 268260,
    "repositories": ["crates.io"]
  },
  "rust:atspi-connection": {
    "coordinates": "rust:atspi-connection",
    "name": "atspi-connection",
    "description": "A method of connecting, querying, sending and receiving over AT-SPI.",
    "license": [""],
    "tags": ["a11y", "screen-reader", "accessibility", "linux"],
    "downloads": 267449,
    "repositories": ["crates.io"]
  },
  "rust:atspi-proxies": {
    "coordinates": "rust:atspi-proxies",
    "name": "atspi-proxies",
    "description": "AT-SPI2 proxies to query or manipulate UI objects",
    "license": [""],
    "tags": ["screen-reader", "a11y", "tts", "accessibility", "linux"],
    "downloads": 267926,
    "repositories": ["crates.io"]
  },
  "rust:attohttpc": {
    "coordinates": "rust:attohttpc",
    "name": "attohttpc",
    "description": "Small and lightweight HTTP client",
    "license": [""],
    "tags": ["http", "https", "request", "response", "client"],
    "downloads": 6614069,
    "repositories": ["crates.io"]
  },
  "rust:attribute-derive": {
    "coordinates": "rust:attribute-derive",
    "name": "attribute-derive",
    "description": "Clap like parsing for attributes in proc-macros",
    "license": [""],
    "tags": ["macro", "arguments", "derive", "attribute", "syn"],
    "downloads": 1473569,
    "repositories": ["crates.io"]
  },
  "rust:attribute-derive-macro": {
    "coordinates": "rust:attribute-derive-macro",
    "name": "attribute-derive-macro",
    "description": "Clap for proc macro attributes",
    "license": [""],
    "tags": ["macro", "derive"],
    "downloads": 1472766,
    "repositories": ["crates.io"]
  },
  "rust:aurora-engine-modexp": {
    "coordinates": "rust:aurora-engine-modexp",
    "name": "aurora-engine-modexp",
    "description": "Custom ModExp implementation that used in Aurora Engine",
    "license": [""],
    "tags": [],
    "downloads": 168984,
    "repositories": ["crates.io"]
  },
  "rust:auth-git2": {
    "coordinates": "rust:auth-git2",
    "name": "auth-git2",
    "description": "Authentication for `git2`",
    "license": [""],
    "tags": ["git", "auth", "git2", "authentication", "credentials"],
    "downloads": 151787,
    "repositories": ["crates.io"]
  },
  "rust:auto_impl": {
    "coordinates": "rust:auto_impl",
    "name": "auto_impl",
    "description": "Automatically implement traits for common smart pointers and closures",
    "license": [""],
    "tags": ["closure", "impl", "proc-macro", "trait"],
    "downloads": 9190268,
    "repositories": ["crates.io"]
  },
  "rust:autocxx": {
    "coordinates": "rust:autocxx",
    "name": "autocxx",
    "description": "Safe autogenerated interop between Rust and C++",
    "license": [""],
    "tags": ["ffi"],
    "downloads": 429340,
    "repositories": ["crates.io"]
  },
  "rust:autocxx-bindgen": {
    "coordinates": "rust:autocxx-bindgen",
    "name": "autocxx-bindgen",
    "description": "Automatically generates Rust FFI bindings to C and C++ libraries. Version adjusted for autocxx.",
    "license": [""],
    "tags": ["code-generation", "bindings", "ffi"],
    "downloads": 453672,
    "repositories": ["crates.io"]
  },
  "rust:autocxx-build": {
    "coordinates": "rust:autocxx-build",
    "name": "autocxx-build",
    "description": "Safe autogenerated interop between Rust and C++",
    "license": [""],
    "tags": ["ffi"],
    "downloads": 159108,
    "repositories": ["crates.io"]
  },
  "rust:autocxx-engine": {
    "coordinates": "rust:autocxx-engine",
    "name": "autocxx-engine",
    "description": "Safe autogenerated interop between Rust and C++",
    "license": [""],
    "tags": ["ffi"],
    "downloads": 426524,
    "repositories": ["crates.io"]
  },
  "rust:autocxx-macro": {
    "coordinates": "rust:autocxx-macro",
    "name": "autocxx-macro",
    "description": "Safe autogenerated interop between Rust and C++",
    "license": [""],
    "tags": ["ffi"],
    "downloads": 428025,
    "repositories": ["crates.io"]
  },
  "rust:autocxx-parser": {
    "coordinates": "rust:autocxx-parser",
    "name": "autocxx-parser",
    "description": "Safe autogenerated interop between Rust and C++",
    "license": [""],
    "tags": ["ffi"],
    "downloads": 455164,
    "repositories": ["crates.io"]
  },
  "rust:autotools": {
    "coordinates": "rust:autotools",
    "name": "autotools",
    "description": "A build dependency to build native libraries that use configure&make-style build systems ",
    "license": [""],
    "tags": ["build-dependencies"],
    "downloads": 2386937,
    "repositories": ["crates.io"]
  },
  "rust:av1-grain": {
    "coordinates": "rust:av1-grain",
    "name": "av1-grain",
    "description": "Helpers for generating and parsing AV1 film grain data",
    "license": [""],
    "tags": [],
    "downloads": 549388,
    "repositories": ["crates.io"]
  },
  "rust:avail-base": { "name": "avail-base" },
  "rust:avail-core": { "name": "avail-core" },
  "rust:avail-subxt": { "name": "avail-subxt" },
  "rust:avif-serialize": {
    "coordinates": "rust:avif-serialize",
    "name": "avif-serialize",
    "description": "Minimal writer for AVIF header structure (MPEG/HEIF/MIAF/ISO-BMFF)",
    "license": [""],
    "tags": ["bmff", "avif", "heif", "av1", "mux"],
    "downloads": 395273,
    "repositories": ["crates.io"]
  },
  "rust:avro-schema": {
    "coordinates": "rust:avro-schema",
    "name": "avro-schema",
    "description": "Apache Avro specification",
    "license": [""],
    "tags": ["avro", "analytics"],
    "downloads": 206325,
    "repositories": ["crates.io"]
  },
  "rust:awc": {
    "coordinates": "rust:awc",
    "name": "awc",
    "description": "Async HTTP and WebSocket client library",
    "license": [""],
    "tags": ["http", "web", "async", "actix", "framework"],
    "downloads": 6521892,
    "repositories": ["crates.io"]
  },
  "rust:aws-credential-types": {
    "coordinates": "rust:aws-credential-types",
    "name": "aws-credential-types",
    "description": "Types for AWS SDK credentials.",
    "license": [""],
    "tags": [],
    "downloads": 8170572,
    "repositories": ["crates.io"]
  },
  "rust:aws-creds": {
    "coordinates": "rust:aws-creds",
    "name": "aws-creds",
    "description": "Tiny Rust library for working with Amazon IAM credential,s, supports `s3` crate",
    "license": [""],
    "tags": ["r2", "wasabi", "s3", "minio", "aws"],
    "downloads": 1965579,
    "repositories": ["crates.io"]
  },
  "rust:aws-endpoint": {
    "coordinates": "rust:aws-endpoint",
    "name": "aws-endpoint",
    "description": "This crate is no longer used by the AWS SDK and is deprecated.",
    "license": [""],
    "tags": [],
    "downloads": 8848799,
    "repositories": ["crates.io"]
  },
  "rust:aws-runtime": {
    "coordinates": "rust:aws-runtime",
    "name": "aws-runtime",
    "description": "Runtime support code for the AWS SDK. This crate isn''t intended to be used directly.",
    "license": [""],
    "tags": [],
    "downloads": 4005914,
    "repositories": ["crates.io"]
  },
  "rust:aws-sdk-kinesis": {
    "coordinates": "rust:aws-sdk-kinesis",
    "name": "aws-sdk-kinesis",
    "description": "AWS SDK for Amazon Kinesis",
    "license": [""],
    "tags": [],
    "downloads": 705759,
    "repositories": ["crates.io"]
  },
  "rust:aws-sdk-kms": {
    "coordinates": "rust:aws-sdk-kms",
    "name": "aws-sdk-kms",
    "description": "AWS SDK for AWS Key Management Service",
    "license": [""],
    "tags": [],
    "downloads": 1124573,
    "repositories": ["crates.io"]
  },
  "rust:aws-sdk-lambda": {
    "coordinates": "rust:aws-sdk-lambda",
    "name": "aws-sdk-lambda",
    "description": "AWS SDK for AWS Lambda",
    "license": [""],
    "tags": [],
    "downloads": 798295,
    "repositories": ["crates.io"]
  },
  "rust:aws-sdk-s3": {
    "coordinates": "rust:aws-sdk-s3",
    "name": "aws-sdk-s3",
    "description": "AWS SDK for Amazon Simple Storage Service",
    "license": [""],
    "tags": [],
    "downloads": 8396997,
    "repositories": ["crates.io"]
  },
  "rust:aws-sdk-sesv2": {
    "coordinates": "rust:aws-sdk-sesv2",
    "name": "aws-sdk-sesv2",
    "description": "AWS SDK for Amazon Simple Email Service",
    "license": [""],
    "tags": [],
    "downloads": 373770,
    "repositories": ["crates.io"]
  },
  "rust:aws-sdk-ssooidc": {
    "coordinates": "rust:aws-sdk-ssooidc",
    "name": "aws-sdk-ssooidc",
    "description": "AWS SDK for AWS SSO OIDC",
    "license": [""],
    "tags": [],
    "downloads": 2049597,
    "repositories": ["crates.io"]
  },
  "rust:aws-sig-auth": {
    "coordinates": "rust:aws-sig-auth",
    "name": "aws-sig-auth",
    "description": "This crate is no longer used by the AWS SDK and is deprecated.",
    "license": [""],
    "tags": [],
    "downloads": 9113239,
    "repositories": ["crates.io"]
  },
  "rust:aws-smithy-checksums": {
    "coordinates": "rust:aws-smithy-checksums",
    "name": "aws-smithy-checksums",
    "description": "Checksum calculation and verification callbacks",
    "license": [""],
    "tags": [],
    "downloads": 7505353,
    "repositories": ["crates.io"]
  },
  "rust:aws-smithy-eventstream": {
    "coordinates": "rust:aws-smithy-eventstream",
    "name": "aws-smithy-eventstream",
    "description": "Event stream logic for smithy-rs.",
    "license": [""],
    "tags": [],
    "downloads": 8407805,
    "repositories": ["crates.io"]
  },
  "rust:aws-smithy-protocol-test": {
    "coordinates": "rust:aws-smithy-protocol-test",
    "name": "aws-smithy-protocol-test",
    "description": "A collection of library functions to validate HTTP requests against Smithy protocol tests.",
    "license": [""],
    "tags": [],
    "downloads": 795990,
    "repositories": ["crates.io"]
  },
  "rust:aws-smithy-runtime": {
    "coordinates": "rust:aws-smithy-runtime",
    "name": "aws-smithy-runtime",
    "description": "The new smithy runtime crate",
    "license": [""],
    "tags": [],
    "downloads": 4009200,
    "repositories": ["crates.io"]
  },
  "rust:aws-smithy-runtime-api": {
    "coordinates": "rust:aws-smithy-runtime-api",
    "name": "aws-smithy-runtime-api",
    "description": "Smithy runtime types.",
    "license": [""],
    "tags": [],
    "downloads": 4051814,
    "repositories": ["crates.io"]
  },
  "rust:aws_lambda_events": {
    "coordinates": "rust:aws_lambda_events",
    "name": "aws_lambda_events",
    "description": "AWS Lambda event definitions",
    "license": [""],
    "tags": ["events", "lambda", "s3", "aws", "amazon"],
    "downloads": 2068912,
    "repositories": ["crates.io"]
  },
  "rust:axum-extra": {
    "coordinates": "rust:axum-extra",
    "name": "axum-extra",
    "description": "Extra utilities for axum",
    "license": [""],
    "tags": ["http", "framework", "web"],
    "downloads": 3290574,
    "repositories": ["crates.io"]
  },
  "rust:axum-macros": {
    "coordinates": "rust:axum-macros",
    "name": "axum-macros",
    "description": "Macros for axum",
    "license": [""],
    "tags": ["axum"],
    "downloads": 6284692,
    "repositories": ["crates.io"]
  },
  "rust:axum-server": {
    "coordinates": "rust:axum-server",
    "name": "axum-server",
    "description": "High level server designed to be used with axum framework.",
    "license": [""],
    "tags": ["server", "https", "web", "http"],
    "downloads": 2755492,
    "repositories": ["crates.io"]
  },
  "rust:axum_session": {
    "coordinates": "rust:axum_session",
    "name": "axum_session",
    "description": "📝 Session management layer for axum that supports HTTP and Rest.",
    "license": [""],
    "tags": ["axum", "session", "tower", "store"],
    "downloads": 40455,
    "repositories": ["crates.io"]
  },
  "rust:axum_session_auth": {
    "coordinates": "rust:axum_session_auth",
    "name": "axum_session_auth",
    "description": "Library to Provide a User Authentication and privilege Token Checks. It requires the Axum_Session library.",
    "license": [""],
    "tags": ["authentication", "tower", "session", "axum", "sqlx"],
    "downloads": 20947,
    "repositories": ["crates.io"]
  },
  "rust:az": {
    "coordinates": "rust:az",
    "name": "az",
    "description": "Casts and checked casts",
    "license": [""],
    "tags": ["cast", "integer", "checked", "float"],
    "downloads": 2041738,
    "repositories": ["crates.io"]
  },
  "rust:azure_core": {
    "coordinates": "rust:azure_core",
    "name": "azure_core",
    "description": "Rust wrappers around Microsoft Azure REST APIs - Core crate",
    "license": [""],
    "tags": ["sdk", "azure", "cloud", "rest", "iot"],
    "downloads": 1315141,
    "repositories": ["crates.io"]
  },
  "rust:azure_storage": {
    "coordinates": "rust:azure_storage",
    "name": "azure_storage",
    "description": "Azure Storage crate from the Azure SDK for Rust",
    "license": [""],
    "tags": ["sdk", "azure", "storage"],
    "downloads": 989010,
    "repositories": ["crates.io"]
  },
  "rust:azure_storage_blobs": {
    "coordinates": "rust:azure_storage_blobs",
    "name": "azure_storage_blobs",
    "description": "Azure Blob Storage crate from the Azure SDK for Rust",
    "license": [""],
    "tags": ["sdk", "azure", "blobs", "storage"],
    "downloads": 973046,
    "repositories": ["crates.io"]
  },
  "rust:backon": {
    "coordinates": "rust:backon",
    "name": "backon",
    "description": "Retry with backoff without effort.",
    "license": [""],
    "tags": [],
    "downloads": 2212763,
    "repositories": ["crates.io"]
  },
  "rust:backtrace-ext": {
    "coordinates": "rust:backtrace-ext",
    "name": "backtrace-ext",
    "description": "minor conveniences on top of the backtrace crate",
    "license": [""],
    "tags": [],
    "downloads": 1441299,
    "repositories": ["crates.io"]
  },
  "rust:bandersnatch_vrfs": { "name": "bandersnatch_vrfs" },
  "rust:bare-metal": {
    "coordinates": "rust:bare-metal",
    "name": "bare-metal",
    "description": "Abstractions common to bare metal systems",
    "license": [""],
    "tags": ["register", "interrupt", "bare-metal", "peripheral"],
    "downloads": 6201675,
    "repositories": ["crates.io"]
  },
  "rust:base-encode": {
    "coordinates": "rust:base-encode",
    "name": "base-encode",
    "description": "Encode and decode data to any base.",
    "license": [""],
    "tags": [],
    "downloads": 1167018,
    "repositories": ["crates.io"]
  },
  "rust:base16": {
    "coordinates": "rust:base16",
    "name": "base16",
    "description": "base16 (hex) encoding and decoding",
    "license": [""],
    "tags": ["hex", "base16", "decode", "encode", "no_std"],
    "downloads": 1487375,
    "repositories": ["crates.io"]
  },
  "rust:base36": {
    "coordinates": "rust:base36",
    "name": "base36",
    "description": "Library for based36 encoding",
    "license": [""],
    "tags": [],
    "downloads": 368474,
    "repositories": ["crates.io"]
  },
  "rust:base58": {
    "coordinates": "rust:base58",
    "name": "base58",
    "description": "Tiny and fast base58 encoding",
    "license": [""],
    "tags": ["bitcoin", "base58", "address", "encoding"],
    "downloads": 4451661,
    "repositories": ["crates.io"]
  },
  "rust:base85rs": {
    "coordinates": "rust:base85rs",
    "name": "base85rs",
    "description": "A base85 (RFC1924 variant) encoder / decoder",
    "license": [""],
    "tags": ["base85"],
    "downloads": 26684,
    "repositories": ["crates.io"]
  },
  "rust:basic-toml": {
    "coordinates": "rust:basic-toml",
    "name": "basic-toml",
    "description": "Minimal TOML library with few dependencies",
    "license": [""],
    "tags": ["toml", "serde"],
    "downloads": 7111678,
    "repositories": ["crates.io"]
  },
  "rust:bb8": {
    "coordinates": "rust:bb8",
    "name": "bb8",
    "description": "Full-featured async (tokio-based) connection pool (like r2d2)",
    "license": [""],
    "tags": [],
    "downloads": 3117507,
    "repositories": ["crates.io"]
  },
  "rust:bcrypt": {
    "coordinates": "rust:bcrypt",
    "name": "bcrypt",
    "description": "Easily hash and verify passwords using bcrypt",
    "license": [""],
    "tags": ["bcrypt", "password", "hash", "web"],
    "downloads": 2673286,
    "repositories": ["crates.io"]
  },
  "rust:better-panic": {
    "coordinates": "rust:better-panic",
    "name": "better-panic",
    "description": "Pretty panic backtraces inspired by Python''s tracebacks.",
    "license": [""],
    "tags": ["stacktrace", "pretty", "backtrace", "panic", "color"],
    "downloads": 344290,
    "repositories": ["crates.io"]
  },
  "rust:big_s": {
    "coordinates": "rust:big_s",
    "name": "big_s",
    "description": "Rust''s missing `String` literal",
    "license": [""],
    "tags": ["literal", "string"],
    "downloads": 86171,
    "repositories": ["crates.io"]
  },
  "rust:bimap": {
    "coordinates": "rust:bimap",
    "name": "bimap",
    "description": "Bijective maps",
    "license": [""],
    "tags": ["bidirectional", "bijection", "two-way", "map", "container"],
    "downloads": 5835171,
    "repositories": ["crates.io"]
  },
  "rust:binary-merkle-tree": {
    "coordinates": "rust:binary-merkle-tree",
    "name": "binary-merkle-tree",
    "description": "A no-std/Substrate compatible library to construct binary merkle tree.",
    "license": [""],
    "tags": [],
    "downloads": 20845,
    "repositories": ["crates.io"]
  },
  "rust:binascii": {
    "coordinates": "rust:binascii",
    "name": "binascii",
    "description": "Useful no-std binascii operations including base64, base32 and base16 (hex)",
    "license": [""],
    "tags": ["base16", "base32", "base64", "hex"],
    "downloads": 3057436,
    "repositories": ["crates.io"]
  },
  "rust:bindgen_cuda": {
    "coordinates": "rust:bindgen_cuda",
    "name": "bindgen_cuda",
    "description": "Bindgen like interface to build cuda kernels to interact with within Rust. ",
    "license": [""],
    "tags": [],
    "downloads": 18904,
    "repositories": ["crates.io"]
  },
  "rust:binout": {
    "coordinates": "rust:binout",
    "name": "binout",
    "description": "The library for binary serialization/deserialization of integers and arrays of integers.",
    "license": [""],
    "tags": ["leb128", "vbyte", "io", "encoding", "binary"],
    "downloads": 90746,
    "repositories": ["crates.io"]
  },
  "rust:bip39": {
    "coordinates": "rust:bip39",
    "name": "bip39",
    "description": "Library for BIP-39 Bitcoin mnemonic codes",
    "license": [""],
    "tags": ["bip39", "mnemonic", "bitcoin", "crypto"],
    "downloads": 1946018,
    "repositories": ["crates.io"]
  },
  "rust:bitcoin": {
    "coordinates": "rust:bitcoin",
    "name": "bitcoin",
    "description": "General purpose library for using and interoperating with Bitcoin.",
    "license": [""],
    "tags": ["bitcoin", "crypto"],
    "downloads": 3427181,
    "repositories": ["crates.io"]
  },
  "rust:bitcoin-private": {
    "coordinates": "rust:bitcoin-private",
    "name": "bitcoin-private",
    "description": "Internal types and macros used by rust-bitcoin ecosystem",
    "license": [""],
    "tags": ["internal"],
    "downloads": 1218860,
    "repositories": ["crates.io"]
  },
  "rust:bitcoin_hashes": {
    "coordinates": "rust:bitcoin_hashes",
    "name": "bitcoin_hashes",
    "description": "Hash functions used by the rust-bitcoin eccosystem",
    "license": [""],
    "tags": ["bitcoin", "hash", "digest", "crypto"],
    "downloads": 6582668,
    "repositories": ["crates.io"]
  },
  "rust:bitfield": {
    "coordinates": "rust:bitfield",
    "name": "bitfield",
    "description": "This crate provides macros to generate bitfield-like struct.",
    "license": [""],
    "tags": [],
    "downloads": 6275868,
    "repositories": ["crates.io"]
  },
  "rust:bitm": {
    "coordinates": "rust:bitm",
    "name": "bitm",
    "description": "The library for bit and bitmap (bit vector) manipulation.",
    "license": [""],
    "tags": ["bitvector", "rank", "bitset", "bit", "bitmap"],
    "downloads": 95025,
    "repositories": ["crates.io"]
  },
  "rust:bitpacking": {
    "coordinates": "rust:bitpacking",
    "name": "bitpacking",
    "description": "Fast integer compression/decompression via SIMD bit-packing. Port of simdcomp to rust.",
    "license": [""],
    "tags": ["integer", "compression", "bitpacking"],
    "downloads": 4003604,
    "repositories": ["crates.io"]
  },
  "rust:bitstream-io": {
    "coordinates": "rust:bitstream-io",
    "name": "bitstream-io",
    "description": "Library for reading/writing un-aligned values from/to streams in big-endian and little-endian formats.",
    "license": [""],
    "tags": ["little-endian", "bitstream", "big-endian", "endian", "binary"],
    "downloads": 1694166,
    "repositories": ["crates.io"]
  },
  "rust:blake2-rfc": {
    "coordinates": "rust:blake2-rfc",
    "name": "blake2-rfc",
    "description": "A pure Rust implementation of BLAKE2 based on RFC 7693.",
    "license": [""],
    "tags": ["blake2", "blake2s", "blake2b", "crypto", "hash"],
    "downloads": 5382445,
    "repositories": ["crates.io"]
  },
  "rust:blake2s_simd": {
    "coordinates": "rust:blake2s_simd",
    "name": "blake2s_simd",
    "description": "a pure Rust BLAKE2s implementation with dynamic SIMD",
    "license": [""],
    "tags": ["blake2s", "blake2sp", "blake2"],
    "downloads": 6889009,
    "repositories": ["crates.io"]
  },
  "rust:block": {
    "coordinates": "rust:block",
    "name": "block",
    "description": "Rust interface for Apple''s C language extension of blocks.",
    "license": [""],
    "tags": ["osx", "blocks", "ios", "objective-c"],
    "downloads": 8440754,
    "repositories": ["crates.io"]
  },
  "rust:block-sys": {
    "coordinates": "rust:block-sys",
    "name": "block-sys",
    "description": "Raw bindings to Apple''s C language extension of blocks",
    "license": [""],
    "tags": ["blocks", "macos", "ios", "sys", "objective-c"],
    "downloads": 1583551,
    "repositories": ["crates.io"]
  },
  "rust:block2": {
    "coordinates": "rust:block2",
    "name": "block2",
    "description": "Apple''s C language extension of blocks",
    "license": [""],
    "tags": ["ios", "objective-c", "blocks", "macos"],
    "downloads": 1615498,
    "repositories": ["crates.io"]
  },
  "rust:blowfish": {
    "coordinates": "rust:blowfish",
    "name": "blowfish",
    "description": "Blowfish block cipher",
    "license": [""],
    "tags": ["block-cipher", "crypto", "blowfish"],
    "downloads": 6733756,
    "repositories": ["crates.io"]
  },
  "rust:blst": {
    "coordinates": "rust:blst",
    "name": "blst",
    "description": "Bindings for blst BLS12-381 library",
    "license": [""],
    "tags": ["asm", "crypto", "bls", "signature", "wasm"],
    "downloads": 2541264,
    "repositories": ["crates.io"]
  },
  "rust:boa_ast": {
    "coordinates": "rust:boa_ast",
    "name": "boa_ast",
    "description": "Abstract Syntax Tree definition for the Boa JavaScript engine.",
    "license": [""],
    "tags": ["js", "javascript", "syntax", "ast"],
    "downloads": 126800,
    "repositories": ["crates.io"]
  },
  "rust:boa_engine": {
    "coordinates": "rust:boa_engine",
    "name": "boa_engine",
    "description": "Boa is a Javascript lexer, parser and compiler written in Rust. Currently, it has support for some of the language.",
    "license": [""],
    "tags": ["lexer", "js", "parser", "javascript", "compiler"],
    "downloads": 172869,
    "repositories": ["crates.io"]
  },
  "rust:boa_gc": {
    "coordinates": "rust:boa_gc",
    "name": "boa_gc",
    "description": "Garbage collector for the Boa JavaScript engine.",
    "license": [""],
    "tags": ["memory", "garbage", "js", "javascript"],
    "downloads": 172754,
    "repositories": ["crates.io"]
  },
  "rust:boa_interner": {
    "coordinates": "rust:boa_interner",
    "name": "boa_interner",
    "description": "String interner for the Boa JavaScript engine.",
    "license": [""],
    "tags": ["js", "string", "javascript", "interner"],
    "downloads": 173596,
    "repositories": ["crates.io"]
  },
  "rust:boa_macros": {
    "coordinates": "rust:boa_macros",
    "name": "boa_macros",
    "description": "Macros for the Boa JavaScript engine.",
    "license": [""],
    "tags": [],
    "downloads": 127290,
    "repositories": ["crates.io"]
  },
  "rust:boa_parser": {
    "coordinates": "rust:boa_parser",
    "name": "boa_parser",
    "description": "ECMAScript parser for the Boa JavaScript engine.",
    "license": [""],
    "tags": ["js", "parser", "syntax", "javascript"],
    "downloads": 126444,
    "repositories": ["crates.io"]
  },
  "rust:boa_profiler": {
    "coordinates": "rust:boa_profiler",
    "name": "boa_profiler",
    "description": "Profiler for the Boa JavaScript engine.",
    "license": [""],
    "tags": ["js", "profiler", "javascript", "compiler"],
    "downloads": 172786,
    "repositories": ["crates.io"]
  },
  "rust:boilerplate": {
    "coordinates": "rust:boilerplate",
    "name": "boilerplate",
    "description": "Minimal compile-time Rust template engine",
    "license": [""],
    "tags": [],
    "downloads": 38475,
    "repositories": ["crates.io"]
  },
  "rust:boolinator": {
    "coordinates": "rust:boolinator",
    "name": "boolinator",
    "description": "Provides the Boolinator trait, which lets you use Option and Result-style combinators with bools.",
    "license": [""],
    "tags": ["monad", "serious", "combinator", "bool"],
    "downloads": 1600389,
    "repositories": ["crates.io"]
  },
  "rust:bounded-collections": {
    "coordinates": "rust:bounded-collections",
    "name": "bounded-collections",
    "description": "Bounded types and their supporting traits",
    "license": [""],
    "tags": [],
    "downloads": 1859232,
    "repositories": ["crates.io"]
  },
  "rust:boyer-moore-magiclen": {
    "coordinates": "rust:boyer-moore-magiclen",
    "name": "boyer-moore-magiclen",
    "description": "Boyer-Moore-MagicLen, a fast string search algorithm implemented in Rust.",
    "license": [""],
    "tags": [
      "search",
      "quick-search",
      "boyer-moore-magiclen",
      "boyer-moore-horspool",
      "string"
    ],
    "downloads": 85970,
    "repositories": ["crates.io"]
  },
  "rust:bson": {
    "coordinates": "rust:bson",
    "name": "bson",
    "description": "Encoding and decoding support for BSON in Rust",
    "license": [""],
    "tags": ["mongodb", "bson", "deserialization", "serialization", "serde"],
    "downloads": 5940204,
    "repositories": ["crates.io"]
  },
  "rust:btoi": {
    "coordinates": "rust:btoi",
    "name": "btoi",
    "description": "Parse integers directly from ASCII byte slices",
    "license": [""],
    "tags": ["integer", "conversion", "atoi", "no_std"],
    "downloads": 5730041,
    "repositories": ["crates.io"]
  },
  "rust:buddy_system_allocator": {
    "coordinates": "rust:buddy_system_allocator",
    "name": "buddy_system_allocator",
    "description": "A bare metal allocator that uses buddy system.",
    "license": [""],
    "tags": ["heap", "allocator", "no_std"],
    "downloads": 179984,
    "repositories": ["crates.io"]
  },
  "rust:build-helper": {
    "coordinates": "rust:build-helper",
    "name": "build-helper",
    "description": "This crate contains convenience methods for build scripts.",
    "license": [""],
    "tags": [],
    "downloads": 3912365,
    "repositories": ["crates.io"]
  },
  "rust:build-info": {
    "coordinates": "rust:build-info",
    "name": "build-info",
    "description": "Collects build-information of your Rust crate.",
    "license": [""],
    "tags": [],
    "downloads": 388686,
    "repositories": ["crates.io"]
  },
  "rust:built": {
    "coordinates": "rust:built",
    "name": "built",
    "description": "Provides a crate with information from the time it was built.",
    "license": [""],
    "tags": ["build", "cargo"],
    "downloads": 4168369,
    "repositories": ["crates.io"]
  },
  "rust:builtin-psl-connectors": { "name": "builtin-psl-connectors" },
  "rust:bv": {
    "coordinates": "rust:bv",
    "name": "bv",
    "description": "Bit-vectors and bit-slices",
    "license": [""],
    "tags": ["bitvec", "bitvector", "bitset", "bit", "vector"],
    "downloads": 2390639,
    "repositories": ["crates.io"]
  },
  "rust:byte-unit": {
    "coordinates": "rust:byte-unit",
    "name": "byte-unit",
    "description": "A library for interacting with units of bytes.",
    "license": [""],
    "tags": ["mb", "kb", "gb", "byte", "unit"],
    "downloads": 7355103,
    "repositories": ["crates.io"]
  },
  "rust:c-kzg": {
    "coordinates": "rust:c-kzg",
    "name": "c-kzg",
    "description": "A minimal implementation of the Polynomial Commitments API for EIP-4844, written in C.",
    "license": [""],
    "tags": [],
    "downloads": 258018,
    "repositories": ["crates.io"]
  },
  "rust:c2-chacha": {
    "coordinates": "rust:c2-chacha",
    "name": "c2-chacha",
    "description": "The ChaCha family of stream ciphers",
    "license": [""],
    "tags": ["cipher", "chacha", "crypto", "xchacha20", "chacha20"],
    "downloads": 7213307,
    "repositories": ["crates.io"]
  },
  "rust:c_linked_list": {
    "coordinates": "rust:c_linked_list",
    "name": "c_linked_list",
    "description": "Utilities for handling NULL-terminated C linked lists",
    "license": [""],
    "tags": ["linked_list", "ffi"],
    "downloads": 2291540,
    "repositories": ["crates.io"]
  },
  "rust:cacache": {
    "coordinates": "rust:cacache",
    "name": "cacache",
    "description": "Content-addressable, key-value, high-performance, on-disk cache.",
    "license": [""],
    "tags": [],
    "downloads": 376550,
    "repositories": ["crates.io"]
  },
  "rust:cached": {
    "coordinates": "rust:cached",
    "name": "cached",
    "description": "Generic cache implementations and simplified function memoization",
    "license": [""],
    "tags": ["disk", "lru", "memoize", "cache", "redis"],
    "downloads": 7016464,
    "repositories": ["crates.io"]
  },
  "rust:cached_proc_macro": {
    "coordinates": "rust:cached_proc_macro",
    "name": "cached_proc_macro",
    "description": "Generic cache implementations and simplified function memoization",
    "license": [""],
    "tags": ["cache", "memoize", "lru", "caching"],
    "downloads": 6066745,
    "repositories": ["crates.io"]
  },
  "rust:cached_proc_macro_types": {
    "coordinates": "rust:cached_proc_macro_types",
    "name": "cached_proc_macro_types",
    "description": "Generic cache implementations and simplified function memoization",
    "license": [""],
    "tags": ["cache", "memoize", "caching", "lru"],
    "downloads": 5571845,
    "repositories": ["crates.io"]
  },
  "rust:cactus": {
    "coordinates": "rust:cactus",
    "name": "cactus",
    "description": "Immutable parent pointer tree",
    "license": [""],
    "tags": [],
    "downloads": 90634,
    "repositories": ["crates.io"]
  },
  "rust:cairo-rs": {
    "coordinates": "rust:cairo-rs",
    "name": "cairo-rs",
    "description": "Rust bindings for the Cairo library",
    "license": [""],
    "tags": ["gtk-rs", "gui", "gnome", "cairo"],
    "downloads": 4594718,
    "repositories": ["crates.io"]
  },
  "rust:cairo-sys-rs": {
    "coordinates": "rust:cairo-sys-rs",
    "name": "cairo-sys-rs",
    "description": "FFI bindings to libcairo",
    "license": [""],
    "tags": ["gtk-rs", "gnome", "ffi", "cairo"],
    "downloads": 4871127,
    "repositories": ["crates.io"]
  },
  "rust:calloop": {
    "coordinates": "rust:calloop",
    "name": "calloop",
    "description": "A callback-based event loop",
    "license": [""],
    "tags": ["events", "loop", "eventloop", "callback", "unix"],
    "downloads": 5378096,
    "repositories": ["crates.io"]
  },
  "rust:calloop-wayland-source": {
    "coordinates": "rust:calloop-wayland-source",
    "name": "calloop-wayland-source",
    "description": "A wayland-rs client event source for callloop",
    "license": [""],
    "tags": ["wayland", "windowing"],
    "downloads": 527071,
    "repositories": ["crates.io"]
  },
  "rust:candle-core": {
    "coordinates": "rust:candle-core",
    "name": "candle-core",
    "description": "Minimalist ML framework.",
    "license": [""],
    "tags": ["tensor", "blas", "machine-learning"],
    "downloads": 93076,
    "repositories": ["crates.io"]
  },
  "rust:candle-kernels": {
    "coordinates": "rust:candle-kernels",
    "name": "candle-kernels",
    "description": "CUDA kernels for Candle",
    "license": [""],
    "tags": ["tensor", "blas", "machine-learning"],
    "downloads": 23074,
    "repositories": ["crates.io"]
  },
  "rust:candle-nn": {
    "coordinates": "rust:candle-nn",
    "name": "candle-nn",
    "description": "Minimalist ML framework.",
    "license": [""],
    "tags": ["blas", "tensor", "machine-learning"],
    "downloads": 37245,
    "repositories": ["crates.io"]
  },
  "rust:candle-transformers": {
    "coordinates": "rust:candle-transformers",
    "name": "candle-transformers",
    "description": "Minimalist ML framework.",
    "license": [""],
    "tags": ["blas", "tensor", "machine-learning"],
    "downloads": 22090,
    "repositories": ["crates.io"]
  },
  "rust:caps": {
    "coordinates": "rust:caps",
    "name": "caps",
    "description": "A pure-Rust library to work with Linux capabilities",
    "license": [""],
    "tags": ["setcap", "getcap", "linux", "capabilities", "posix"],
    "downloads": 3021441,
    "repositories": ["crates.io"]
  },
  "rust:cards": {
    "coordinates": "rust:cards",
    "name": "cards",
    "description": "Reusable playing cards library for Rust.",
    "license": [""],
    "tags": ["poker", "cards"],
    "downloads": 8709,
    "repositories": ["crates.io"]
  },
  "rust:cargo-generate": {
    "coordinates": "rust:cargo-generate",
    "name": "cargo-generate",
    "description": "cargo, make me a project",
    "license": [""],
    "tags": [],
    "downloads": 789804,
    "repositories": ["crates.io"]
  },
  "rust:cargo-lock": {
    "coordinates": "rust:cargo-lock",
    "name": "cargo-lock",
    "description": "Self-contained Cargo.lock parser with optional dependency graph analysis",
    "license": [""],
    "tags": ["lockfile", "dependency", "lock", "cargo"],
    "downloads": 7222800,
    "repositories": ["crates.io"]
  },
  "rust:cargo-manifest": {
    "coordinates": "rust:cargo-manifest",
    "name": "cargo-manifest",
    "description": "Helper crate to parse and manipulate manifests - `Cargo.toml` files.",
    "license": [""],
    "tags": ["manifest", "metadata", "cargo", "toml", "serde"],
    "downloads": 1369727,
    "repositories": ["crates.io"]
  },
  "rust:cargo-run-wasm": {
    "coordinates": "rust:cargo-run-wasm",
    "name": "cargo-run-wasm",
    "description": "Trivially run wasm applications and examples in the browser",
    "license": [""],
    "tags": ["wasm-bindgen", "serve", "run", "cargo", "wasm"],
    "downloads": 120911,
    "repositories": ["crates.io"]
  },
  "rust:cargo_toml": {
    "coordinates": "rust:cargo_toml",
    "name": "cargo_toml",
    "description": "`Cargo.toml` struct definitions for parsing with Serde",
    "license": [""],
    "tags": ["struct", "schema", "cargo", "metadata", "serde"],
    "downloads": 7334757,
    "repositories": ["crates.io"]
  },
  "rust:casey": {
    "coordinates": "rust:casey",
    "name": "casey",
    "description": "Case transforming macros for ident tokens",
    "license": [""],
    "tags": [],
    "downloads": 116310,
    "repositories": ["crates.io"]
  },
  "rust:cassowary": {
    "coordinates": "rust:cassowary",
    "name": "cassowary",
    "description": "A Rust implementation of the Cassowary linear constraint solving algorithm.  The Cassowary algorithm is designed for naturally laying out user interfaces using linear constraints, like ''this button must line up with this text box''. ",
    "license": [""],
    "tags": ["layout", "user", "interface", "constraint", "simplex"],
    "downloads": 5931961,
    "repositories": ["crates.io"]
  },
  "rust:cbc": {
    "coordinates": "rust:cbc",
    "name": "cbc",
    "description": "Cipher Block Chaining (CBC) block cipher mode of operation",
    "license": [""],
    "tags": ["block-mode", "ciphers", "crypto"],
    "downloads": 6962990,
    "repositories": ["crates.io"]
  },
  "rust:cedarwood": {
    "coordinates": "rust:cedarwood",
    "name": "cedarwood",
    "description": "efficiently-updatable double-array trie in Rust (ported from cedar)",
    "license": [""],
    "tags": ["cedar", "search", "trie", "string", "text"],
    "downloads": 332609,
    "repositories": ["crates.io"]
  },
  "rust:census": {
    "coordinates": "rust:census",
    "name": "census",
    "description": "Keeps an inventory of living objects",
    "license": [""],
    "tags": ["inventory"],
    "downloads": 3111755,
    "repositories": ["crates.io"]
  },
  "rust:cfb": {
    "coordinates": "rust:cfb",
    "name": "cfb",
    "description": "Read/write Compound File Binary (structured storage) files",
    "license": [""],
    "tags": ["cfb", "storage", "structured"],
    "downloads": 6316177,
    "repositories": ["crates.io"]
  },
  "rust:cfb-mode": {
    "coordinates": "rust:cfb-mode",
    "name": "cfb-mode",
    "description": "Cipher Feedback (CFB) block cipher mode of operation",
    "license": [""],
    "tags": ["block-mode", "ciphers", "stream-cipher", "crypto"],
    "downloads": 1781942,
    "repositories": ["crates.io"]
  },
  "rust:cfgrammar": {
    "coordinates": "rust:cfgrammar",
    "name": "cfgrammar",
    "description": "Grammar manipulation",
    "license": [""],
    "tags": ["grammar", "yacc"],
    "downloads": 97960,
    "repositories": ["crates.io"]
  },
  "rust:cgmath": {
    "coordinates": "rust:cgmath",
    "name": "cgmath",
    "description": "A linear algebra and mathematics library for computer graphics.",
    "license": [""],
    "tags": ["gamedev", "math", "quaternion", "vector", "matrix"],
    "downloads": 3329603,
    "repositories": ["crates.io"]
  },
  "rust:chacha": {
    "coordinates": "rust:chacha",
    "name": "chacha",
    "description": "ChaCha stream ciphers",
    "license": [""],
    "tags": [],
    "downloads": 939506,
    "repositories": ["crates.io"]
  },
  "rust:change-detection": {
    "coordinates": "rust:change-detection",
    "name": "change-detection",
    "description": "A library to generate change detection instructions during build time. ",
    "license": [""],
    "tags": [],
    "downloads": 206354,
    "repositories": ["crates.io"]
  },
  "rust:charabia": {
    "coordinates": "rust:charabia",
    "name": "charabia",
    "description": "A simple library to detect the language, tokenize the text and normalize the tokens",
    "license": [""],
    "tags": ["language", "segmenter", "normalize", "tokenizer"],
    "downloads": 207914,
    "repositories": ["crates.io"]
  },
  "rust:chardetng": {
    "coordinates": "rust:chardetng",
    "name": "chardetng",
    "description": "A character encoding detector for legacy Web content",
    "license": [""],
    "tags": ["unicode", "charset", "web", "encoding"],
    "downloads": 400302,
    "repositories": ["crates.io"]
  },
  "rust:charset": {
    "coordinates": "rust:charset",
    "name": "charset",
    "description": "Thunderbird-compatible character encoding decoding for email",
    "license": [""],
    "tags": ["unicode", "utf-7", "email", "charset", "encoding"],
    "downloads": 1646737,
    "repositories": ["crates.io"]
  },
  "rust:chitchat": {
    "coordinates": "rust:chitchat",
    "name": "chitchat",
    "description": "Cluster membership library using gossip with Scuttlebutt reconciliation.",
    "license": [""],
    "tags": [],
    "downloads": 25852,
    "repositories": ["crates.io"]
  },
  "rust:chromiumoxide": {
    "coordinates": "rust:chromiumoxide",
    "name": "chromiumoxide",
    "description": "Library for interacting with a chrome instance with the chrome devtools protocol",
    "license": [""],
    "tags": ["chrome", "chromedriver", "puppeteer", "automation"],
    "downloads": 252933,
    "repositories": ["crates.io"]
  },
  "rust:chromiumoxide_cdp": {
    "coordinates": "rust:chromiumoxide_cdp",
    "name": "chromiumoxide_cdp",
    "description": "Contains all the generated types for chromiumoxide",
    "license": [""],
    "tags": [],
    "downloads": 253049,
    "repositories": ["crates.io"]
  },
  "rust:chromiumoxide_fetcher": {
    "coordinates": "rust:chromiumoxide_fetcher",
    "name": "chromiumoxide_fetcher",
    "description": "Contains a chromium fetcher",
    "license": [""],
    "tags": [],
    "downloads": 3536,
    "repositories": ["crates.io"]
  },
  "rust:chromiumoxide_pdl": {
    "coordinates": "rust:chromiumoxide_pdl",
    "name": "chromiumoxide_pdl",
    "description": "Contains a PDL parser and rust generator",
    "license": [""],
    "tags": [],
    "downloads": 253347,
    "repositories": ["crates.io"]
  },
  "rust:chromiumoxide_types": {
    "coordinates": "rust:chromiumoxide_types",
    "name": "chromiumoxide_types",
    "description": "Contains the essential types necessary for using chromiumoxide",
    "license": [""],
    "tags": [],
    "downloads": 253760,
    "repositories": ["crates.io"]
  },
  "rust:chrono-humanize": {
    "coordinates": "rust:chrono-humanize",
    "name": "chrono-humanize",
    "description": "Human-friendly time expressions - similar to Python arrow.humanize",
    "license": [""],
    "tags": ["time", "chrono", "humanize", "arrow", "date"],
    "downloads": 2764848,
    "repositories": ["crates.io"]
  },
  "rust:chumsky": {
    "coordinates": "rust:chumsky",
    "name": "chumsky",
    "description": "A parser library for humans with powerful error recovery",
    "license": [""],
    "tags": ["combinator", "token", "syntax", "language", "parser"],
    "downloads": 1193114,
    "repositories": ["crates.io"]
  },
  "rust:cid": {
    "coordinates": "rust:cid",
    "name": "cid",
    "description": "CID in rust",
    "license": [""],
    "tags": ["ipld", "multihash", "multiformats", "ipfs", "cid"],
    "downloads": 3862016,
    "repositories": ["crates.io"]
  },
  "rust:cidr-utils": {
    "coordinates": "rust:cidr-utils",
    "name": "cidr-utils",
    "description": "This crate provides functions for working with IPv4 CIDRs and IPv6 CIDRs.",
    "license": [""],
    "tags": ["ipv6", "ipv4", "cidr", "ip"],
    "downloads": 1958162,
    "repositories": ["crates.io"]
  },
  "rust:cityhasher": {
    "coordinates": "rust:cityhasher",
    "name": "cityhasher",
    "description": "A pure Rust implementation of Google''s CityHash hashing algorithm",
    "license": [""],
    "tags": ["cityhash", "hash", "hasher", "hashmap"],
    "downloads": 8622,
    "repositories": ["crates.io"]
  },
  "rust:ckb-merkle-mountain-range": {
    "coordinates": "rust:ckb-merkle-mountain-range",
    "name": "ckb-merkle-mountain-range",
    "description": "A generalized merkle mountain range implementation",
    "license": [""],
    "tags": [],
    "downloads": 2152581,
    "repositories": ["crates.io"]
  },
  "rust:clang-format": {
    "coordinates": "rust:clang-format",
    "name": "clang-format",
    "description": "A basic clang-format Rust wrapper",
    "license": [""],
    "tags": [],
    "downloads": 125066,
    "repositories": ["crates.io"]
  },
  "rust:clap-num": {
    "coordinates": "rust:clap-num",
    "name": "clap-num",
    "description": "Number parsers for clap",
    "license": [""],
    "tags": ["arg", "argument", "parse", "parser", "cli"],
    "downloads": 721200,
    "repositories": ["crates.io"]
  },
  "rust:clap_mangen": {
    "coordinates": "rust:clap_mangen",
    "name": "clap_mangen",
    "description": "A manpage generator for clap",
    "license": [""],
    "tags": ["manpage", "cli", "clap", "generate"],
    "downloads": 1546221,
    "repositories": ["crates.io"]
  },
  "rust:clean-path": {
    "coordinates": "rust:clean-path",
    "name": "clean-path",
    "description": "A safe fork of the `path-clean` crate",
    "license": [""],
    "tags": ["clean", "path"],
    "downloads": 726379,
    "repositories": ["crates.io"]
  },
  "rust:clipboard-win": {
    "coordinates": "rust:clipboard-win",
    "name": "clipboard-win",
    "description": "Provides simple way to interact with Windows clipboard.",
    "license": [""],
    "tags": ["winapi", "clipboard", "windows"],
    "downloads": 6520298,
    "repositories": ["crates.io"]
  },
  "rust:clipboard_macos": {
    "coordinates": "rust:clipboard_macos",
    "name": "clipboard_macos",
    "description": "A library to obtain access to the macOS clipboard",
    "license": [""],
    "tags": ["macos", "clipboard"],
    "downloads": 250816,
    "repositories": ["crates.io"]
  },
  "rust:clipboard_wayland": {
    "coordinates": "rust:clipboard_wayland",
    "name": "clipboard_wayland",
    "description": "A library to obtain access to the clipboard of a Wayland window",
    "license": [""],
    "tags": ["wayland", "clipboard"],
    "downloads": 478048,
    "repositories": ["crates.io"]
  },
  "rust:clipboard_x11": {
    "coordinates": "rust:clipboard_x11",
    "name": "clipboard_x11",
    "description": "A library to obtain access to the X11 clipboard",
    "license": [""],
    "tags": ["x11", "clipboard"],
    "downloads": 492948,
    "repositories": ["crates.io"]
  },
  "rust:cloudevents-sdk": {
    "coordinates": "rust:cloudevents-sdk",
    "name": "cloudevents-sdk",
    "description": "CloudEvents official Rust SDK",
    "license": [""],
    "tags": [],
    "downloads": 201536,
    "repositories": ["crates.io"]
  },
  "rust:clru": {
    "coordinates": "rust:clru",
    "name": "clru",
    "description": "An LRU cache implementation with constant time operations and weighted semantic",
    "license": [""],
    "tags": ["lru", "hashmap", "cache"],
    "downloads": 3438611,
    "repositories": ["crates.io"]
  },
  "rust:coarsetime": {
    "coordinates": "rust:coarsetime",
    "name": "coarsetime",
    "description": "Time and duration crate optimized for speed",
    "license": [""],
    "tags": ["duration", "time", "date"],
    "downloads": 3837451,
    "repositories": ["crates.io"]
  },
  "rust:cobs": {
    "coordinates": "rust:cobs",
    "name": "cobs",
    "description": "    This is an implementation of the Consistent Overhead Byte Stuffing (COBS) algorithm.     COBS is an algorithm for transforming a message into an encoding where a specific value     (the \"sentinel\" value) is not used. This value can then be used to mark frame boundaries     in a serial communication channel. ",
    "license": [""],
    "tags": ["stuffing", "consistent", "overhead", "byte"],
    "downloads": 2472792,
    "repositories": ["crates.io"]
  },
  "rust:cocoa": {
    "coordinates": "rust:cocoa",
    "name": "cocoa",
    "description": "Bindings to Cocoa for macOS",
    "license": [""],
    "tags": [],
    "downloads": 5989437,
    "repositories": ["crates.io"]
  },
  "rust:cocoa-foundation": {
    "coordinates": "rust:cocoa-foundation",
    "name": "cocoa-foundation",
    "description": "Bindings to Cocoa Foundation for macOS",
    "license": [""],
    "tags": [],
    "downloads": 3632387,
    "repositories": ["crates.io"]
  },
  "rust:coins-bip32": {
    "coordinates": "rust:coins-bip32",
    "name": "coins-bip32",
    "description": "Bip32 in Rust",
    "license": [""],
    "tags": [],
    "downloads": 2412829,
    "repositories": ["crates.io"]
  },
  "rust:coins-bip39": {
    "coordinates": "rust:coins-bip39",
    "name": "coins-bip39",
    "description": "Bip39 in Rust",
    "license": [""],
    "tags": [],
    "downloads": 2430118,
    "repositories": ["crates.io"]
  },
  "rust:coins-core": {
    "coordinates": "rust:coins-core",
    "name": "coins-core",
    "description": "Core library for coins-bip32 and coins-bip39",
    "license": [""],
    "tags": [],
    "downloads": 2407766,
    "repositories": ["crates.io"]
  },
  "rust:collection_literals": {
    "coordinates": "rust:collection_literals",
    "name": "collection_literals",
    "description": "Easy-to-use macros for initializing std::collections",
    "license": [""],
    "tags": [],
    "downloads": 1361811,
    "repositories": ["crates.io"]
  },
  "rust:color-spantrace": {
    "coordinates": "rust:color-spantrace",
    "name": "color-spantrace",
    "description": "A pretty printer for tracing_error::SpanTrace based on color-backtrace",
    "license": [""],
    "tags": [],
    "downloads": 7106958,
    "repositories": ["crates.io"]
  },
  "rust:colorful": {
    "coordinates": "rust:colorful",
    "name": "colorful",
    "description": "Make your terminal output colorful",
    "license": [""],
    "tags": ["cli", "colors", "terminal"],
    "downloads": 1255393,
    "repositories": ["crates.io"]
  },
  "rust:com": {
    "coordinates": "rust:com",
    "name": "com",
    "description": "Utilities for implementing COM Client and Servers ",
    "license": [""],
    "tags": ["com", "windows", "ffi"],
    "downloads": 517177,
    "repositories": ["crates.io"]
  },
  "rust:com_macros": {
    "coordinates": "rust:com_macros",
    "name": "com_macros",
    "description": "COM crate macros ",
    "license": [""],
    "tags": ["macros", "com", "windows", "ffi"],
    "downloads": 492779,
    "repositories": ["crates.io"]
  },
  "rust:com_macros_support": {
    "coordinates": "rust:com_macros_support",
    "name": "com_macros_support",
    "description": "Support library for COM crate macros ",
    "license": [""],
    "tags": ["macros", "com", "windows", "ffi"],
    "downloads": 492470,
    "repositories": ["crates.io"]
  },
  "rust:common": {
    "coordinates": "rust:common",
    "name": "common",
    "description": "this is buffett common lib",
    "license": [""],
    "tags": [],
    "downloads": 3453,
    "repositories": ["crates.io"]
  },
  "rust:common-path": {
    "coordinates": "rust:common-path",
    "name": "common-path",
    "description": "Finds the common prefix between a set of paths ",
    "license": [""],
    "tags": [],
    "downloads": 2530517,
    "repositories": ["crates.io"]
  },
  "rust:common_enums": { "name": "common_enums" },
  "rust:common_utils": { "name": "common_utils" },
  "rust:community-id": {
    "coordinates": "rust:community-id",
    "name": "community-id",
    "description": "This package provides a Rust implementation of the open Community ID flow hashing standard.",
    "license": [""],
    "tags": ["flow", "community-id", "network", "hash"],
    "downloads": 82833,
    "repositories": ["crates.io"]
  },
  "rust:concat-arrays": {
    "coordinates": "rust:concat-arrays",
    "name": "concat-arrays",
    "description": "A macro for concatenating fixed-size arrays",
    "license": [""],
    "tags": ["array", "macro"],
    "downloads": 220648,
    "repositories": ["crates.io"]
  },
  "rust:concat-kdf": {
    "coordinates": "rust:concat-kdf",
    "name": "concat-kdf",
    "description": "Concatenation Key Derivation Function (Concat KDF)",
    "license": [""],
    "tags": ["crypto", "nist", "kdf", "concat-kdf"],
    "downloads": 39604,
    "repositories": ["crates.io"]
  },
  "rust:condtype": {
    "coordinates": "rust:condtype",
    "name": "condtype",
    "description": "Choose types at compile-time via boolean constants.",
    "license": [""],
    "tags": ["depend", "type", "boolean", "condition", "const"],
    "downloads": 82216,
    "repositories": ["crates.io"]
  },
  "rust:conduit-api": { "name": "conduit-api" },
  "rust:conduit-bin": { "name": "conduit-bin" },
  "rust:conduit-core": { "name": "conduit-core" },
  "rust:conduit-domain": { "name": "conduit-domain" },
  "rust:conduit-infrastructure": { "name": "conduit-infrastructure" },
  "rust:conduit-web": { "name": "conduit-web" },
  "rust:confy": {
    "coordinates": "rust:confy",
    "name": "confy",
    "description": "Boilerplate-free configuration management",
    "license": [""],
    "tags": [],
    "downloads": 950450,
    "repositories": ["crates.io"]
  },
  "rust:connection-string": {
    "coordinates": "rust:connection-string",
    "name": "connection-string",
    "description": "Connection string parsing in Rust (and WebAssembly)",
    "license": [""],
    "tags": [],
    "downloads": 2287897,
    "repositories": ["crates.io"]
  },
  "rust:connector_configs": { "name": "connector_configs" },
  "rust:console-api": {
    "coordinates": "rust:console-api",
    "name": "console-api",
    "description": "Protobuf wire format bindings for the Tokio console. ",
    "license": [""],
    "tags": ["tokio-console", "tonic", "tracing", "debugging", "async"],
    "downloads": 5136555,
    "repositories": ["crates.io"]
  },
  "rust:console-subscriber": {
    "coordinates": "rust:console-subscriber",
    "name": "console-subscriber",
    "description": "A `tracing-subscriber::Layer` for collecting Tokio console telemetry. ",
    "license": [""],
    "tags": [
      "tokio-console",
      "tracing",
      "debugging",
      "tracing-subscriber",
      "async"
    ],
    "downloads": 5105322,
    "repositories": ["crates.io"]
  },
  "rust:console_log": {
    "coordinates": "rust:console_log",
    "name": "console_log",
    "description": "A logging facility that routes Rust log messages to the browser''s console.",
    "license": [""],
    "tags": ["console", "web_sys", "wasm", "log", "logging"],
    "downloads": 4388979,
    "repositories": ["crates.io"]
  },
  "rust:const-hex": {
    "coordinates": "rust:const-hex",
    "name": "const-hex",
    "description": "Fast byte array to hex string conversion",
    "license": [""],
    "tags": ["hex", "fmt", "bytes"],
    "downloads": 1880813,
    "repositories": ["crates.io"]
  },
  "rust:const-str": {
    "coordinates": "rust:const-str",
    "name": "const-str",
    "description": "compile-time string operations",
    "license": [""],
    "tags": ["const", "proc-macro", "string"],
    "downloads": 2345193,
    "repositories": ["crates.io"]
  },
  "rust:const-str-proc-macro": {
    "coordinates": "rust:const-str-proc-macro",
    "name": "const-str-proc-macro",
    "description": "compile-time string operations",
    "license": [""],
    "tags": ["const", "proc-macro", "string"],
    "downloads": 406869,
    "repositories": ["crates.io"]
  },
  "rust:constcat": {
    "coordinates": "rust:constcat",
    "name": "constcat",
    "description": "concat! with support for const variables and expressions",
    "license": [""],
    "tags": ["concat", "const"],
    "downloads": 1133684,
    "repositories": ["crates.io"]
  },
  "rust:content_inspector": {
    "coordinates": "rust:content_inspector",
    "name": "content_inspector",
    "description": "Fast inspection of binary buffers to guess/determine the encoding",
    "license": [""],
    "tags": ["unicode", "library", "encoding", "text", "binary"],
    "downloads": 2711549,
    "repositories": ["crates.io"]
  },
  "rust:conventional_commit_parser": {
    "coordinates": "rust:conventional_commit_parser",
    "name": "conventional_commit_parser",
    "description": "A rust implementation of the conventional commit specification. ",
    "license": [""],
    "tags": [],
    "downloads": 106473,
    "repositories": ["crates.io"]
  },
  "rust:cookie-factory": {
    "coordinates": "rust:cookie-factory",
    "name": "cookie-factory",
    "description": "nom inspired serialization library",
    "license": [""],
    "tags": ["encoding", "nom", "serialization"],
    "downloads": 4558905,
    "repositories": ["crates.io"]
  },
  "rust:core-graphics": {
    "coordinates": "rust:core-graphics",
    "name": "core-graphics",
    "description": "Bindings to Core Graphics for macOS",
    "license": [""],
    "tags": [],
    "downloads": 8659222,
    "repositories": ["crates.io"]
  },
  "rust:core-graphics-types": {
    "coordinates": "rust:core-graphics-types",
    "name": "core-graphics-types",
    "description": "Bindings for some fundamental Core Graphics types",
    "license": [""],
    "tags": [],
    "downloads": 5485004,
    "repositories": ["crates.io"]
  },
  "rust:core2": {
    "coordinates": "rust:core2",
    "name": "core2",
    "description": "The bare essentials of std::io for use in no_std. Alloc support is optional.",
    "license": [""],
    "tags": [],
    "downloads": 6949524,
    "repositories": ["crates.io"]
  },
  "rust:core_affinity": {
    "coordinates": "rust:core_affinity",
    "name": "core_affinity",
    "description": "Manages CPU affinities",
    "license": [""],
    "tags": ["cpu", "thread-affinity", "affinity", "core"],
    "downloads": 2563373,
    "repositories": ["crates.io"]
  },
  "rust:coreaudio-rs": {
    "coordinates": "rust:coreaudio-rs",
    "name": "coreaudio-rs",
    "description": "A friendly rust interface for Apple''s CoreAudio API.",
    "license": [""],
    "tags": ["osx", "ios", "unit", "core", "audio"],
    "downloads": 1746387,
    "repositories": ["crates.io"]
  },
  "rust:coreaudio-sys": {
    "coordinates": "rust:coreaudio-sys",
    "name": "coreaudio-sys",
    "description": "Bindings for Apple''s CoreAudio frameworks generated via rust-bindgen",
    "license": [""],
    "tags": ["osx", "ios", "unit", "audio", "core"],
    "downloads": 2046731,
    "repositories": ["crates.io"]
  },
  "rust:cortex-m": {
    "coordinates": "rust:cortex-m",
    "name": "cortex-m",
    "description": "Low level access to Cortex-M processors",
    "license": [""],
    "tags": ["register", "peripheral", "arm", "cortex-m"],
    "downloads": 4838630,
    "repositories": ["crates.io"]
  },
  "rust:cortex-m-rt": {
    "coordinates": "rust:cortex-m-rt",
    "name": "cortex-m-rt",
    "description": "Minimal runtime / startup for Cortex-M microcontrollers",
    "license": [""],
    "tags": ["arm", "startup", "cortex-m", "runtime"],
    "downloads": 2251629,
    "repositories": ["crates.io"]
  },
  "rust:cortex-m-rt-macros": {
    "coordinates": "rust:cortex-m-rt-macros",
    "name": "cortex-m-rt-macros",
    "description": "Attributes re-exported in `cortex-m-rt`",
    "license": [""],
    "tags": ["startup", "runtime", "cortex-m", "arm"],
    "downloads": 2033192,
    "repositories": ["crates.io"]
  },
  "rust:cosmic-text": {
    "coordinates": "rust:cosmic-text",
    "name": "cosmic-text",
    "description": "Pure Rust multi-line text handling",
    "license": [""],
    "tags": [],
    "downloads": 225073,
    "repositories": ["crates.io"]
  },
  "rust:cov-mark": {
    "coordinates": "rust:cov-mark",
    "name": "cov-mark",
    "description": "Manual coverage marks.",
    "license": [""],
    "tags": ["coverage", "test"],
    "downloads": 2087988,
    "repositories": ["crates.io"]
  },
  "rust:cow-utils": {
    "coordinates": "rust:cow-utils",
    "name": "cow-utils",
    "description": "Copy-on-write string utilities for Rust",
    "license": [""],
    "tags": ["string", "cow", "text", "str"],
    "downloads": 464696,
    "repositories": ["crates.io"]
  },
  "rust:cpal": {
    "coordinates": "rust:cpal",
    "name": "cpal",
    "description": "Low-level cross-platform audio I/O library in pure Rust.",
    "license": [""],
    "tags": ["sound", "audio"],
    "downloads": 3768983,
    "repositories": ["crates.io"]
  },
  "rust:cranelift-isle": {
    "coordinates": "rust:cranelift-isle",
    "name": "cranelift-isle",
    "description": "ISLE: Instruction Selection and Lowering Expressions. A domain-specific language for instruction selection in Cranelift.",
    "license": [""],
    "tags": [],
    "downloads": 5757903,
    "repositories": ["crates.io"]
  },
  "rust:cranelift-native": {
    "coordinates": "rust:cranelift-native",
    "name": "cranelift-native",
    "description": "Support for targeting the host with Cranelift",
    "license": [""],
    "tags": [],
    "downloads": 7623234,
    "repositories": ["crates.io"]
  },
  "rust:cranelift-wasm": {
    "coordinates": "rust:cranelift-wasm",
    "name": "cranelift-wasm",
    "description": "Translator from WebAssembly to Cranelift IR",
    "license": [""],
    "tags": ["webassembly", "wasm"],
    "downloads": 6761141,
    "repositories": ["crates.io"]
  },
  "rust:crc16": {
    "coordinates": "rust:crc16",
    "name": "crc16",
    "description": "A CRC16 implementation",
    "license": [""],
    "tags": ["crc", "crc16", "checksum", "hash", "no_std"],
    "downloads": 5503993,
    "repositories": ["crates.io"]
  },
  "rust:crc32c": {
    "coordinates": "rust:crc32c",
    "name": "crc32c",
    "description": "Safe implementation for hardware accelerated CRC32C instructions with software fallback",
    "license": [""],
    "tags": ["crc", "simd"],
    "downloads": 9550260,
    "repositories": ["crates.io"]
  },
  "rust:criterion-stats": {
    "coordinates": "rust:criterion-stats",
    "name": "criterion-stats",
    "description": "Criterion''s statistics library",
    "license": [""],
    "tags": ["criterion", "statistics", "stats"],
    "downloads": 540449,
    "repositories": ["crates.io"]
  },
  "rust:critical-section": {
    "coordinates": "rust:critical-section",
    "name": "critical-section",
    "description": "Cross-platform critical section",
    "license": [""],
    "tags": [],
    "downloads": 6459049,
    "repositories": ["crates.io"]
  },
  "rust:cron": {
    "coordinates": "rust:cron",
    "name": "cron",
    "description": "A cron expression parser and schedule explorer.",
    "license": [""],
    "tags": ["cron", "periodic", "repeat", "schedule", "time"],
    "downloads": 1820873,
    "repositories": ["crates.io"]
  },
  "rust:crossterm_winapi": {
    "coordinates": "rust:crossterm_winapi",
    "name": "crossterm_winapi",
    "description": "WinAPI wrapper that provides some basic simple abstractions around common WinAPI calls",
    "license": [""],
    "tags": ["screen_buffer", "abstractions", "windows", "winapi", "crossterm"],
    "downloads": 9072731,
    "repositories": ["crates.io"]
  },
  "rust:crypto_secretbox": {
    "coordinates": "rust:crypto_secretbox",
    "name": "crypto_secretbox",
    "description": "Pure Rust implementation of the XSalsa20Poly1305 (a.k.a. NaCl crypto_secretbox) authenticated encryption cipher as well as the libsodium variant of XChaCha20Poly1305 ",
    "license": [""],
    "tags": ["xsalsa20", "salsa20", "poly1305", "aead", "nacl"],
    "downloads": 351789,
    "repositories": ["crates.io"]
  },
  "rust:cssparser": {
    "coordinates": "rust:cssparser",
    "name": "cssparser",
    "description": "Rust implementation of CSS Syntax Level 3",
    "license": [""],
    "tags": ["syntax", "parser", "css"],
    "downloads": 7276376,
    "repositories": ["crates.io"]
  },
  "rust:cssparser-color": {
    "coordinates": "rust:cssparser-color",
    "name": "cssparser-color",
    "description": "Color implementation based on cssparser",
    "license": [""],
    "tags": [],
    "downloads": 156923,
    "repositories": ["crates.io"]
  },
  "rust:cssparser-macros": {
    "coordinates": "rust:cssparser-macros",
    "name": "cssparser-macros",
    "description": "Procedural macros for cssparser",
    "license": [""],
    "tags": [],
    "downloads": 6668897,
    "repositories": ["crates.io"]
  },
  "rust:cuckoofilter": {
    "coordinates": "rust:cuckoofilter",
    "name": "cuckoofilter",
    "description": "Cuckoo Filter: Practically Better Than Bloom",
    "license": [""],
    "tags": ["cuckoohashing", "cuckoofilter", "bloomfilter"],
    "downloads": 2390079,
    "repositories": ["crates.io"]
  },
  "rust:cudarc": {
    "coordinates": "rust:cudarc",
    "name": "cudarc",
    "description": "Safe wrappers around CUDA apis",
    "license": [""],
    "tags": ["nvrtc", "nvidia", "gpu", "cuda", "cublas"],
    "downloads": 113502,
    "repositories": ["crates.io"]
  },
  "rust:cuid": {
    "coordinates": "rust:cuid",
    "name": "cuid",
    "description": "An ipmlementation of CUID protocol in rust",
    "license": [""],
    "tags": [],
    "downloads": 391119,
    "repositories": ["crates.io"]
  },
  "rust:cuid-util": {
    "coordinates": "rust:cuid-util",
    "name": "cuid-util",
    "description": "Shared utilities for the cuid and cuid2 crates",
    "license": [""],
    "tags": [],
    "downloads": 119015,
    "repositories": ["crates.io"]
  },
  "rust:cuid2": {
    "coordinates": "rust:cuid2",
    "name": "cuid2",
    "description": "An implementation of the CUID2 protocol in rust",
    "license": [""],
    "tags": [],
    "downloads": 174411,
    "repositories": ["crates.io"]
  },
  "rust:currency_conversion": { "name": "currency_conversion" },
  "rust:cursor-icon": {
    "coordinates": "rust:cursor-icon",
    "name": "cursor-icon",
    "description": "Cross platform cursor icon type",
    "license": [""],
    "tags": ["cursor", "windowing"],
    "downloads": 890490,
    "repositories": ["crates.io"]
  },
  "rust:curve25519-dalek-derive": {
    "coordinates": "rust:curve25519-dalek-derive",
    "name": "curve25519-dalek-derive",
    "description": "curve25519-dalek Derives",
    "license": [""],
    "tags": [],
    "downloads": 7061859,
    "repositories": ["crates.io"]
  },
  "rust:cvt": {
    "coordinates": "rust:cvt",
    "name": "cvt",
    "description": "Expose the cvt function from Rust libstd.",
    "license": [""],
    "tags": [],
    "downloads": 2071355,
    "repositories": ["crates.io"]
  },
  "rust:cxx-gen": {
    "coordinates": "rust:cxx-gen",
    "name": "cxx-gen",
    "description": "C++ code generator for integrating `cxx` crate into higher level tools.",
    "license": [""],
    "tags": ["ffi"],
    "downloads": 856989,
    "repositories": ["crates.io"]
  },
  "rust:d3d12": {
    "coordinates": "rust:d3d12",
    "name": "d3d12",
    "description": "Low level D3D12 API wrapper",
    "license": [""],
    "tags": ["windows", "graphics"],
    "downloads": 1959313,
    "repositories": ["crates.io"]
  },
  "rust:dark-light": {
    "coordinates": "rust:dark-light",
    "name": "dark-light",
    "description": "Detect if dark mode or light mode is enabled",
    "license": [""],
    "tags": [],
    "downloads": 515281,
    "repositories": ["crates.io"]
  },
  "rust:dary_heap": {
    "coordinates": "rust:dary_heap",
    "name": "dary_heap",
    "description": "A d-ary heap",
    "license": [""],
    "tags": ["heap", "priority-queue", "no_std"],
    "downloads": 1207005,
    "repositories": ["crates.io"]
  },
  "rust:dasp_sample": {
    "coordinates": "rust:dasp_sample",
    "name": "dasp_sample",
    "description": "An abstraction for audio PCM DSP samples, along with useful conversions and operations.",
    "license": [""],
    "tags": ["bit-depth", "audio", "sample", "dsp", "pcm"],
    "downloads": 2249218,
    "repositories": ["crates.io"]
  },
  "rust:data-encoding-macro": {
    "coordinates": "rust:data-encoding-macro",
    "name": "data-encoding-macro",
    "description": "Macros for data-encoding",
    "license": [""],
    "tags": ["base64", "macro", "no_std", "base32", "hex"],
    "downloads": 6979168,
    "repositories": ["crates.io"]
  },
  "rust:data-encoding-macro-internal": {
    "coordinates": "rust:data-encoding-macro-internal",
    "name": "data-encoding-macro-internal",
    "description": "Internal library for data-encoding-macro",
    "license": [""],
    "tags": [],
    "downloads": 6973897,
    "repositories": ["crates.io"]
  },
  "rust:data-url": {
    "coordinates": "rust:data-url",
    "name": "data-url",
    "description": "Processing of data: URL according to WHATWG’s Fetch Standard",
    "license": [""],
    "tags": [],
    "downloads": 4300078,
    "repositories": ["crates.io"]
  },
  "rust:data_models": {
    "coordinates": "rust:data_models",
    "name": "data_models",
    "description": "This library is used to lookup the sizes of various C-types of historical data models.",
    "license": [""],
    "tags": [],
    "downloads": 2116,
    "repositories": ["crates.io"]
  },
  "rust:datafusion": {
    "coordinates": "rust:datafusion",
    "name": "datafusion",
    "description": "DataFusion is an in-memory query engine that uses Apache Arrow as the memory model",
    "license": [""],
    "tags": ["query", "arrow", "sql"],
    "downloads": 1300933,
    "repositories": ["crates.io"]
  },
  "rust:datafusion-common": {
    "coordinates": "rust:datafusion-common",
    "name": "datafusion-common",
    "description": "Common functionality for DataFusion query engine",
    "license": [""],
    "tags": ["arrow", "query", "sql"],
    "downloads": 1247464,
    "repositories": ["crates.io"]
  },
  "rust:datafusion-execution": {
    "coordinates": "rust:datafusion-execution",
    "name": "datafusion-execution",
    "description": "Execution configuration support for DataFusion query engine",
    "license": [""],
    "tags": ["arrow", "query", "sql"],
    "downloads": 1062122,
    "repositories": ["crates.io"]
  },
  "rust:datafusion-expr": {
    "coordinates": "rust:datafusion-expr",
    "name": "datafusion-expr",
    "description": "Logical plan and expression representation for DataFusion query engine",
    "license": [""],
    "tags": ["expressions", "logical", "plan", "datafusion"],
    "downloads": 1244232,
    "repositories": ["crates.io"]
  },
  "rust:datafusion-functions": {
    "coordinates": "rust:datafusion-functions",
    "name": "datafusion-functions",
    "description": "Function packages for the DataFusion query engine",
    "license": [""],
    "tags": ["expressions", "logical", "plan", "datafusion"],
    "downloads": 85807,
    "repositories": ["crates.io"]
  },
  "rust:datafusion-functions-array": {
    "coordinates": "rust:datafusion-functions-array",
    "name": "datafusion-functions-array",
    "description": "Array Function packages for the DataFusion query engine",
    "license": [""],
    "tags": ["expressions", "logical", "plan", "datafusion"],
    "downloads": 56566,
    "repositories": ["crates.io"]
  },
  "rust:datafusion-optimizer": {
    "coordinates": "rust:datafusion-optimizer",
    "name": "datafusion-optimizer",
    "description": "DataFusion Query Optimizer",
    "license": [""],
    "tags": ["optimizer", "query", "datafusion"],
    "downloads": 1222779,
    "repositories": ["crates.io"]
  },
  "rust:datafusion-physical-expr": {
    "coordinates": "rust:datafusion-physical-expr",
    "name": "datafusion-physical-expr",
    "description": "Physical expression implementation for DataFusion query engine",
    "license": [""],
    "tags": ["arrow", "query", "sql"],
    "downloads": 1230280,
    "repositories": ["crates.io"]
  },
  "rust:datafusion-physical-plan": {
    "coordinates": "rust:datafusion-physical-plan",
    "name": "datafusion-physical-plan",
    "description": "Physical (ExecutionPlan) implementations for DataFusion query engine",
    "license": [""],
    "tags": ["query", "arrow", "sql"],
    "downloads": 701859,
    "repositories": ["crates.io"]
  },
  "rust:datafusion-sql": {
    "coordinates": "rust:datafusion-sql",
    "name": "datafusion-sql",
    "description": "DataFusion SQL Query Planner",
    "license": [""],
    "tags": ["planner", "sql", "datafusion", "parser"],
    "downloads": 1204844,
    "repositories": ["crates.io"]
  },
  "rust:datamodel-renderer": { "name": "datamodel-renderer" },
  "rust:dconf_rs": {
    "coordinates": "rust:dconf_rs",
    "name": "dconf_rs",
    "description": "A Rust API for interacting with dconf.",
    "license": [""],
    "tags": [],
    "downloads": 444753,
    "repositories": ["crates.io"]
  },
  "rust:deadpool-runtime": {
    "coordinates": "rust:deadpool-runtime",
    "name": "deadpool-runtime",
    "description": "Dead simple async pool utitities for sync managers",
    "license": [""],
    "tags": ["database", "sync", "pool", "utils", "async"],
    "downloads": 8891922,
    "repositories": ["crates.io"]
  },
  "rust:debug-helper": {
    "coordinates": "rust:debug-helper",
    "name": "debug-helper",
    "description": "This crate provides declarative macros to help you implement the `Debug` trait manually.",
    "license": [""],
    "tags": ["declarative", "macro", "format", "debug", "trait"],
    "downloads": 2881933,
    "repositories": ["crates.io"]
  },
  "rust:delay_map": {
    "coordinates": "rust:delay_map",
    "name": "delay_map",
    "description": "HashMap collections whose entries expire after a given time",
    "license": [""],
    "tags": ["delayqueue", "delay", "hashset", "collections", "hashmap"],
    "downloads": 378910,
    "repositories": ["crates.io"]
  },
  "rust:delegate-attr": {
    "coordinates": "rust:delegate-attr",
    "name": "delegate-attr",
    "description": "Attribute proc-macro to delegate method to a field",
    "license": [""],
    "tags": ["delegate"],
    "downloads": 551294,
    "repositories": ["crates.io"]
  },
  "rust:derivation-path": {
    "coordinates": "rust:derivation-path",
    "name": "derivation-path",
    "description": "Simple struct for dealing with BIP32/44/49 derivation paths",
    "license": [""],
    "tags": ["bip49", "bip44", "bip32", "blockchain", "derivation"],
    "downloads": 2169823,
    "repositories": ["crates.io"]
  },
  "rust:derive-hex": {
    "coordinates": "rust:derive-hex",
    "name": "derive-hex",
    "description": "A simple companion macro for dusk-bytes crate",
    "license": [""],
    "tags": ["no_std", "hex", "formatting"],
    "downloads": 71877,
    "repositories": ["crates.io"]
  },
  "rust:derive-new": {
    "coordinates": "rust:derive-new",
    "name": "derive-new",
    "description": "`#[derive(new)]` implements simple constructor functions for structs and enums.",
    "license": [""],
    "tags": [],
    "downloads": 7160771,
    "repositories": ["crates.io"]
  },
  "rust:derive-syn-parse": {
    "coordinates": "rust:derive-syn-parse",
    "name": "derive-syn-parse",
    "description": "Derive macro for `syn::parse::Parse`",
    "license": [""],
    "tags": [],
    "downloads": 2525819,
    "repositories": ["crates.io"]
  },
  "rust:derive-where": {
    "coordinates": "rust:derive-where",
    "name": "derive-where",
    "description": "Deriving with custom trait bounds",
    "license": [""],
    "tags": ["macro", "derive"],
    "downloads": 1875044,
    "repositories": ["crates.io"]
  },
  "rust:derive_arbitrary": {
    "coordinates": "rust:derive_arbitrary",
    "name": "derive_arbitrary",
    "description": "Derives arbitrary traits",
    "license": [""],
    "tags": ["macro", "testing", "derive", "arbitrary"],
    "downloads": 5380297,
    "repositories": ["crates.io"]
  },
  "rust:derive_deref": {
    "coordinates": "rust:derive_deref",
    "name": "derive_deref",
    "description": "Adds `#[derive(Deref)]` and `#[derive(DerefMut)]`",
    "license": [""],
    "tags": ["deref", "derive"],
    "downloads": 1005261,
    "repositories": ["crates.io"]
  },
  "rust:deserr": {
    "coordinates": "rust:deserr",
    "name": "deserr",
    "description": "Deserialization library with focus on error handling",
    "license": [""],
    "tags": ["deserialization", "error"],
    "downloads": 126807,
    "repositories": ["crates.io"]
  },
  "rust:deserr-internal": {
    "coordinates": "rust:deserr-internal",
    "name": "deserr-internal",
    "description": "Derive macros for Deserr. Use the re-exports from the deserr crate instead.",
    "license": [""],
    "tags": [],
    "downloads": 126653,
    "repositories": ["crates.io"]
  },
  "rust:detect-desktop-environment": {
    "coordinates": "rust:detect-desktop-environment",
    "name": "detect-desktop-environment",
    "description": "Autodetect the desktop environment",
    "license": [""],
    "tags": ["desktop-environment", "detect", "env"],
    "downloads": 443323,
    "repositories": ["crates.io"]
  },
  "rust:devise": {
    "coordinates": "rust:devise",
    "name": "devise",
    "description": "A library for devising derives and other procedural macros.",
    "license": [""],
    "tags": [],
    "downloads": 4037291,
    "repositories": ["crates.io"]
  },
  "rust:devise_codegen": {
    "coordinates": "rust:devise_codegen",
    "name": "devise_codegen",
    "description": "A library for devising derives and other procedural macros.",
    "license": [""],
    "tags": [],
    "downloads": 4049870,
    "repositories": ["crates.io"]
  },
  "rust:devise_core": {
    "coordinates": "rust:devise_core",
    "name": "devise_core",
    "description": "A library for devising derives and other procedural macros.",
    "license": [""],
    "tags": [],
    "downloads": 4044192,
    "repositories": ["crates.io"]
  },
  "rust:devserver_lib": {
    "coordinates": "rust:devserver_lib",
    "name": "devserver_lib",
    "description": "A zero configuration library for hosting a local folder via https. Refer to ''devserver'' for the command line tool.",
    "license": [""],
    "tags": ["https", "web", "http", "server"],
    "downloads": 141525,
    "repositories": ["crates.io"]
  },
  "rust:diagnostics": {
    "coordinates": "rust:diagnostics",
    "name": "diagnostics",
    "description": "Exports a set of diagnostic macros which can be useful for inspecting the value of various expressions in your code at runtime.",
    "license": [""],
    "tags": [],
    "downloads": 1498,
    "repositories": ["crates.io"]
  },
  "rust:diesel": {
    "coordinates": "rust:diesel",
    "name": "diesel",
    "description": "A safe, extensible ORM and Query Builder for PostgreSQL, SQLite, and MySQL",
    "license": [""],
    "tags": ["sql", "orm", "database"],
    "downloads": 9577321,
    "repositories": ["crates.io"]
  },
  "rust:diesel_models": { "name": "diesel_models" },
  "rust:diesel_table_macro_syntax": {
    "coordinates": "rust:diesel_table_macro_syntax",
    "name": "diesel_table_macro_syntax",
    "description": "Internal diesel crate",
    "license": [""],
    "tags": [],
    "downloads": 2111116,
    "repositories": ["crates.io"]
  },
  "rust:digits_iterator": {
    "coordinates": "rust:digits_iterator",
    "name": "digits_iterator",
    "description": "Iterate over the digits of numbers in an arbitrary radix",
    "license": [""],
    "tags": ["integer", "digits", "number", "iterator", "radix"],
    "downloads": 233694,
    "repositories": ["crates.io"]
  },
  "rust:diligent-date-parser": {
    "coordinates": "rust:diligent-date-parser",
    "name": "diligent-date-parser",
    "description": "Library for parsing datetime in unknown format",
    "license": [""],
    "tags": ["parser", "date", "parsing", "datetime"],
    "downloads": 332296,
    "repositories": ["crates.io"]
  },
  "rust:dioxus": {
    "coordinates": "rust:dioxus",
    "name": "dioxus",
    "description": "Portable, performant, and ergonomic framework for building cross-platform user interfaces in Rust",
    "license": [""],
    "tags": ["dom", "react", "gui", "ui", "wasm"],
    "downloads": 167642,
    "repositories": ["crates.io"]
  },
  "rust:dioxus-core": {
    "coordinates": "rust:dioxus-core",
    "name": "dioxus-core",
    "description": "Core functionality for Dioxus - a concurrent renderer-agnostic Virtual DOM for interactive user experiences",
    "license": [""],
    "tags": ["dom", "react", "gui", "ui"],
    "downloads": 187952,
    "repositories": ["crates.io"]
  },
  "rust:dioxus-debug-cell": {
    "coordinates": "rust:dioxus-debug-cell",
    "name": "dioxus-debug-cell",
    "description": "A clone of the standard library''s `RefCell` type with extra debugging support in non-release builds. Whenever a borrow error happens the current locations of where known borrows were created will be printed out as well. ",
    "license": [""],
    "tags": [],
    "downloads": 99923,
    "repositories": ["crates.io"]
  },
  "rust:dioxus-logger": {
    "coordinates": "rust:dioxus-logger",
    "name": "dioxus-logger",
    "description": "A logging utility to provide a standard interface whether you''re targetting web desktop, fullstack, and more.",
    "license": [""],
    "tags": ["dioxus", "log", "logging"],
    "downloads": 21930,
    "repositories": ["crates.io"]
  },
  "rust:dioxus-router": {
    "coordinates": "rust:dioxus-router",
    "name": "dioxus-router",
    "description": "Cross-platform router for Dioxus apps",
    "license": [""],
    "tags": ["dom", "react", "ui", "gui", "wasm"],
    "downloads": 61789,
    "repositories": ["crates.io"]
  },
  "rust:dioxus-web": {
    "coordinates": "rust:dioxus-web",
    "name": "dioxus-web",
    "description": "Web renderer for Dioxus using websys",
    "license": [""],
    "tags": ["dom", "react", "gui", "ui", "wasm"],
    "downloads": 82562,
    "repositories": ["crates.io"]
  },
  "rust:dir-diff": {
    "coordinates": "rust:dir-diff",
    "name": "dir-diff",
    "description": "Do two directories have different contents?",
    "license": [""],
    "tags": ["directory", "fs", "diff"],
    "downloads": 3105573,
    "repositories": ["crates.io"]
  },
  "rust:directories-next": {
    "coordinates": "rust:directories-next",
    "name": "directories-next",
    "description": "A tiny mid-level library that provides platform-specific standard locations of directories for config, cache and other data on Linux, Windows and macOS by leveraging the mechanisms defined by the XDG base/user directory specifications on Linux, the Known Folder API on Windows, and the Standard Directory guidelines on macOS. ",
    "license": [""],
    "tags": ["folder", "xdg", "app_dirs", "basedir", "path"],
    "downloads": 6956553,
    "repositories": ["crates.io"]
  },
  "rust:discard": {
    "coordinates": "rust:discard",
    "name": "discard",
    "description": "Discard trait which allows for intentionally leaking memory",
    "license": [""],
    "tags": ["drop", "leak", "revoke", "discard", "cancel"],
    "downloads": 9637254,
    "repositories": ["crates.io"]
  },
  "rust:discv5": {
    "coordinates": "rust:discv5",
    "name": "discv5",
    "description": "Implementation of the p2p discv5 discovery protocol",
    "license": [""],
    "tags": ["peer-to-peer", "discv5", "libp2p", "discovery", "networking"],
    "downloads": 324120,
    "repositories": ["crates.io"]
  },
  "rust:dispatch": {
    "coordinates": "rust:dispatch",
    "name": "dispatch",
    "description": "Rust wrapper for Apple''s Grand Central Dispatch.",
    "license": [""],
    "tags": ["osx", "objective-c", "gcd", "ios"],
    "downloads": 4059629,
    "repositories": ["crates.io"]
  },
  "rust:divan": {
    "coordinates": "rust:divan",
    "name": "divan",
    "description": "Statistically-comfy benchmarking library.",
    "license": [""],
    "tags": ["criterion", "instrument", "measure", "performance", "benchmark"],
    "downloads": 88009,
    "repositories": ["crates.io"]
  },
  "rust:divan-macros": {
    "coordinates": "rust:divan-macros",
    "name": "divan-macros",
    "description": "Macros for Divan, a statistically-comfy benchmarking library.",
    "license": [""],
    "tags": ["criterion", "instrument", "measure", "performance", "benchmark"],
    "downloads": 88044,
    "repositories": ["crates.io"]
  },
  "rust:dleq_vrf": {
    "coordinates": "rust:dleq_vrf",
    "name": "dleq_vrf",
    "description": "VRFs from Chaum-Pedersen DLEQ proofs, usable in Ring VRFs",
    "license": [""],
    "tags": [],
    "downloads": 509,
    "repositories": ["crates.io"]
  },
  "rust:dlib": {
    "coordinates": "rust:dlib",
    "name": "dlib",
    "description": "Helper macros for handling manually loading optional system libraries.",
    "license": [""],
    "tags": ["dylib", "dlopen"],
    "downloads": 8380641,
    "repositories": ["crates.io"]
  },
  "rust:dlopen2": {
    "coordinates": "rust:dlopen2",
    "name": "dlopen2",
    "description": "Library for opening and operating on dynamic link libraries (also known as shared objects or shared libraries).",
    "license": [""],
    "tags": ["so", "dll", "dylib", "dlopen", "shared"],
    "downloads": 1087130,
    "repositories": ["crates.io"]
  },
  "rust:dlopen2_derive": {
    "coordinates": "rust:dlopen2_derive",
    "name": "dlopen2_derive",
    "description": "Derive macros for the dlopen2 crate.",
    "license": [""],
    "tags": [],
    "downloads": 1025350,
    "repositories": ["crates.io"]
  },
  "rust:dml": {
    "coordinates": "rust:dml",
    "name": "dml",
    "description": "A machine learning library",
    "license": [""],
    "tags": [],
    "downloads": 260,
    "repositories": ["crates.io"]
  },
  "rust:dmmf": { "name": "dmmf" },
  "rust:dns-lookup": {
    "coordinates": "rust:dns-lookup",
    "name": "dns-lookup",
    "description": "A simple dns resolving api, much like rust''s unstable api. Also includes getaddrinfo and getnameinfo wrappers for libc variants.",
    "license": [""],
    "tags": ["getnameinfo", "getaddrinfo", "dns", "resolve", "lookup"],
    "downloads": 4138083,
    "repositories": ["crates.io"]
  },
  "rust:docify": {
    "coordinates": "rust:docify",
    "name": "docify",
    "description": "Docify allows you to live-embed at compile time pieces of code from throughout your project as rust doc examples.",
    "license": [""],
    "tags": ["macro", "docify", "compile-time", "embed", "docs"],
    "downloads": 1345780,
    "repositories": ["crates.io"]
  },
  "rust:docify_macros": {
    "coordinates": "rust:docify_macros",
    "name": "docify_macros",
    "description": "Support macros for docify.",
    "license": [""],
    "tags": [],
    "downloads": 1346143,
    "repositories": ["crates.io"]
  },
  "rust:document-features": {
    "coordinates": "rust:document-features",
    "name": "document-features",
    "description": "Extract documentation for the feature flags from comments in Cargo.toml",
    "license": [""],
    "tags": ["macro", "rustdoc", "features", "documentation"],
    "downloads": 916717,
    "repositories": ["crates.io"]
  },
  "rust:dotenv_codegen": {
    "coordinates": "rust:dotenv_codegen",
    "name": "dotenv_codegen",
    "description": "A `dotenv` implementation for Rust",
    "license": [""],
    "tags": ["env", "config", "environment", "dotenv", "settings"],
    "downloads": 382630,
    "repositories": ["crates.io"]
  },
  "rust:dotenv_config": {
    "coordinates": "rust:dotenv_config",
    "name": "dotenv_config",
    "description": "parse `env` to config struct for Rust",
    "license": [""],
    "tags": ["settings", "env", "config", "environment", "dotenv"],
    "downloads": 27385,
    "repositories": ["crates.io"]
  },
  "rust:doxygen-rs": {
    "coordinates": "rust:doxygen-rs",
    "name": "doxygen-rs",
    "description": "Transform Doxygen to Rustdoc",
    "license": [""],
    "tags": ["bindgen", "rustdoc", "doxygen"],
    "downloads": 121130,
    "repositories": ["crates.io"]
  },
  "rust:drain_filter_polyfill": {
    "coordinates": "rust:drain_filter_polyfill",
    "name": "drain_filter_polyfill",
    "description": "current nightly implementation of Vec::drain_filter, copypasted out for use on stable",
    "license": [""],
    "tags": [],
    "downloads": 1148281,
    "repositories": ["crates.io"]
  },
  "rust:drm": {
    "coordinates": "rust:drm",
    "name": "drm",
    "description": "Safe, low-level bindings to the Direct Rendering Manager API",
    "license": [""],
    "tags": [],
    "downloads": 345232,
    "repositories": ["crates.io"]
  },
  "rust:drm-ffi": {
    "coordinates": "rust:drm-ffi",
    "name": "drm-ffi",
    "description": "Safe, low-level bindings to the Direct Rendering Manager API",
    "license": [""],
    "tags": [],
    "downloads": 331500,
    "repositories": ["crates.io"]
  },
  "rust:drm-fourcc": {
    "coordinates": "rust:drm-fourcc",
    "name": "drm-fourcc",
    "description": "Provides an enum with every valid Direct Rendering Manager (DRM) format fourcc",
    "license": [""],
    "tags": ["drm", "fourcc", "linux"],
    "downloads": 468137,
    "repositories": ["crates.io"]
  },
  "rust:drm-sys": {
    "coordinates": "rust:drm-sys",
    "name": "drm-sys",
    "description": "Bindings to the Direct Rendering Manager API",
    "license": [""],
    "tags": [],
    "downloads": 346824,
    "repositories": ["crates.io"]
  },
  "rust:dtoa-short": {
    "coordinates": "rust:dtoa-short",
    "name": "dtoa-short",
    "description": "Serialize float number and truncate to certain precision",
    "license": [""],
    "tags": ["float"],
    "downloads": 6534946,
    "repositories": ["crates.io"]
  },
  "rust:duct": {
    "coordinates": "rust:duct",
    "name": "duct",
    "description": "a library for running child processes",
    "license": [""],
    "tags": ["process", "child", "subprocess", "command", "pipe"],
    "downloads": 9493425,
    "repositories": ["crates.io"]
  },
  "rust:dusk-bls12_381": {
    "coordinates": "rust:dusk-bls12_381",
    "name": "dusk-bls12_381",
    "description": "Fork of the implementation of the BLS12-381 pairing-friendly elliptic curve construction with some extra tooling needed by the Dusk team",
    "license": [""],
    "tags": ["zk-snarks", "bls12_381", "ecc", "elliptic-curve", "cryptography"],
    "downloads": 82898,
    "repositories": ["crates.io"]
  },
  "rust:dusk-bytes": {
    "coordinates": "rust:dusk-bytes",
    "name": "dusk-bytes",
    "description": "A trait that uses constant generics to implement de/serialization on sized type",
    "license": [""],
    "tags": ["formatting", "encoding", "no_std"],
    "downloads": 77064,
    "repositories": ["crates.io"]
  },
  "rust:dusk-jubjub": {
    "coordinates": "rust:dusk-jubjub",
    "name": "dusk-jubjub",
    "description": "Dusk''s fork of the implementation of the Jubjub elliptic curve group",
    "license": [""],
    "tags": ["zk-snarks", "jubjub", "ecc", "elliptic-curve", "cryptography"],
    "downloads": 77760,
    "repositories": ["crates.io"]
  },
  "rust:dusk-plonk": {
    "coordinates": "rust:dusk-plonk",
    "name": "dusk-plonk",
    "description": "A pure-Rust implementation of the PLONK ZK-Proof algorithm",
    "license": [""],
    "tags": ["plonk", "zero-knowledge", "cryptography", "zk-snarks", "crypto"],
    "downloads": 42100,
    "repositories": ["crates.io"]
  },
  "rust:dyn-clonable": {
    "coordinates": "rust:dyn-clonable",
    "name": "dyn-clonable",
    "description": "Attribute wrapper for dyn-clone",
    "license": [""],
    "tags": [],
    "downloads": 3940065,
    "repositories": ["crates.io"]
  },
  "rust:dyn-clonable-impl": {
    "coordinates": "rust:dyn-clonable-impl",
    "name": "dyn-clonable-impl",
    "description": "Attribute wrapper for dyn-clone",
    "license": [""],
    "tags": [],
    "downloads": 3941902,
    "repositories": ["crates.io"]
  },
  "rust:dyn-stack": {
    "coordinates": "rust:dyn-stack",
    "name": "dyn-stack",
    "description": "Dynamic stack wrapper for unsized allocations",
    "license": [""],
    "tags": ["unsized", "allocation", "stack", "array", "slice"],
    "downloads": 346047,
    "repositories": ["crates.io"]
  },
  "rust:dyn_size_of": {
    "coordinates": "rust:dyn_size_of",
    "name": "dyn_size_of",
    "description": "The library to report approximate amount of memory consumed by variables, including the memory allocated on heap.",
    "license": [""],
    "tags": ["complexity", "memory", "heap"],
    "downloads": 94297,
    "repositories": ["crates.io"]
  },
  "rust:eager": {
    "coordinates": "rust:eager",
    "name": "eager",
    "description": "Crate for eager macro expansion.",
    "license": [""],
    "tags": ["eager", "expansion", "utilities", "macro"],
    "downloads": 1007547,
    "repositories": ["crates.io"]
  },
  "rust:earcutr": {
    "coordinates": "rust:earcutr",
    "name": "earcutr",
    "description": "port of MapBox''s earcut triangulation code to Rust language",
    "license": [""],
    "tags": [],
    "downloads": 1016955,
    "repositories": ["crates.io"]
  },
  "rust:ecolor": {
    "coordinates": "rust:ecolor",
    "name": "ecolor",
    "description": "Color structs and color conversion utilities",
    "license": [""],
    "tags": ["gui", "conversion", "images", "color", "gamedev"],
    "downloads": 1434541,
    "repositories": ["crates.io"]
  },
  "rust:ed25519-dalek-bip32": {
    "coordinates": "rust:ed25519-dalek-bip32",
    "name": "ed25519-dalek-bip32",
    "description": "Simplified ed25519 BIP32 derivations",
    "license": [""],
    "tags": ["derivation", "trezor", "ed25519", "blockchain", "bip32"],
    "downloads": 2100987,
    "repositories": ["crates.io"]
  },
  "rust:ed25519-zebra": {
    "coordinates": "rust:ed25519-zebra",
    "name": "ed25519-zebra",
    "description": "Zcash-flavored Ed25519 for use in Zebra.",
    "license": [""],
    "tags": [],
    "downloads": 5133643,
    "repositories": ["crates.io"]
  },
  "rust:educe": {
    "coordinates": "rust:educe",
    "name": "educe",
    "description": "This crate offers procedural macros designed to facilitate the swift implementation of Rust''s built-in traits.",
    "license": [""],
    "tags": ["field", "trait", "procedural", "derive", "macro"],
    "downloads": 7922433,
    "repositories": ["crates.io"]
  },
  "rust:eframe": {
    "coordinates": "rust:eframe",
    "name": "eframe",
    "description": "egui framework - write GUI apps that compiles to web and/or natively",
    "license": [""],
    "tags": ["egui", "gui", "gamedev"],
    "downloads": 1080979,
    "repositories": ["crates.io"]
  },
  "rust:ego-tree": {
    "coordinates": "rust:ego-tree",
    "name": "ego-tree",
    "description": "Vec-backed ID-tree",
    "license": [""],
    "tags": ["id", "vec", "index", "tree"],
    "downloads": 2496309,
    "repositories": ["crates.io"]
  },
  "rust:egui": {
    "coordinates": "rust:egui",
    "name": "egui",
    "description": "An easy-to-use immediate mode GUI that runs on both web and native",
    "license": [""],
    "tags": ["gui", "imgui", "immediate", "portable", "gamedev"],
    "downloads": 2243613,
    "repositories": ["crates.io"]
  },
  "rust:egui-wgpu": {
    "coordinates": "rust:egui-wgpu",
    "name": "egui-wgpu",
    "description": "Bindings for using egui natively using the wgpu library",
    "license": [""],
    "tags": ["egui", "gui", "wgpu", "gamedev"],
    "downloads": 309853,
    "repositories": ["crates.io"]
  },
  "rust:egui-winit": {
    "coordinates": "rust:egui-winit",
    "name": "egui-winit",
    "description": "Bindings for using egui with winit",
    "license": [""],
    "tags": ["egui", "gui", "winit", "gamedev"],
    "downloads": 1201834,
    "repositories": ["crates.io"]
  },
  "rust:egui_commonmark": {
    "coordinates": "rust:egui_commonmark",
    "name": "egui_commonmark",
    "description": "Commonmark viewer for egui",
    "license": [""],
    "tags": ["egui", "commonmark"],
    "downloads": 61915,
    "repositories": ["crates.io"]
  },
  "rust:egui_extras": {
    "coordinates": "rust:egui_extras",
    "name": "egui_extras",
    "description": "Extra functionality and widgets for the egui GUI library",
    "license": [""],
    "tags": ["gui", "imgui", "immediate", "portable", "gamedev"],
    "downloads": 573754,
    "repositories": ["crates.io"]
  },
  "rust:egui_glow": {
    "coordinates": "rust:egui_glow",
    "name": "egui_glow",
    "description": "Bindings for using egui natively using the glow library",
    "license": [""],
    "tags": ["egui", "gui", "glow", "gamedev"],
    "downloads": 975696,
    "repositories": ["crates.io"]
  },
  "rust:egui_plot": {
    "coordinates": "rust:egui_plot",
    "name": "egui_plot",
    "description": "Immediate mode plotting for the egui GUI library",
    "license": [""],
    "tags": ["egui", "plot", "plotting"],
    "downloads": 162008,
    "repositories": ["crates.io"]
  },
  "rust:egui_tiles": {
    "coordinates": "rust:egui_tiles",
    "name": "egui_tiles",
    "description": "A tiling layout engine for egui with drag-and-drop and resizing",
    "license": [""],
    "tags": ["dock", "gui", "layout", "tile", "egui"],
    "downloads": 65390,
    "repositories": ["crates.io"]
  },
  "rust:ehttp": {
    "coordinates": "rust:ehttp",
    "name": "ehttp",
    "description": "Minimal HTTP client for both native and WASM",
    "license": [""],
    "tags": ["native", "http", "web", "wasm"],
    "downloads": 274894,
    "repositories": ["crates.io"]
  },
  "rust:elasticlunr-rs": {
    "coordinates": "rust:elasticlunr-rs",
    "name": "elasticlunr-rs",
    "description": "A partial port of elasticlunr.js to Rust for generating static document search indexes",
    "license": [""],
    "tags": ["indexing", "lunr", "elasticlunr", "index", "search"],
    "downloads": 3208166,
    "repositories": ["crates.io"]
  },
  "rust:elasticsearch-dsl": {
    "coordinates": "rust:elasticsearch-dsl",
    "name": "elasticsearch-dsl",
    "description": "Strongly typed Elasticsearch DSL",
    "license": [""],
    "tags": [],
    "downloads": 92323,
    "repositories": ["crates.io"]
  },
  "rust:elf": {
    "coordinates": "rust:elf",
    "name": "elf",
    "description": "A pure-rust library for parsing ELF files",
    "license": [""],
    "tags": ["object", "elf", "binary", "parser"],
    "downloads": 725569,
    "repositories": ["crates.io"]
  },
  "rust:email-encoding": {
    "coordinates": "rust:email-encoding",
    "name": "email-encoding",
    "description": "Low level email encoding RFCs implementations",
    "license": [""],
    "tags": ["rfc2047", "rfc2231", "email"],
    "downloads": 1186894,
    "repositories": ["crates.io"]
  },
  "rust:email_address": {
    "coordinates": "rust:email_address",
    "name": "email_address",
    "description": "A Rust crate providing an implementation of an RFC-compliant `EmailAddress` newtype. ",
    "license": [""],
    "tags": [],
    "downloads": 2053033,
    "repositories": ["crates.io"]
  },
  "rust:emath": {
    "coordinates": "rust:emath",
    "name": "emath",
    "description": "Minimal 2D math library for GUI work",
    "license": [""],
    "tags": ["gui", "math"],
    "downloads": 2217433,
    "repositories": ["crates.io"]
  },
  "rust:embedded-dma": {
    "coordinates": "rust:embedded-dma",
    "name": "embedded-dma",
    "description": "Traits to aid in the creation of sound DMA abstractions",
    "license": [""],
    "tags": ["dma"],
    "downloads": 987680,
    "repositories": ["crates.io"]
  },
  "rust:embedded-hal": {
    "coordinates": "rust:embedded-hal",
    "name": "embedded-hal",
    "description": " A Hardware Abstraction Layer (HAL) for embedded systems ",
    "license": [""],
    "tags": ["hal", "io"],
    "downloads": 5963965,
    "repositories": ["crates.io"]
  },
  "rust:embedded-io": {
    "coordinates": "rust:embedded-io",
    "name": "embedded-io",
    "description": "Embedded IO traits",
    "license": [""],
    "tags": [],
    "downloads": 1628833,
    "repositories": ["crates.io"]
  },
  "rust:embedded-storage": {
    "coordinates": "rust:embedded-storage",
    "name": "embedded-storage",
    "description": "A Storage Abstraction Layer for Embedded Systems",
    "license": [""],
    "tags": ["storage"],
    "downloads": 750049,
    "repositories": ["crates.io"]
  },
  "rust:encoding_rs_io": {
    "coordinates": "rust:encoding_rs_io",
    "name": "encoding_rs_io",
    "description": "Streaming transcoding for encoding_rs",
    "license": [""],
    "tags": ["encoding", "transcoding", "stream", "read", "io"],
    "downloads": 3131242,
    "repositories": ["crates.io"]
  },
  "rust:endi": {
    "coordinates": "rust:endi",
    "name": "endi",
    "description": "A simple endian-handling library",
    "license": [""],
    "tags": ["little-endian", "big-endian", "endianness", "byte", "endian"],
    "downloads": 100322,
    "repositories": ["crates.io"]
  },
  "rust:enr": {
    "coordinates": "rust:enr",
    "name": "enr",
    "description": "Rust implementation of Ethereum Node Record (ENR) EIP778",
    "license": [""],
    "tags": ["enr", "record", "eip778", "ethereum", "node"],
    "downloads": 2262156,
    "repositories": ["crates.io"]
  },
  "rust:enrichment": { "name": "enrichment" },
  "rust:enum-map": {
    "coordinates": "rust:enum-map",
    "name": "enum-map",
    "description": "A map with C-like enum keys represented internally as an array",
    "license": [""],
    "tags": ["no_std", "data-structure", "enum"],
    "downloads": 6389295,
    "repositories": ["crates.io"]
  },
  "rust:enum-map-derive": {
    "coordinates": "rust:enum-map-derive",
    "name": "enum-map-derive",
    "description": "Macros 1.1 implementation of #[derive(Enum)]",
    "license": [""],
    "tags": ["data-structure", "no_std", "enum"],
    "downloads": 6320089,
    "repositories": ["crates.io"]
  },
  "rust:enum-ordinalize": {
    "coordinates": "rust:enum-ordinalize",
    "name": "enum-ordinalize",
    "description": "This library enables enums to not only obtain the ordinal values of their variants but also allows for the construction of enums from an ordinal value.",
    "license": [""],
    "tags": ["enum", "number", "ordinalize", "ordinal"],
    "downloads": 8093598,
    "repositories": ["crates.io"]
  },
  "rust:enumn": {
    "coordinates": "rust:enumn",
    "name": "enumn",
    "description": "Convert number to enum",
    "license": [""],
    "tags": ["enum", "integer"],
    "downloads": 5339023,
    "repositories": ["crates.io"]
  },
  "rust:enumset": {
    "coordinates": "rust:enumset",
    "name": "enumset",
    "description": "A library for creating compact sets of enums.",
    "license": [""],
    "tags": ["bitset", "enum"],
    "downloads": 8383165,
    "repositories": ["crates.io"]
  },
  "rust:enumset_derive": {
    "coordinates": "rust:enumset_derive",
    "name": "enumset_derive",
    "description": "An internal helper crate for enumset. Not public API.",
    "license": [""],
    "tags": [],
    "downloads": 8182941,
    "repositories": ["crates.io"]
  },
  "rust:env_filter": {
    "coordinates": "rust:env_filter",
    "name": "env_filter",
    "description": "Filter log events using environment variables ",
    "license": [""],
    "tags": ["logger", "log", "logging"],
    "downloads": 1957565,
    "repositories": ["crates.io"]
  },
  "rust:environmental": {
    "coordinates": "rust:environmental",
    "name": "environmental",
    "description": "Set scope-limited values can can be accessed statically",
    "license": [""],
    "tags": [],
    "downloads": 4209201,
    "repositories": ["crates.io"]
  },
  "rust:epaint": {
    "coordinates": "rust:epaint",
    "name": "epaint",
    "description": "Minimal 2D graphics library for GUI work",
    "license": [""],
    "tags": ["egui", "gui", "graphics"],
    "downloads": 2195931,
    "repositories": ["crates.io"]
  },
  "rust:error-code": {
    "coordinates": "rust:error-code",
    "name": "error-code",
    "description": "Error code",
    "license": [""],
    "tags": [],
    "downloads": 5578747,
    "repositories": ["crates.io"]
  },
  "rust:error-stack": {
    "coordinates": "rust:error-stack",
    "name": "error-stack",
    "description": "A context-aware error-handling library that supports arbitrary attached user data",
    "license": [""],
    "tags": ["errorstack", "report", "no_std", "error-handling", "error"],
    "downloads": 756208,
    "repositories": ["crates.io"]
  },
  "rust:esaxx-rs": {
    "coordinates": "rust:esaxx-rs",
    "name": "esaxx-rs",
    "description": "Wrapping around sentencepiece''s esaxxx library.",
    "license": [""],
    "tags": [],
    "downloads": 1384057,
    "repositories": ["crates.io"]
  },
  "rust:etagere": {
    "coordinates": "rust:etagere",
    "name": "etagere",
    "description": "Dynamic 2D texture atlas allocation using the shelf packing algorithm.",
    "license": [""],
    "tags": ["2d"],
    "downloads": 368924,
    "repositories": ["crates.io"]
  },
  "rust:etcd-client": {
    "coordinates": "rust:etcd-client",
    "name": "etcd-client",
    "description": "An etcd v3 API client",
    "license": [""],
    "tags": ["v3", "client", "etcd", "api", "async"],
    "downloads": 1475580,
    "repositories": ["crates.io"]
  },
  "rust:etcetera": {
    "coordinates": "rust:etcetera",
    "name": "etcetera",
    "description": "An unopinionated library for obtaining configuration, data, cache, & other directories",
    "license": [""],
    "tags": ["dirs", "xdg", "path", "directories", "basedir"],
    "downloads": 2699045,
    "repositories": ["crates.io"]
  },
  "rust:ethabi": {
    "coordinates": "rust:ethabi",
    "name": "ethabi",
    "description": "Easy to use conversion of ethereum contract calls to bytecode.",
    "license": [""],
    "tags": ["abi", "eth", "solidity", "ethereum"],
    "downloads": 5363986,
    "repositories": ["crates.io"]
  },
  "rust:ethabi-decode": {
    "coordinates": "rust:ethabi-decode",
    "name": "ethabi-decode",
    "description": "Decoding of ABI-encoded data and event logs",
    "license": [""],
    "tags": ["ethereum"],
    "downloads": 280743,
    "repositories": ["crates.io"]
  },
  "rust:ethbloom": {
    "coordinates": "rust:ethbloom",
    "name": "ethbloom",
    "description": "Ethereum bloom filter",
    "license": [""],
    "tags": [],
    "downloads": 8081270,
    "repositories": ["crates.io"]
  },
  "rust:ethereum-types": {
    "coordinates": "rust:ethereum-types",
    "name": "ethereum-types",
    "description": "Ethereum types",
    "license": [""],
    "tags": [],
    "downloads": 8142546,
    "repositories": ["crates.io"]
  },
  "rust:ethereum_ssz": {
    "coordinates": "rust:ethereum_ssz",
    "name": "ethereum_ssz",
    "description": "SimpleSerialize (SSZ) as used in Ethereum",
    "license": [""],
    "tags": ["ethereum"],
    "downloads": 218703,
    "repositories": ["crates.io"]
  },
  "rust:ethereum_ssz_derive": {
    "coordinates": "rust:ethereum_ssz_derive",
    "name": "ethereum_ssz_derive",
    "description": "Procedural derive macros to accompany the ethereum_ssz crate",
    "license": [""],
    "tags": ["ethereum"],
    "downloads": 144282,
    "repositories": ["crates.io"]
  },
  "rust:ethnum": {
    "coordinates": "rust:ethnum",
    "name": "ethnum",
    "description": "256-bit integer implementation",
    "license": [""],
    "tags": ["integer", "u256", "ethereum"],
    "downloads": 3572097,
    "repositories": ["crates.io"]
  },
  "rust:euclid": {
    "coordinates": "rust:euclid",
    "name": "euclid",
    "description": "Geometry primitives",
    "license": [""],
    "tags": ["vector", "matrix", "geometry", "linear-algebra"],
    "downloads": 6032928,
    "repositories": ["crates.io"]
  },
  "rust:euclid_macros": {
    "coordinates": "rust:euclid_macros",
    "name": "euclid_macros",
    "description": "Euclid implementation detail",
    "license": [""],
    "tags": [],
    "downloads": 269400,
    "repositories": ["crates.io"]
  },
  "rust:event-listener-strategy": {
    "coordinates": "rust:event-listener-strategy",
    "name": "event-listener-strategy",
    "description": "Block or poll on event_listener easily",
    "license": [""],
    "tags": ["park", "condvar", "blocking", "wake", "envcount"],
    "downloads": 8213352,
    "repositories": ["crates.io"]
  },
  "rust:events": {
    "coordinates": "rust:events",
    "name": "events",
    "description": "Simple primitives for straightforward concurrent programming",
    "license": [""],
    "tags": [],
    "downloads": 823,
    "repositories": ["crates.io"]
  },
  "rust:eventsource-stream": {
    "coordinates": "rust:eventsource-stream",
    "name": "eventsource-stream",
    "description": "A basic building block for building an Eventsource from a Stream of bytes",
    "license": [""],
    "tags": ["parse", "event", "eventsource", "stream", "sse"],
    "downloads": 468813,
    "repositories": ["crates.io"]
  },
  "rust:ewebsock": {
    "coordinates": "rust:ewebsock",
    "name": "ewebsock",
    "description": "WebSocket client that works natively and on the web (WASM)",
    "license": [""],
    "tags": ["native", "websockets", "web", "websocket", "portable"],
    "downloads": 84452,
    "repositories": ["crates.io"]
  },
  "rust:executable-path": {
    "coordinates": "rust:executable-path",
    "name": "executable-path",
    "description": "Get the path of a binary target''s executable",
    "license": [""],
    "tags": [],
    "downloads": 93514,
    "repositories": ["crates.io"]
  },
  "rust:execute": {
    "coordinates": "rust:execute",
    "name": "execute",
    "description": "A library for extending `Command` in order to execute programs more easily.",
    "license": [""],
    "tags": ["process", "redirect", "execute", "pipe", "command"],
    "downloads": 400208,
    "repositories": ["crates.io"]
  },
  "rust:execute-command-macro": {
    "coordinates": "rust:execute-command-macro",
    "name": "execute-command-macro",
    "description": "Create `Command` instances using the `command!` macro or the `command_args!` marco.",
    "license": [""],
    "tags": ["execute", "command"],
    "downloads": 390715,
    "repositories": ["crates.io"]
  },
  "rust:execute-command-macro-impl": {
    "coordinates": "rust:execute-command-macro-impl",
    "name": "execute-command-macro-impl",
    "description": "Create `Command` instances using the `command!` macro.",
    "license": [""],
    "tags": ["execute", "command"],
    "downloads": 400979,
    "repositories": ["crates.io"]
  },
  "rust:execute-command-tokens": {
    "coordinates": "rust:execute-command-tokens",
    "name": "execute-command-tokens",
    "description": "Parse command strings.",
    "license": [""],
    "tags": ["execute", "command"],
    "downloads": 385914,
    "repositories": ["crates.io"]
  },
  "rust:exit-future": {
    "coordinates": "rust:exit-future",
    "name": "exit-future",
    "description": "Future that signals exit to many receivers",
    "license": [""],
    "tags": [],
    "downloads": 3219641,
    "repositories": ["crates.io"]
  },
  "rust:exitcode": {
    "coordinates": "rust:exitcode",
    "name": "exitcode",
    "description": "Preferred system exit codes as defined by sysexits.h",
    "license": [""],
    "tags": ["sysexits", "exitcode"],
    "downloads": 3403181,
    "repositories": ["crates.io"]
  },
  "rust:expander": {
    "coordinates": "rust:expander",
    "name": "expander",
    "description": "Expands proc macro output to a file, to enable easier debugging",
    "license": [""],
    "tags": [],
    "downloads": 3756866,
    "repositories": ["crates.io"]
  },
  "rust:expect-test": {
    "coordinates": "rust:expect-test",
    "name": "expect-test",
    "description": "Minimalistic snapshot testing library",
    "license": [""],
    "tags": ["expect", "snapshot", "testing"],
    "downloads": 7470623,
    "repositories": ["crates.io"]
  },
  "rust:exr": {
    "coordinates": "rust:exr",
    "name": "exr",
    "description": "Read and write OpenEXR files without any unsafe code",
    "license": [""],
    "tags": ["binary", "io", "file", "exr", "openexr"],
    "downloads": 7082646,
    "repositories": ["crates.io"]
  },
  "rust:extend": {
    "coordinates": "rust:extend",
    "name": "extend",
    "description": "Create extensions for types you don''t own with extension traits but without the boilerplate.",
    "license": [""],
    "tags": ["trait", "extension"],
    "downloads": 3320315,
    "repositories": ["crates.io"]
  },
  "rust:extended": {
    "coordinates": "rust:extended",
    "name": "extended",
    "description": "Extended precision 80-bit floating-point numbers (f80). ",
    "license": [""],
    "tags": ["float"],
    "downloads": 36849,
    "repositories": ["crates.io"]
  },
  "rust:external_services": { "name": "external_services" },
  "rust:fail": {
    "coordinates": "rust:fail",
    "name": "fail",
    "description": "Fail points for rust.",
    "license": [""],
    "tags": ["failpoints", "fail"],
    "downloads": 7715516,
    "repositories": ["crates.io"]
  },
  "rust:fake": {
    "coordinates": "rust:fake",
    "name": "fake",
    "description": "An easy to use library for generating fake data like name, number, address, lorem, dates, etc.",
    "license": [""],
    "tags": ["generator", "random", "data", "faker"],
    "downloads": 2892106,
    "repositories": ["crates.io"]
  },
  "rust:fantoccini": {
    "coordinates": "rust:fantoccini",
    "name": "fantoccini",
    "description": "High-level API for programmatically interacting with web pages through WebDriver.",
    "license": [""],
    "tags": [
      "webdriver",
      "chromedriver",
      "phantomjs",
      "geckodriver",
      "automation"
    ],
    "downloads": 1149838,
    "repositories": ["crates.io"]
  },
  "rust:fast-float": {
    "coordinates": "rust:fast-float",
    "name": "fast-float",
    "description": "Fast floating-point number parser.",
    "license": [""],
    "tags": ["parsing", "float", "no-std", "parser", "parse"],
    "downloads": 1727353,
    "repositories": ["crates.io"]
  },
  "rust:fast-math": {
    "coordinates": "rust:fast-math",
    "name": "fast-math",
    "description": "Fast, approximate versions of mathematical functions. ",
    "license": [""],
    "tags": ["approximation", "relative-error", "performance", "mathematics"],
    "downloads": 4297548,
    "repositories": ["crates.io"]
  },
  "rust:fast-srgb8": {
    "coordinates": "rust:fast-srgb8",
    "name": "fast-srgb8",
    "description": "Very fast conversions between linear float and 8-bit sRGB (with no_std support).",
    "license": [""],
    "tags": ["srgb", "simd", "convert", "rgb", "color"],
    "downloads": 430839,
    "repositories": ["crates.io"]
  },
  "rust:fastdivide": {
    "coordinates": "rust:fastdivide",
    "name": "fastdivide",
    "description": "Fastdivide is a partial port of libdivide. It makes it possible to reduce the cost of divisions.",
    "license": [""],
    "tags": [],
    "downloads": 2993804,
    "repositories": ["crates.io"]
  },
  "rust:faster-hex": {
    "coordinates": "rust:faster-hex",
    "name": "faster-hex",
    "description": "Fast hex encoding.",
    "license": [""],
    "tags": ["no-std", "hex", "simd"],
    "downloads": 4088189,
    "repositories": ["crates.io"]
  },
  "rust:fastrlp": {
    "coordinates": "rust:fastrlp",
    "name": "fastrlp",
    "description": "Fast RLP serialization library",
    "license": [""],
    "tags": [],
    "downloads": 1163907,
    "repositories": ["crates.io"]
  },
  "rust:faststr": {
    "coordinates": "rust:faststr",
    "name": "faststr",
    "description": "Faststr is a string library that reduces the cost of clone.",
    "license": [""],
    "tags": ["str", "volo", "string"],
    "downloads": 103584,
    "repositories": ["crates.io"]
  },
  "rust:faux": {
    "coordinates": "rust:faux",
    "name": "faux",
    "description": "A library to mock structs",
    "license": [""],
    "tags": ["faux", "mock", "test", "testing", "mocking"],
    "downloads": 305235,
    "repositories": ["crates.io"]
  },
  "rust:faux_macros": {
    "coordinates": "rust:faux_macros",
    "name": "faux_macros",
    "description": "Implementations for #[create], #[methods], when!",
    "license": [""],
    "tags": ["faux", "mocking", "mock", "test", "testing"],
    "downloads": 304302,
    "repositories": ["crates.io"]
  },
  "rust:fd-lock": {
    "coordinates": "rust:fd-lock",
    "name": "fd-lock",
    "description": "Advisory cross-platform lock on a file using a file descriptor to it.",
    "license": [""],
    "tags": ["windows", "lock", "unix", "file", "fd"],
    "downloads": 9517887,
    "repositories": ["crates.io"]
  },
  "rust:fdlimit": {
    "coordinates": "rust:fdlimit",
    "name": "fdlimit",
    "description": "Utility crate for raising file descriptors limit for OSX and Linux",
    "license": [""],
    "tags": [],
    "downloads": 4605211,
    "repositories": ["crates.io"]
  },
  "rust:feature-probe": {
    "coordinates": "rust:feature-probe",
    "name": "feature-probe",
    "description": "Probe for rustc features from build.rs",
    "license": [""],
    "tags": ["features", "autoconf", "probe", "rustc"],
    "downloads": 2321071,
    "repositories": ["crates.io"]
  },
  "rust:femme": {
    "coordinates": "rust:femme",
    "name": "femme",
    "description": "Not just a pretty (inter)face: pretty-printer and ndjson logger for log crate.",
    "license": [""],
    "tags": ["femme", "log", "pretty-printer", "ndjson", "logger"],
    "downloads": 2199511,
    "repositories": ["crates.io"]
  },
  "rust:fermi": {
    "coordinates": "rust:fermi",
    "name": "fermi",
    "description": "Global state management for Dioxus",
    "license": [""],
    "tags": ["dom", "react", "gui", "state-management", "ui"],
    "downloads": 19684,
    "repositories": ["crates.io"]
  },
  "rust:fern": {
    "coordinates": "rust:fern",
    "name": "fern",
    "description": "Simple, efficient logging",
    "license": [""],
    "tags": ["logger", "log", "logging"],
    "downloads": 9582857,
    "repositories": ["crates.io"]
  },
  "rust:fflonk": { "name": "fflonk" },
  "rust:fiat-crypto": {
    "coordinates": "rust:fiat-crypto",
    "name": "fiat-crypto",
    "description": "Fiat-crypto generated Rust",
    "license": [""],
    "tags": [],
    "downloads": 7632354,
    "repositories": ["crates.io"]
  },
  "rust:field-offset": {
    "coordinates": "rust:field-offset",
    "name": "field-offset",
    "description": "Safe pointer-to-member implementation",
    "license": [""],
    "tags": [],
    "downloads": 5040524,
    "repositories": ["crates.io"]
  },
  "rust:figment": {
    "coordinates": "rust:figment",
    "name": "figment",
    "description": "A configuration library so con-free, it''s unreal.",
    "license": [""],
    "tags": ["configuration", "toml", "config", "yaml", "json"],
    "downloads": 4288525,
    "repositories": ["crates.io"]
  },
  "rust:file-id": {
    "coordinates": "rust:file-id",
    "name": "file-id",
    "description": "Utility for reading inode numbers (Linux, MacOS) and file IDs (Windows)",
    "license": [""],
    "tags": ["index", "inode", "filesystem", "file"],
    "downloads": 1151918,
    "repositories": ["crates.io"]
  },
  "rust:file-per-thread-logger": {
    "coordinates": "rust:file-per-thread-logger",
    "name": "file-per-thread-logger",
    "description": "A logging implementation that writes logs in one file per thread",
    "license": [""],
    "tags": ["logging", "log", "thread", "logger"],
    "downloads": 4664711,
    "repositories": ["crates.io"]
  },
  "rust:filedescriptor": {
    "coordinates": "rust:filedescriptor",
    "name": "filedescriptor",
    "description": "More ergonomic wrappers around RawFd and RawHandle",
    "license": [""],
    "tags": ["pipe", "filedescriptor", "poll", "socketpair"],
    "downloads": 2466871,
    "repositories": ["crates.io"]
  },
  "rust:finality-grandpa": {
    "coordinates": "rust:finality-grandpa",
    "name": "finality-grandpa",
    "description": "PBFT-based finality gadget for blockchains",
    "license": [""],
    "tags": [],
    "downloads": 3290664,
    "repositories": ["crates.io"]
  },
  "rust:findshlibs": {
    "coordinates": "rust:findshlibs",
    "name": "findshlibs",
    "description": "Find the set of shared libraries loaded in the current process with a cross platform API",
    "license": [""],
    "tags": ["dylib", "shared", "library", "dyld", "dl_iterate_phdr"],
    "downloads": 9047974,
    "repositories": ["crates.io"]
  },
  "rust:finl_unicode": {
    "coordinates": "rust:finl_unicode",
    "name": "finl_unicode",
    "description": "Library for handling Unicode functionality for finl (categories and grapheme segmentation)",
    "license": [""],
    "tags": ["unicode", "segmentation", "graphemes"],
    "downloads": 7536010,
    "repositories": ["crates.io"]
  },
  "rust:fixed": {
    "coordinates": "rust:fixed",
    "name": "fixed",
    "description": "Fixed-point numbers.",
    "license": [""],
    "tags": ["math", "numerics", "fixed", "dsp", "embedded"],
    "downloads": 1142982,
    "repositories": ["crates.io"]
  },
  "rust:flagset": {
    "coordinates": "rust:flagset",
    "name": "flagset",
    "description": "Data types and a macro for generating enumeration-based bit flags",
    "license": [""],
    "tags": ["enumflags", "enum", "bitflags", "flags"],
    "downloads": 3520231,
    "repositories": ["crates.io"]
  },
  "rust:float_next_after": {
    "coordinates": "rust:float_next_after",
    "name": "float_next_after",
    "description": "A trait for native rust f64/f32 nextafter",
    "license": [""],
    "tags": ["increment", "float", "nextafter", "f64", "f32"],
    "downloads": 2887594,
    "repositories": ["crates.io"]
  },
  "rust:font-types": {
    "coordinates": "rust:font-types",
    "name": "font-types",
    "description": "Scalar types used in fonts.",
    "license": [""],
    "tags": [],
    "downloads": 183249,
    "repositories": ["crates.io"]
  },
  "rust:fontconfig-parser": {
    "coordinates": "rust:fontconfig-parser",
    "name": "fontconfig-parser",
    "description": "fontconfig file parser in pure Rust",
    "license": [""],
    "tags": ["fontconfig"],
    "downloads": 709933,
    "repositories": ["crates.io"]
  },
  "rust:fontdb": {
    "coordinates": "rust:fontdb",
    "name": "fontdb",
    "description": "A simple, in-memory font database with CSS-like queries.",
    "license": [""],
    "tags": ["css", "ttf", "font", "truetype", "db"],
    "downloads": 1515557,
    "repositories": ["crates.io"]
  },
  "rust:foreign-types-macros": {
    "coordinates": "rust:foreign-types-macros",
    "name": "foreign-types-macros",
    "description": "An internal crate used by foreign-types",
    "license": [""],
    "tags": [],
    "downloads": 4933334,
    "repositories": ["crates.io"]
  },
  "rust:foreign_vec": {
    "coordinates": "rust:foreign_vec",
    "name": "foreign_vec",
    "description": "Unofficial implementation of Apache Arrow spec in safe Rust",
    "license": [""],
    "tags": [],
    "downloads": 1635894,
    "repositories": ["crates.io"]
  },
  "rust:fork-tree": {
    "coordinates": "rust:fork-tree",
    "name": "fork-tree",
    "description": "Utility library for managing tree-like ordered data with logic for pruning the tree while finalizing nodes. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 233420,
    "repositories": ["crates.io"]
  },
  "rust:forwarded-header-value": {
    "coordinates": "rust:forwarded-header-value",
    "name": "forwarded-header-value",
    "description": "Parser for values from the Forwarded header (RFC 7239)",
    "license": [""],
    "tags": ["http"],
    "downloads": 472513,
    "repositories": ["crates.io"]
  },
  "rust:frame-benchmarking": {
    "coordinates": "rust:frame-benchmarking",
    "name": "frame-benchmarking",
    "description": "Macro for benchmarking a FRAME runtime. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 337005,
    "repositories": ["crates.io"]
  },
  "rust:frame-benchmarking-cli": {
    "coordinates": "rust:frame-benchmarking-cli",
    "name": "frame-benchmarking-cli",
    "description": "CLI for benchmarking FRAME (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 179839,
    "repositories": ["crates.io"]
  },
  "rust:frame-election-provider-solution-type": {
    "coordinates": "rust:frame-election-provider-solution-type",
    "name": "frame-election-provider-solution-type",
    "description": "NPoS Solution Type",
    "license": [""],
    "tags": [],
    "downloads": 41052,
    "repositories": ["crates.io"]
  },
  "rust:frame-election-provider-support": {
    "coordinates": "rust:frame-election-provider-support",
    "name": "frame-election-provider-support",
    "description": "election provider supporting traits (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 46582,
    "repositories": ["crates.io"]
  },
  "rust:frame-executive": {
    "coordinates": "rust:frame-executive",
    "name": "frame-executive",
    "description": "FRAME executives engine (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 238274,
    "repositories": ["crates.io"]
  },
  "rust:frame-metadata": {
    "coordinates": "rust:frame-metadata",
    "name": "frame-metadata",
    "description": "Metadata types for Substrate runtimes",
    "license": [""],
    "tags": [],
    "downloads": 3397517,
    "repositories": ["crates.io"]
  },
  "rust:frame-remote-externalities": {
    "coordinates": "rust:frame-remote-externalities",
    "name": "frame-remote-externalities",
    "description": "An externalities provided environment that can load itself from remote nodes or cached files (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 28658,
    "repositories": ["crates.io"]
  },
  "rust:frame-support": {
    "coordinates": "rust:frame-support",
    "name": "frame-support",
    "description": "Support code for the runtime. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 354218,
    "repositories": ["crates.io"]
  },
  "rust:frame-support-procedural": {
    "coordinates": "rust:frame-support-procedural",
    "name": "frame-support-procedural",
    "description": "Proc macro of Support code for the runtime. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 353218,
    "repositories": ["crates.io"]
  },
  "rust:frame-support-procedural-tools": {
    "coordinates": "rust:frame-support-procedural-tools",
    "name": "frame-support-procedural-tools",
    "description": "Proc macro helpers for procedural macros (polkadot v1.9.0)",
    "license": [""],
    "tags": [],
    "downloads": 346167,
    "repositories": ["crates.io"]
  },
  "rust:frame-support-procedural-tools-derive": {
    "coordinates": "rust:frame-support-procedural-tools-derive",
    "name": "frame-support-procedural-tools-derive",
    "description": "Use to derive parsing for parsing struct.",
    "license": [""],
    "tags": [],
    "downloads": 347933,
    "repositories": ["crates.io"]
  },
  "rust:frame-try-runtime": {
    "coordinates": "rust:frame-try-runtime",
    "name": "frame-try-runtime",
    "description": "FRAME pallet for democracy (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 36040,
    "repositories": ["crates.io"]
  },
  "rust:frank_jwt": {
    "coordinates": "rust:frank_jwt",
    "name": "frank_jwt",
    "description": "Implementation of JSON JWT",
    "license": [""],
    "tags": ["auth0-jwt", "jwt", "encryption", "token", "json"],
    "downloads": 275549,
    "repositories": ["crates.io"]
  },
  "rust:fred": {
    "coordinates": "rust:fred",
    "name": "fred",
    "description": "An async Redis client built on Tokio.",
    "license": [""],
    "tags": ["async", "sentinel", "cluster", "redis"],
    "downloads": 1056491,
    "repositories": ["crates.io"]
  },
  "rust:frunk": {
    "coordinates": "rust:frunk",
    "name": "frunk",
    "description": "Frunk provides developers with a number of functional programming tools like HList, Coproduct, Generic, LabelledGeneric, Validated, Monoid, Semigroup and friends.",
    "license": [""],
    "tags": ["monoid", "validated", "frunk", "hlist", "generic"],
    "downloads": 3514381,
    "repositories": ["crates.io"]
  },
  "rust:frunk_core": {
    "coordinates": "rust:frunk_core",
    "name": "frunk_core",
    "description": "Frunk core provides developers with HList, Coproduct, LabelledGeneric and Generic",
    "license": [""],
    "tags": ["frunk", "hlist", "labelledgeneric", "coproduct", "generic"],
    "downloads": 3614291,
    "repositories": ["crates.io"]
  },
  "rust:frunk_derives": {
    "coordinates": "rust:frunk_derives",
    "name": "frunk_derives",
    "description": "frunk_derives contains the custom derivations for certain traits in Frunk.",
    "license": [""],
    "tags": ["frunk", "derives"],
    "downloads": 3495272,
    "repositories": ["crates.io"]
  },
  "rust:frunk_proc_macro_helpers": {
    "coordinates": "rust:frunk_proc_macro_helpers",
    "name": "frunk_proc_macro_helpers",
    "description": "Common internal functions for frunk''s proc macros",
    "license": [""],
    "tags": ["frunk", "internal", "macros"],
    "downloads": 3487267,
    "repositories": ["crates.io"]
  },
  "rust:frunk_proc_macros": {
    "coordinates": "rust:frunk_proc_macros",
    "name": "frunk_proc_macros",
    "description": "Proc macros for Frunk",
    "license": [""],
    "tags": ["frunk", "macros"],
    "downloads": 3393838,
    "repositories": ["crates.io"]
  },
  "rust:fs4": {
    "coordinates": "rust:fs4",
    "name": "fs4",
    "description": "No libc, pure Rust cross-platform file locks. Original fs2, now supports async and replace libc by rustix.",
    "license": [""],
    "tags": ["duplicate", "lock", "fs2", "flock", "file"],
    "downloads": 4616748,
    "repositories": ["crates.io"]
  },
  "rust:fs_at": {
    "coordinates": "rust:fs_at",
    "name": "fs_at",
    "description": "Implementation of ''at'' functions for various platforms",
    "license": [""],
    "tags": [],
    "downloads": 836953,
    "repositories": ["crates.io"]
  },
  "rust:fsevent-sys": {
    "coordinates": "rust:fsevent-sys",
    "name": "fsevent-sys",
    "description": "Rust bindings to the fsevent macOS API for file changes notifications",
    "license": [""],
    "tags": [],
    "downloads": 9693956,
    "repositories": ["crates.io"]
  },
  "rust:fst": {
    "coordinates": "rust:fst",
    "name": "fst",
    "description": "Use finite state transducers to compactly represents sets or maps of many strings (> 1 billion is possible). ",
    "license": [""],
    "tags": ["retrieval", "dictionary", "information", "map", "search"],
    "downloads": 3838407,
    "repositories": ["crates.io"]
  },
  "rust:futures-bounded": {
    "coordinates": "rust:futures-bounded",
    "name": "futures-bounded",
    "description": "Utilities for bounding futures in size and time.",
    "license": [""],
    "tags": ["backpressure", "futures", "async"],
    "downloads": 493309,
    "repositories": ["crates.io"]
  },
  "rust:futures-rustls": {
    "coordinates": "rust:futures-rustls",
    "name": "futures-rustls",
    "description": "Asynchronous TLS/SSL streams for futures using Rustls.",
    "license": [""],
    "tags": [],
    "downloads": 4792836,
    "repositories": ["crates.io"]
  },
  "rust:futures-test": {
    "coordinates": "rust:futures-test",
    "name": "futures-test",
    "description": "Common utilities for testing components built off futures-rs. ",
    "license": [""],
    "tags": [],
    "downloads": 1098255,
    "repositories": ["crates.io"]
  },
  "rust:futures-ticker": {
    "coordinates": "rust:futures-ticker",
    "name": "futures-ticker",
    "description": "An asynchronous recurring time event",
    "license": [""],
    "tags": [],
    "downloads": 564823,
    "repositories": ["crates.io"]
  },
  "rust:futures-utils-wasm": {
    "coordinates": "rust:futures-utils-wasm",
    "name": "futures-utils-wasm",
    "description": "Simple utilities for futures Send bounds",
    "license": [""],
    "tags": ["hex", "fmt", "bytes"],
    "downloads": 12740,
    "repositories": ["crates.io"]
  },
  "rust:fuzzy-matcher": {
    "coordinates": "rust:fuzzy-matcher",
    "name": "fuzzy-matcher",
    "description": "Fuzzy Matching Library",
    "license": [""],
    "tags": ["match", "search", "fuzzy", "text"],
    "downloads": 2103143,
    "repositories": ["crates.io"]
  },
  "rust:fxprof-processed-profile": {
    "coordinates": "rust:fxprof-processed-profile",
    "name": "fxprof-processed-profile",
    "description": "Create profiles in the Firefox Profiler''s processed profile JSON format.",
    "license": [""],
    "tags": [],
    "downloads": 1151704,
    "repositories": ["crates.io"]
  },
  "rust:gag": {
    "coordinates": "rust:gag",
    "name": "gag",
    "description": "Gag, redirect, or hold stdout/stderr output. Currently only *nix operating systems are supported.",
    "license": [""],
    "tags": ["stderr", "stdio", "redirect", "stdout"],
    "downloads": 1309702,
    "repositories": ["crates.io"]
  },
  "rust:gcd": {
    "coordinates": "rust:gcd",
    "name": "gcd",
    "description": "Calculate the greatest common divisor",
    "license": [""],
    "tags": [],
    "downloads": 2219150,
    "repositories": ["crates.io"]
  },
  "rust:gdbstub": {
    "coordinates": "rust:gdbstub",
    "name": "gdbstub",
    "description": "An implementation of the GDB Remote Serial Protocol in Rust",
    "license": [""],
    "tags": ["emulation", "no_std", "gdb", "debugging"],
    "downloads": 554298,
    "repositories": ["crates.io"]
  },
  "rust:gdk": {
    "coordinates": "rust:gdk",
    "name": "gdk",
    "description": "Rust bindings for the GDK 3 library",
    "license": [""],
    "tags": ["gdk", "gtk-rs", "gtk", "gnome", "gui"],
    "downloads": 3336508,
    "repositories": ["crates.io"]
  },
  "rust:gdk-pixbuf": {
    "coordinates": "rust:gdk-pixbuf",
    "name": "gdk-pixbuf",
    "description": "Rust bindings for the GdkPixbuf library",
    "license": [""],
    "tags": ["gdk-pixbuf", "gtk-rs", "gnome"],
    "downloads": 4201586,
    "repositories": ["crates.io"]
  },
  "rust:gdk-pixbuf-sys": {
    "coordinates": "rust:gdk-pixbuf-sys",
    "name": "gdk-pixbuf-sys",
    "description": "FFI bindings to libgdk_pixbuf-2.0",
    "license": [""],
    "tags": ["ffi", "gtk-rs", "gnome", "gdk-pixbuf"],
    "downloads": 4660859,
    "repositories": ["crates.io"]
  },
  "rust:gdk-sys": {
    "coordinates": "rust:gdk-sys",
    "name": "gdk-sys",
    "description": "FFI bindings to libgdk-3",
    "license": [""],
    "tags": ["gdk", "ffi", "gtk-rs", "gnome"],
    "downloads": 3712973,
    "repositories": ["crates.io"]
  },
  "rust:gdk4": {
    "coordinates": "rust:gdk4",
    "name": "gdk4",
    "description": "Rust bindings of the GDK 4 library",
    "license": [""],
    "tags": ["gdk", "gdk4", "gui", "gtk-rs", "gnome"],
    "downloads": 820664,
    "repositories": ["crates.io"]
  },
  "rust:gdk4-sys": {
    "coordinates": "rust:gdk4-sys",
    "name": "gdk4-sys",
    "description": "FFI bindings of GDK 4",
    "license": [""],
    "tags": ["gdk", "gdk4", "gtk-rs", "gnome", "ffi"],
    "downloads": 815343,
    "repositories": ["crates.io"]
  },
  "rust:gdkwayland-sys": {
    "coordinates": "rust:gdkwayland-sys",
    "name": "gdkwayland-sys",
    "description": "FFI bindings to libgdk-3-wayland",
    "license": [""],
    "tags": ["gdk", "ffi", "gtk-rs", "gnome"],
    "downloads": 1259568,
    "repositories": ["crates.io"]
  },
  "rust:gdkx11": {
    "coordinates": "rust:gdkx11",
    "name": "gdkx11",
    "description": "Rust bindings for the GDK X11 library",
    "license": [""],
    "tags": ["gdk", "gtk-rs", "gdkx11", "gnome", "gui"],
    "downloads": 149909,
    "repositories": ["crates.io"]
  },
  "rust:gdkx11-sys": {
    "coordinates": "rust:gdkx11-sys",
    "name": "gdkx11-sys",
    "description": "FFI binding for libgdkx11",
    "license": [""],
    "tags": ["ffi", "gtk-rs", "gdkx11", "gnome"],
    "downloads": 1740960,
    "repositories": ["crates.io"]
  },
  "rust:gemm": {
    "coordinates": "rust:gemm",
    "name": "gemm",
    "description": "Playground for matrix multiplication algorithms",
    "license": [""],
    "tags": ["linear-algebra"],
    "downloads": 245824,
    "repositories": ["crates.io"]
  },
  "rust:gemm-c32": {
    "coordinates": "rust:gemm-c32",
    "name": "gemm-c32",
    "description": "Playground for matrix multiplication algorithms",
    "license": [""],
    "tags": ["linear-algebra"],
    "downloads": 239513,
    "repositories": ["crates.io"]
  },
  "rust:gemm-c64": {
    "coordinates": "rust:gemm-c64",
    "name": "gemm-c64",
    "description": "Playground for matrix multiplication algorithms",
    "license": [""],
    "tags": ["linear-algebra"],
    "downloads": 239502,
    "repositories": ["crates.io"]
  },
  "rust:gemm-common": {
    "coordinates": "rust:gemm-common",
    "name": "gemm-common",
    "description": "Playground for matrix multiplication algorithms",
    "license": [""],
    "tags": ["linear-algebra"],
    "downloads": 241458,
    "repositories": ["crates.io"]
  },
  "rust:gemm-f16": {
    "coordinates": "rust:gemm-f16",
    "name": "gemm-f16",
    "description": "Playground for matrix multiplication algorithms",
    "license": [""],
    "tags": ["linear-algebra"],
    "downloads": 236414,
    "repositories": ["crates.io"]
  },
  "rust:gemm-f32": {
    "coordinates": "rust:gemm-f32",
    "name": "gemm-f32",
    "description": "Playground for matrix multiplication algorithms",
    "license": [""],
    "tags": ["linear-algebra"],
    "downloads": 240022,
    "repositories": ["crates.io"]
  },
  "rust:gemm-f64": {
    "coordinates": "rust:gemm-f64",
    "name": "gemm-f64",
    "description": "Playground for matrix multiplication algorithms",
    "license": [""],
    "tags": ["linear-algebra"],
    "downloads": 239553,
    "repositories": ["crates.io"]
  },
  "rust:generator": {
    "coordinates": "rust:generator",
    "name": "generator",
    "description": "Stackfull Generator Library in Rust",
    "license": [""],
    "tags": ["green", "fiber", "coroutine", "generator", "thread"],
    "downloads": 6057479,
    "repositories": ["crates.io"]
  },
  "rust:generic_static": {
    "coordinates": "rust:generic_static",
    "name": "generic_static",
    "description": "Generic static variables in generic functions.",
    "license": [""],
    "tags": [],
    "downloads": 58504,
    "repositories": ["crates.io"]
  },
  "rust:geo": {
    "coordinates": "rust:geo",
    "name": "geo",
    "description": "Geospatial primitives and algorithms",
    "license": [""],
    "tags": ["geography", "geospatial", "geo", "gis"],
    "downloads": 3193127,
    "repositories": ["crates.io"]
  },
  "rust:geo-types": {
    "coordinates": "rust:geo-types",
    "name": "geo-types",
    "description": "Geospatial primitive data types",
    "license": [""],
    "tags": ["geography", "geospatial", "geo", "gis"],
    "downloads": 3535027,
    "repositories": ["crates.io"]
  },
  "rust:geographiclib-rs": {
    "coordinates": "rust:geographiclib-rs",
    "name": "geographiclib-rs",
    "description": "A port of geographiclib in Rust.",
    "license": [""],
    "tags": ["geospatial", "gis", "geography", "geo"],
    "downloads": 2427269,
    "repositories": ["crates.io"]
  },
  "rust:geoutils": {
    "coordinates": "rust:geoutils",
    "name": "geoutils",
    "description": "A collection of geo computation utilities",
    "license": [""],
    "tags": ["geolib", "geofence", "geolocation"],
    "downloads": 525847,
    "repositories": ["crates.io"]
  },
  "rust:get_if_addrs": {
    "coordinates": "rust:get_if_addrs",
    "name": "get_if_addrs",
    "description": "Return interface IP addresses on Posix and windows systems",
    "license": [""],
    "tags": [],
    "downloads": 2253397,
    "repositories": ["crates.io"]
  },
  "rust:get_if_addrs-sys": {
    "coordinates": "rust:get_if_addrs-sys",
    "name": "get_if_addrs-sys",
    "description": "get_if_addrs sys crate",
    "license": [""],
    "tags": [],
    "downloads": 977761,
    "repositories": ["crates.io"]
  },
  "rust:getrandom_or_panic": {
    "coordinates": "rust:getrandom_or_panic",
    "name": "getrandom_or_panic",
    "description": " Implements a RngCore which panics unless getrandom exists ",
    "license": [""],
    "tags": ["random", "cryptography"],
    "downloads": 639917,
    "repositories": ["crates.io"]
  },
  "rust:getset": {
    "coordinates": "rust:getset",
    "name": "getset",
    "description": "Getset, we''re ready to go!  A procedural macro for generating the most basic getters and setters on fields. ",
    "license": [""],
    "tags": ["setter", "getter", "getters", "setters", "macro"],
    "downloads": 9098465,
    "repositories": ["crates.io"]
  },
  "rust:gettext-rs": {
    "coordinates": "rust:gettext-rs",
    "name": "gettext-rs",
    "description": "Safe bindings for gettext",
    "license": [""],
    "tags": ["l10n", "i18n", "gettext", "binding", "ffi"],
    "downloads": 1395577,
    "repositories": ["crates.io"]
  },
  "rust:gettext-sys": {
    "coordinates": "rust:gettext-sys",
    "name": "gettext-sys",
    "description": "Raw FFI bindings for gettext",
    "license": [""],
    "tags": ["l10n", "binding", "gettext", "ffi", "i18n"],
    "downloads": 1370705,
    "repositories": ["crates.io"]
  },
  "rust:gio": {
    "coordinates": "rust:gio",
    "name": "gio",
    "description": "Rust bindings for the Gio library",
    "license": [""],
    "tags": ["gtk-rs", "gio", "glib", "gnome"],
    "downloads": 5094215,
    "repositories": ["crates.io"]
  },
  "rust:gio-sys": {
    "coordinates": "rust:gio-sys",
    "name": "gio-sys",
    "description": "FFI bindings to libgio-2.0",
    "license": [""],
    "tags": ["gio", "gtk-rs", "gnome", "ffi"],
    "downloads": 6042725,
    "repositories": ["crates.io"]
  },
  "rust:git-cliff-core": {
    "coordinates": "rust:git-cliff-core",
    "name": "git-cliff-core",
    "description": "Core library of git-cliff",
    "license": [""],
    "tags": ["changelog", "commit", "conventional", "generator"],
    "downloads": 96139,
    "repositories": ["crates.io"]
  },
  "rust:git-conventional": {
    "coordinates": "rust:git-conventional",
    "name": "git-conventional",
    "description": "A parser library for the Conventional Commit specification.",
    "license": [""],
    "tags": ["git", "conventional-commit", "commit", "parser", "conventional"],
    "downloads": 220293,
    "repositories": ["crates.io"]
  },
  "rust:gix": {
    "coordinates": "rust:gix",
    "name": "gix",
    "description": "Interact with git repositories just like git would",
    "license": [""],
    "tags": [],
    "downloads": 3355641,
    "repositories": ["crates.io"]
  },
  "rust:gix-actor": {
    "coordinates": "rust:gix-actor",
    "name": "gix-actor",
    "description": "A way to identify git actors",
    "license": [""],
    "tags": [],
    "downloads": 5501729,
    "repositories": ["crates.io"]
  },
  "rust:gix-attributes": {
    "coordinates": "rust:gix-attributes",
    "name": "gix-attributes",
    "description": "A crate of the gitoxide project dealing .gitattributes files",
    "license": [""],
    "tags": [],
    "downloads": 3076791,
    "repositories": ["crates.io"]
  },
  "rust:gix-bitmap": {
    "coordinates": "rust:gix-bitmap",
    "name": "gix-bitmap",
    "description": "A crate of the gitoxide project dedicated implementing the standard git bitmap format",
    "license": [""],
    "tags": [],
    "downloads": 3040141,
    "repositories": ["crates.io"]
  },
  "rust:gix-chunk": {
    "coordinates": "rust:gix-chunk",
    "name": "gix-chunk",
    "description": "Interact with the git chunk file format used in multi-pack index and commit-graph files",
    "license": [""],
    "tags": [],
    "downloads": 3030089,
    "repositories": ["crates.io"]
  },
  "rust:gix-command": {
    "coordinates": "rust:gix-command",
    "name": "gix-command",
    "description": "A crate of the gitoxide project handling internal git command execution",
    "license": [""],
    "tags": [],
    "downloads": 2863802,
    "repositories": ["crates.io"]
  },
  "rust:gix-commitgraph": {
    "coordinates": "rust:gix-commitgraph",
    "name": "gix-commitgraph",
    "description": "Read-only access to the git commitgraph file format",
    "license": [""],
    "tags": [],
    "downloads": 2666450,
    "repositories": ["crates.io"]
  },
  "rust:gix-config": {
    "coordinates": "rust:gix-config",
    "name": "gix-config",
    "description": "A git-config file parser and editor from the gitoxide project",
    "license": [""],
    "tags": ["git-config", "gitoxide", "config", "git"],
    "downloads": 5482674,
    "repositories": ["crates.io"]
  },
  "rust:gix-config-value": {
    "coordinates": "rust:gix-config-value",
    "name": "gix-config-value",
    "description": "A crate of the gitoxide project providing git-config value parsing",
    "license": [""],
    "tags": [],
    "downloads": 5357084,
    "repositories": ["crates.io"]
  },
  "rust:gix-date": {
    "coordinates": "rust:gix-date",
    "name": "gix-date",
    "description": "A crate of the gitoxide project parsing dates the way git does",
    "license": [""],
    "tags": [],
    "downloads": 5330132,
    "repositories": ["crates.io"]
  },
  "rust:gix-diff": {
    "coordinates": "rust:gix-diff",
    "name": "gix-diff",
    "description": "Calculate differences between various git objects",
    "license": [""],
    "tags": [],
    "downloads": 3348598,
    "repositories": ["crates.io"]
  },
  "rust:gix-dir": {
    "coordinates": "rust:gix-dir",
    "name": "gix-dir",
    "description": "A crate of the gitoxide project dealing with directory walks",
    "license": [""],
    "tags": [],
    "downloads": 34802,
    "repositories": ["crates.io"]
  },
  "rust:gix-discover": {
    "coordinates": "rust:gix-discover",
    "name": "gix-discover",
    "description": "Discover git repositories and check if a directory is a git repository",
    "license": [""],
    "tags": [],
    "downloads": 3361906,
    "repositories": ["crates.io"]
  },
  "rust:gix-features": {
    "coordinates": "rust:gix-features",
    "name": "gix-features",
    "description": "A crate to integrate various capabilities using compile-time feature flags",
    "license": [""],
    "tags": [],
    "downloads": 6300938,
    "repositories": ["crates.io"]
  },
  "rust:gix-filter": {
    "coordinates": "rust:gix-filter",
    "name": "gix-filter",
    "description": "A crate of the gitoxide project implementing git filters",
    "license": [""],
    "tags": [],
    "downloads": 1829515,
    "repositories": ["crates.io"]
  },
  "rust:gix-fs": {
    "coordinates": "rust:gix-fs",
    "name": "gix-fs",
    "description": "A crate providing file system specific utilities to `gitoxide`",
    "license": [""],
    "tags": [],
    "downloads": 5261284,
    "repositories": ["crates.io"]
  },
  "rust:gix-glob": {
    "coordinates": "rust:gix-glob",
    "name": "gix-glob",
    "description": "A crate of the gitoxide project dealing with pattern matching",
    "license": [""],
    "tags": [],
    "downloads": 5438118,
    "repositories": ["crates.io"]
  },
  "rust:gix-hash": {
    "coordinates": "rust:gix-hash",
    "name": "gix-hash",
    "description": "Borrowed and owned git hash digests used to identify git objects",
    "license": [""],
    "tags": [],
    "downloads": 5639487,
    "repositories": ["crates.io"]
  },
  "rust:gix-hashtable": {
    "coordinates": "rust:gix-hashtable",
    "name": "gix-hashtable",
    "description": "A crate that provides hashtable based data structures optimized to utilize ObjectId keys",
    "license": [""],
    "tags": [],
    "downloads": 3224853,
    "repositories": ["crates.io"]
  },
  "rust:gix-ignore": {
    "coordinates": "rust:gix-ignore",
    "name": "gix-ignore",
    "description": "A crate of the gitoxide project dealing .gitignore files",
    "license": [""],
    "tags": [],
    "downloads": 2600723,
    "repositories": ["crates.io"]
  },
  "rust:gix-index": {
    "coordinates": "rust:gix-index",
    "name": "gix-index",
    "description": "A work-in-progress crate of the gitoxide project dedicated implementing the git index file",
    "license": [""],
    "tags": [],
    "downloads": 3318217,
    "repositories": ["crates.io"]
  },
  "rust:gix-lock": {
    "coordinates": "rust:gix-lock",
    "name": "gix-lock",
    "description": "A git-style lock-file implementation",
    "license": [""],
    "tags": [],
    "downloads": 5505255,
    "repositories": ["crates.io"]
  },
  "rust:gix-macros": {
    "coordinates": "rust:gix-macros",
    "name": "gix-macros",
    "description": "Proc-macro utilities for gix",
    "license": [""],
    "tags": [],
    "downloads": 1547890,
    "repositories": ["crates.io"]
  },
  "rust:gix-object": {
    "coordinates": "rust:gix-object",
    "name": "gix-object",
    "description": "Immutable and mutable git objects with decoding and encoding support",
    "license": [""],
    "tags": [],
    "downloads": 5523795,
    "repositories": ["crates.io"]
  },
  "rust:gix-odb": {
    "coordinates": "rust:gix-odb",
    "name": "gix-odb",
    "description": "Implements various git object databases",
    "license": [""],
    "tags": [],
    "downloads": 3346862,
    "repositories": ["crates.io"]
  },
  "rust:gix-pack": {
    "coordinates": "rust:gix-pack",
    "name": "gix-pack",
    "description": "Implements git packs and related data structures",
    "license": [""],
    "tags": [],
    "downloads": 3346320,
    "repositories": ["crates.io"]
  },
  "rust:gix-packetline-blocking": {
    "coordinates": "rust:gix-packetline-blocking",
    "name": "gix-packetline-blocking",
    "description": "A duplicate of `gix-packetline` with the `blocking-io` feature pre-selected",
    "license": [""],
    "tags": [],
    "downloads": 1788523,
    "repositories": ["crates.io"]
  },
  "rust:gix-path": {
    "coordinates": "rust:gix-path",
    "name": "gix-path",
    "description": "A crate of the gitoxide project dealing paths and their conversions",
    "license": [""],
    "tags": [],
    "downloads": 5423282,
    "repositories": ["crates.io"]
  },
  "rust:gix-pathspec": {
    "coordinates": "rust:gix-pathspec",
    "name": "gix-pathspec",
    "description": "A crate of the gitoxide project dealing magical pathspecs",
    "license": [""],
    "tags": [],
    "downloads": 1454987,
    "repositories": ["crates.io"]
  },
  "rust:gix-quote": {
    "coordinates": "rust:gix-quote",
    "name": "gix-quote",
    "description": "A crate of the gitoxide project dealing with various quotations used by git",
    "license": [""],
    "tags": [],
    "downloads": 3106341,
    "repositories": ["crates.io"]
  },
  "rust:gix-ref": {
    "coordinates": "rust:gix-ref",
    "name": "gix-ref",
    "description": "A crate to handle git references",
    "license": [""],
    "tags": [],
    "downloads": 5508747,
    "repositories": ["crates.io"]
  },
  "rust:gix-refspec": {
    "coordinates": "rust:gix-refspec",
    "name": "gix-refspec",
    "description": "A crate of the gitoxide project for parsing and representing refspecs",
    "license": [""],
    "tags": [],
    "downloads": 3329698,
    "repositories": ["crates.io"]
  },
  "rust:gix-revision": {
    "coordinates": "rust:gix-revision",
    "name": "gix-revision",
    "description": "A crate of the gitoxide project dealing with finding names for revisions and parsing specifications",
    "license": [""],
    "tags": [],
    "downloads": 3336662,
    "repositories": ["crates.io"]
  },
  "rust:gix-revwalk": {
    "coordinates": "rust:gix-revwalk",
    "name": "gix-revwalk",
    "description": "A crate providing utilities for walking the revision graph",
    "license": [""],
    "tags": [],
    "downloads": 2622115,
    "repositories": ["crates.io"]
  },
  "rust:gix-sec": {
    "coordinates": "rust:gix-sec",
    "name": "gix-sec",
    "description": "A crate of the gitoxide project providing a shared trust model",
    "license": [""],
    "tags": [],
    "downloads": 5362658,
    "repositories": ["crates.io"]
  },
  "rust:gix-status": {
    "coordinates": "rust:gix-status",
    "name": "gix-status",
    "description": "A crate of the gitoxide project dealing with ''git status''-like functionality",
    "license": [""],
    "tags": [],
    "downloads": 58328,
    "repositories": ["crates.io"]
  },
  "rust:gix-submodule": {
    "coordinates": "rust:gix-submodule",
    "name": "gix-submodule",
    "description": "A crate of the gitoxide project dealing git submodules",
    "license": [""],
    "tags": [],
    "downloads": 1458606,
    "repositories": ["crates.io"]
  },
  "rust:gix-tempfile": {
    "coordinates": "rust:gix-tempfile",
    "name": "gix-tempfile",
    "description": "A tempfile implementation with a global registry to assure cleanup",
    "license": [""],
    "tags": [],
    "downloads": 5588323,
    "repositories": ["crates.io"]
  },
  "rust:gix-trace": {
    "coordinates": "rust:gix-trace",
    "name": "gix-trace",
    "description": "A crate to provide minimal `tracing` support that can be turned off to zero cost",
    "license": [""],
    "tags": [],
    "downloads": 3300767,
    "repositories": ["crates.io"]
  },
  "rust:gix-traverse": {
    "coordinates": "rust:gix-traverse",
    "name": "gix-traverse",
    "description": "A crate of the gitoxide project",
    "license": [""],
    "tags": [],
    "downloads": 3369011,
    "repositories": ["crates.io"]
  },
  "rust:gix-url": {
    "coordinates": "rust:gix-url",
    "name": "gix-url",
    "description": "A crate of the gitoxide project implementing parsing and serialization of gix-url",
    "license": [""],
    "tags": [],
    "downloads": 3394332,
    "repositories": ["crates.io"]
  },
  "rust:gix-utils": {
    "coordinates": "rust:gix-utils",
    "name": "gix-utils",
    "description": "A crate with `gitoxide` utilities that don''t need feature toggles",
    "license": [""],
    "tags": [],
    "downloads": 4774432,
    "repositories": ["crates.io"]
  },
  "rust:gix-validate": {
    "coordinates": "rust:gix-validate",
    "name": "gix-validate",
    "description": "Validation functions for various kinds of names in git",
    "license": [""],
    "tags": [],
    "downloads": 5293487,
    "repositories": ["crates.io"]
  },
  "rust:gix-worktree": {
    "coordinates": "rust:gix-worktree",
    "name": "gix-worktree",
    "description": "A crate of the gitoxide project for shared worktree related types and utilities.",
    "license": [""],
    "tags": [],
    "downloads": 3103878,
    "repositories": ["crates.io"]
  },
  "rust:gl_generator": {
    "coordinates": "rust:gl_generator",
    "name": "gl_generator",
    "description": "Code generators for creating bindings to the Khronos OpenGL APIs.",
    "license": [""],
    "tags": ["opengl", "egl", "khronos", "gl"],
    "downloads": 6591284,
    "repositories": ["crates.io"]
  },
  "rust:glam": {
    "coordinates": "rust:glam",
    "name": "glam",
    "description": "A simple and fast 3D math library for games and graphics",
    "license": [""],
    "tags": ["math", "vector", "quaternion", "gamedev", "matrix"],
    "downloads": 4886564,
    "repositories": ["crates.io"]
  },
  "rust:glib": {
    "coordinates": "rust:glib",
    "name": "glib",
    "description": "Rust bindings for the GLib library",
    "license": [""],
    "tags": ["gtk-rs", "gui", "glib", "gnome"],
    "downloads": 7254698,
    "repositories": ["crates.io"]
  },
  "rust:glib-build-tools": {
    "coordinates": "rust:glib-build-tools",
    "name": "glib-build-tools",
    "description": "Rust bindings for the Gio library, build script utils crate",
    "license": [""],
    "tags": ["gio", "gtk-rs", "glib", "gnome", "build-dependencies"],
    "downloads": 63986,
    "repositories": ["crates.io"]
  },
  "rust:glib-macros": {
    "coordinates": "rust:glib-macros",
    "name": "glib-macros",
    "description": "Rust bindings for the GLib library, proc macros crate",
    "license": [""],
    "tags": ["gtk-rs", "gui", "gnome", "glib"],
    "downloads": 6108334,
    "repositories": ["crates.io"]
  },
  "rust:glib-sys": {
    "coordinates": "rust:glib-sys",
    "name": "glib-sys",
    "description": "FFI bindings to libglib-2.0",
    "license": [""],
    "tags": ["gtk-rs", "gnome", "ffi", "glib"],
    "downloads": 7525924,
    "repositories": ["crates.io"]
  },
  "rust:global-hotkey": {
    "coordinates": "rust:global-hotkey",
    "name": "global-hotkey",
    "description": "Global hotkeys for Desktop Applications",
    "license": [""],
    "tags": ["windowing", "global", "global-hotkey", "hotkey"],
    "downloads": 41569,
    "repositories": ["crates.io"]
  },
  "rust:gloo": {
    "coordinates": "rust:gloo",
    "name": "gloo",
    "description": "A modular toolkit for Rust and WebAssembly",
    "license": [""],
    "tags": [],
    "downloads": 1543138,
    "repositories": ["crates.io"]
  },
  "rust:gloo-console": {
    "coordinates": "rust:gloo-console",
    "name": "gloo-console",
    "description": "Convenience crate for working with browser''s console",
    "license": [""],
    "tags": [],
    "downloads": 1061989,
    "repositories": ["crates.io"]
  },
  "rust:gloo-dialogs": {
    "coordinates": "rust:gloo-dialogs",
    "name": "gloo-dialogs",
    "description": "Convenience crate for working with dialogs in browser",
    "license": [""],
    "tags": [],
    "downloads": 1013473,
    "repositories": ["crates.io"]
  },
  "rust:gloo-events": {
    "coordinates": "rust:gloo-events",
    "name": "gloo-events",
    "description": "Convenience crate for working with DOM event listeners",
    "license": [""],
    "tags": [],
    "downloads": 1456645,
    "repositories": ["crates.io"]
  },
  "rust:gloo-file": {
    "coordinates": "rust:gloo-file",
    "name": "gloo-file",
    "description": "Convenience crate for working with JavaScript files and blobs",
    "license": [""],
    "tags": [],
    "downloads": 1494969,
    "repositories": ["crates.io"]
  },
  "rust:gloo-history": {
    "coordinates": "rust:gloo-history",
    "name": "gloo-history",
    "description": "Universal Session History",
    "license": [""],
    "tags": [],
    "downloads": 824263,
    "repositories": ["crates.io"]
  },
  "rust:gloo-net": {
    "coordinates": "rust:gloo-net",
    "name": "gloo-net",
    "description": "HTTP requests library for WASM Apps",
    "license": [""],
    "tags": ["requests", "websockets", "wasm", "http"],
    "downloads": 2610964,
    "repositories": ["crates.io"]
  },
  "rust:gloo-render": {
    "coordinates": "rust:gloo-render",
    "name": "gloo-render",
    "description": "Convenience crate for working with browser''s requestAnimationFrame",
    "license": [""],
    "tags": [],
    "downloads": 1025666,
    "repositories": ["crates.io"]
  },
  "rust:gloo-storage": {
    "coordinates": "rust:gloo-storage",
    "name": "gloo-storage",
    "description": "Convenience crate for working with local and session storage in browser",
    "license": [""],
    "tags": [],
    "downloads": 1110620,
    "repositories": ["crates.io"]
  },
  "rust:gloo-utils": {
    "coordinates": "rust:gloo-utils",
    "name": "gloo-utils",
    "description": "Convenience crate for common `web_sys` features",
    "license": [""],
    "tags": [],
    "downloads": 3908965,
    "repositories": ["crates.io"]
  },
  "rust:gloo-worker": {
    "coordinates": "rust:gloo-worker",
    "name": "gloo-worker",
    "description": "Convenience crate for working with Web Workers",
    "license": [""],
    "tags": [],
    "downloads": 897858,
    "repositories": ["crates.io"]
  },
  "rust:glow": {
    "coordinates": "rust:glow",
    "name": "glow",
    "description": "GL on Whatever: a set of bindings to run GL (Open GL, OpenGL ES, and WebGL) anywhere, and avoid target-specific code.",
    "license": [""],
    "tags": [],
    "downloads": 5395261,
    "repositories": ["crates.io"]
  },
  "rust:gltf": {
    "coordinates": "rust:gltf",
    "name": "gltf",
    "description": "glTF 2.0 loader",
    "license": [""],
    "tags": ["gltf", "scene", "asset", "3d", "model"],
    "downloads": 1879872,
    "repositories": ["crates.io"]
  },
  "rust:gltf-derive": {
    "coordinates": "rust:gltf-derive",
    "name": "gltf-derive",
    "description": "Internal macros for the gltf crate",
    "license": [""],
    "tags": [],
    "downloads": 1864625,
    "repositories": ["crates.io"]
  },
  "rust:gltf-json": {
    "coordinates": "rust:gltf-json",
    "name": "gltf-json",
    "description": "JSON parsing for the gltf crate",
    "license": [""],
    "tags": [],
    "downloads": 1861092,
    "repositories": ["crates.io"]
  },
  "rust:glutin_wgl_sys": {
    "coordinates": "rust:glutin_wgl_sys",
    "name": "glutin_wgl_sys",
    "description": "The wgl bindings for glutin",
    "license": [""],
    "tags": [],
    "downloads": 1740620,
    "repositories": ["crates.io"]
  },
  "rust:glyphon": {
    "coordinates": "rust:glyphon",
    "name": "glyphon",
    "description": "Fast, simple 2D text rendering for wgpu",
    "license": [""],
    "tags": [],
    "downloads": 130264,
    "repositories": ["crates.io"]
  },
  "rust:goauth": {
    "coordinates": "rust:goauth",
    "name": "goauth",
    "description": "Crate for authenticating Server to Server Apps for Google Cloud Engine.",
    "license": [""],
    "tags": ["oauth", "cloud", "engine", "google", "server"],
    "downloads": 2997046,
    "repositories": ["crates.io"]
  },
  "rust:gobject-sys": {
    "coordinates": "rust:gobject-sys",
    "name": "gobject-sys",
    "description": "FFI bindings to libgobject-2.0",
    "license": [""],
    "tags": ["gtk-rs", "gobject", "gnome", "ffi"],
    "downloads": 7457673,
    "repositories": ["crates.io"]
  },
  "rust:goblin": {
    "coordinates": "rust:goblin",
    "name": "goblin",
    "description": "An impish, cross-platform, ELF, Mach-o, and PE binary parsing and loading crate",
    "license": [""],
    "tags": ["mach", "pe", "elf", "archive", "binary"],
    "downloads": 9104279,
    "repositories": ["crates.io"]
  },
  "rust:google-cloud-auth": {
    "coordinates": "rust:google-cloud-auth",
    "name": "google-cloud-auth",
    "description": "Google Cloud Platform server application authentication library.",
    "license": [""],
    "tags": ["googleapis", "auth", "google-cloud-rust", "gcp"],
    "downloads": 1090562,
    "repositories": ["crates.io"]
  },
  "rust:google-cloud-gax": {
    "coordinates": "rust:google-cloud-gax",
    "name": "google-cloud-gax",
    "description": "Google Cloud Platform gRPC retry library.",
    "license": [""],
    "tags": ["gcp", "google-cloud-rust", "googleapis"],
    "downloads": 742316,
    "repositories": ["crates.io"]
  },
  "rust:google-cloud-googleapis": {
    "coordinates": "rust:google-cloud-googleapis",
    "name": "google-cloud-googleapis",
    "description": "Google Cloud Platform rust client.",
    "license": [""],
    "tags": ["gcp", "google-cloud-rust", "googleapis"],
    "downloads": 758007,
    "repositories": ["crates.io"]
  },
  "rust:google-cloud-metadata": {
    "coordinates": "rust:google-cloud-metadata",
    "name": "google-cloud-metadata",
    "description": "Google Cloud Platform rust client.",
    "license": [""],
    "tags": ["gcp", "googleapis", "google-cloud-rust"],
    "downloads": 1059563,
    "repositories": ["crates.io"]
  },
  "rust:google-cloud-pubsub": {
    "coordinates": "rust:google-cloud-pubsub",
    "name": "google-cloud-pubsub",
    "description": "Google Cloud Platform pubsub client library.",
    "license": [""],
    "tags": ["googleapis", "google-cloud-rust", "gcp", "pubsub"],
    "downloads": 702118,
    "repositories": ["crates.io"]
  },
  "rust:google-cloud-token": {
    "coordinates": "rust:google-cloud-token",
    "name": "google-cloud-token",
    "description": "Google Cloud Platform token spec.",
    "license": [""],
    "tags": ["google-cloud-rust", "googleapis", "gcp"],
    "downloads": 1054018,
    "repositories": ["crates.io"]
  },
  "rust:googletest": {
    "coordinates": "rust:googletest",
    "name": "googletest",
    "description": "A rich assertion and matcher library inspired by GoogleTest for C++",
    "license": [""],
    "tags": ["assertions", "matcher", "unit", "testing"],
    "downloads": 116231,
    "repositories": ["crates.io"]
  },
  "rust:googletest_macro": {
    "coordinates": "rust:googletest_macro",
    "name": "googletest_macro",
    "description": "Procedural macros for GoogleTest Rust",
    "license": [""],
    "tags": ["assertions", "matcher", "unit", "testing"],
    "downloads": 116080,
    "repositories": ["crates.io"]
  },
  "rust:gpu-alloc": {
    "coordinates": "rust:gpu-alloc",
    "name": "gpu-alloc",
    "description": "Implementation agnostic memory allocator for Vulkan like APIs",
    "license": [""],
    "tags": ["allocation", "gpu", "vulkan", "no-std"],
    "downloads": 3858772,
    "repositories": ["crates.io"]
  },
  "rust:gpu-alloc-types": {
    "coordinates": "rust:gpu-alloc-types",
    "name": "gpu-alloc-types",
    "description": "Core types of gpu-alloc crate",
    "license": [""],
    "tags": ["allocation", "gpu", "vulkan", "no-std"],
    "downloads": 3573114,
    "repositories": ["crates.io"]
  },
  "rust:gpu-allocator": {
    "coordinates": "rust:gpu-allocator",
    "name": "gpu-allocator",
    "description": "Memory allocator for GPU memory in Vulkan and DirectX 12",
    "license": [""],
    "tags": ["allocator", "vulkan", "memory"],
    "downloads": 1269736,
    "repositories": ["crates.io"]
  },
  "rust:gpu-descriptor": {
    "coordinates": "rust:gpu-descriptor",
    "name": "gpu-descriptor",
    "description": "Implementation agnostic descriptor allocator for Vulkan like APIs",
    "license": [""],
    "tags": ["gpu", "no-std", "vulkan"],
    "downloads": 3732306,
    "repositories": ["crates.io"]
  },
  "rust:gpu-descriptor-types": {
    "coordinates": "rust:gpu-descriptor-types",
    "name": "gpu-descriptor-types",
    "description": "Core types of gpu-descriptor crate",
    "license": [""],
    "tags": ["gpu", "no-std", "allocation", "vulkan"],
    "downloads": 3570613,
    "repositories": ["crates.io"]
  },
  "rust:graphene-rs": {
    "coordinates": "rust:graphene-rs",
    "name": "graphene-rs",
    "description": "Rust bindings for the Graphene library",
    "license": [""],
    "tags": ["graphene", "graphene-rs", "gtk-rs", "gui", "gnome"],
    "downloads": 790489,
    "repositories": ["crates.io"]
  },
  "rust:graphene-sys": {
    "coordinates": "rust:graphene-sys",
    "name": "graphene-sys",
    "description": "FFI bindings to libgraphene-1.0",
    "license": [""],
    "tags": ["ffi", "gnome", "gtk-rs", "graphene"],
    "downloads": 799543,
    "repositories": ["crates.io"]
  },
  "rust:graphql-parser": {
    "coordinates": "rust:graphql-parser",
    "name": "graphql-parser",
    "description": "    A parser, AST and serializer for graphql query language and scheme     definition language (sometimes called IDL). ",
    "license": [""],
    "tags": ["parser", "graphql"],
    "downloads": 6253496,
    "repositories": ["crates.io"]
  },
  "rust:grenad": {
    "coordinates": "rust:grenad",
    "name": "grenad",
    "description": "Tools to sort, merge, write, and read immutable key-value pairs.",
    "license": [""],
    "tags": [],
    "downloads": 171866,
    "repositories": ["crates.io"]
  },
  "rust:grep-matcher": {
    "coordinates": "rust:grep-matcher",
    "name": "grep-matcher",
    "description": "A trait for regular expressions, with a focus on line oriented search. ",
    "license": [""],
    "tags": ["pattern", "trait", "regex"],
    "downloads": 1847993,
    "repositories": ["crates.io"]
  },
  "rust:grep-regex": {
    "coordinates": "rust:grep-regex",
    "name": "grep-regex",
    "description": "Use Rust''s regex library with the ''grep'' crate. ",
    "license": [""],
    "tags": ["search", "line", "grep", "pattern", "regex"],
    "downloads": 1178168,
    "repositories": ["crates.io"]
  },
  "rust:grep-searcher": {
    "coordinates": "rust:grep-searcher",
    "name": "grep-searcher",
    "description": "Fast line oriented regex searching as a library. ",
    "license": [""],
    "tags": ["search", "grep", "egrep", "regex", "pattern"],
    "downloads": 1861084,
    "repositories": ["crates.io"]
  },
  "rust:grok": {
    "coordinates": "rust:grok",
    "name": "grok",
    "description": "A rust implementation of the popular java & ruby grok library which allows easy text and log file processing with composable  patterns. ",
    "license": [""],
    "tags": [],
    "downloads": 759388,
    "repositories": ["crates.io"]
  },
  "rust:gsk4": {
    "coordinates": "rust:gsk4",
    "name": "gsk4",
    "description": "Rust bindings of the GSK 4 library",
    "license": [""],
    "tags": ["gsk4", "gsk", "gtk-rs", "gui", "gnome"],
    "downloads": 815192,
    "repositories": ["crates.io"]
  },
  "rust:gsk4-sys": {
    "coordinates": "rust:gsk4-sys",
    "name": "gsk4-sys",
    "description": "FFI bindings of GSK 4",
    "license": [""],
    "tags": ["gsk", "gtk-rs", "gnome", "ffi"],
    "downloads": 812299,
    "repositories": ["crates.io"]
  },
  "rust:gtk": {
    "coordinates": "rust:gtk",
    "name": "gtk",
    "description": "Rust bindings for the GTK+ 3 library",
    "license": [""],
    "tags": ["gtk-rs", "gui", "gnome", "gtk"],
    "downloads": 3351941,
    "repositories": ["crates.io"]
  },
  "rust:gtk-sys": {
    "coordinates": "rust:gtk-sys",
    "name": "gtk-sys",
    "description": "FFI bindings to libgtk-3",
    "license": [""],
    "tags": ["ffi", "gtk-rs", "gtk", "gnome"],
    "downloads": 3705911,
    "repositories": ["crates.io"]
  },
  "rust:gtk3-macros": {
    "coordinates": "rust:gtk3-macros",
    "name": "gtk3-macros",
    "description": "Rust bindings for the GTK 3 library",
    "license": [""],
    "tags": ["gtk-rs", "gtk3", "gtk", "gnome", "gui"],
    "downloads": 2439256,
    "repositories": ["crates.io"]
  },
  "rust:gtk4": {
    "coordinates": "rust:gtk4",
    "name": "gtk4",
    "description": "Rust bindings of the GTK 4 library",
    "license": [""],
    "tags": ["gtk-rs", "gui", "gtk4", "gtk", "gnome"],
    "downloads": 825710,
    "repositories": ["crates.io"]
  },
  "rust:gtk4-macros": {
    "coordinates": "rust:gtk4-macros",
    "name": "gtk4-macros",
    "description": "Macros helpers for GTK 4 bindings",
    "license": [""],
    "tags": ["gtk-rs", "gui", "gtk4", "gtk", "gnome"],
    "downloads": 818147,
    "repositories": ["crates.io"]
  },
  "rust:gtk4-sys": {
    "coordinates": "rust:gtk4-sys",
    "name": "gtk4-sys",
    "description": "FFI bindings of GTK 4",
    "license": [""],
    "tags": ["gtk-rs", "gtk4", "gtk", "gnome", "ffi"],
    "downloads": 813003,
    "repositories": ["crates.io"]
  },
  "rust:guillotiere": {
    "coordinates": "rust:guillotiere",
    "name": "guillotiere",
    "description": "A dynamic 2D texture atlas allocator with fast deallocation.",
    "license": [""],
    "tags": ["2d", "graphics"],
    "downloads": 2151379,
    "repositories": ["crates.io"]
  },
  "rust:gxhash": {
    "coordinates": "rust:gxhash",
    "name": "gxhash",
    "description": "GxHash non-cryptographic algorithm",
    "license": [""],
    "tags": ["hasher", "hashmap", "no-std", "hash", "crypto"],
    "downloads": 13891,
    "repositories": ["crates.io"]
  },
  "rust:halfbrown": {
    "coordinates": "rust:halfbrown",
    "name": "halfbrown",
    "description": "Multi backend HashMap for higher performance on different key space sizes",
    "license": [""],
    "tags": [],
    "downloads": 1499577,
    "repositories": ["crates.io"]
  },
  "rust:hash-db": {
    "coordinates": "rust:hash-db",
    "name": "hash-db",
    "description": "Trait for hash-keyed databases.",
    "license": [""],
    "tags": [],
    "downloads": 5074958,
    "repositories": ["crates.io"]
  },
  "rust:hash256-std-hasher": {
    "coordinates": "rust:hash256-std-hasher",
    "name": "hash256-std-hasher",
    "description": "Standard library hasher for 256-bit prehashed keys.",
    "license": [""],
    "tags": [],
    "downloads": 4649806,
    "repositories": ["crates.io"]
  },
  "rust:hash_hasher": {
    "coordinates": "rust:hash_hasher",
    "name": "hash_hasher",
    "description": "A hasher which is designed to work with already-hashed or hash-like data.",
    "license": [""],
    "tags": ["hashset", "hash", "hasher", "hashmap"],
    "downloads": 2528265,
    "repositories": ["crates.io"]
  },
  "rust:hassle-rs": {
    "coordinates": "rust:hassle-rs",
    "name": "hassle-rs",
    "description": "HLSL compiler library, this crate provides an FFI layer and idiomatic rust wrappers for the new DXC HLSL compiler and validator.",
    "license": [""],
    "tags": ["dxc", "shader", "hlsl", "intellisense", "pipeline"],
    "downloads": 1222143,
    "repositories": ["crates.io"]
  },
  "rust:heed": {
    "coordinates": "rust:heed",
    "name": "heed",
    "description": "A fully typed LMDB wrapper with minimum overhead",
    "license": [""],
    "tags": ["database", "storage", "typed", "lmdb"],
    "downloads": 215361,
    "repositories": ["crates.io"]
  },
  "rust:heed-traits": {
    "coordinates": "rust:heed-traits",
    "name": "heed-traits",
    "description": "The traits used inside of the fully typed LMDB wrapper, heed",
    "license": [""],
    "tags": [],
    "downloads": 202403,
    "repositories": ["crates.io"]
  },
  "rust:heed-types": {
    "coordinates": "rust:heed-types",
    "name": "heed-types",
    "description": "The types used with the fully typed LMDB wrapper, heed",
    "license": [""],
    "tags": [],
    "downloads": 202881,
    "repositories": ["crates.io"]
  },
  "rust:hex_fmt": {
    "coordinates": "rust:hex_fmt",
    "name": "hex_fmt",
    "description": "Formatting and shortening byte slices as hexadecimal strings",
    "license": [""],
    "tags": ["hex", "debug", "format", "display"],
    "downloads": 3480424,
    "repositories": ["crates.io"]
  },
  "rust:hex_lit": {
    "coordinates": "rust:hex_lit",
    "name": "hex_lit",
    "description": "Hex macro literals without use of hex macros",
    "license": [""],
    "tags": ["hex", "hex-literal", "literal"],
    "downloads": 947866,
    "repositories": ["crates.io"]
  },
  "rust:hexf-parse": {
    "coordinates": "rust:hexf-parse",
    "name": "hexf-parse",
    "description": "Parses hexadecimal floats (see also hexf)",
    "license": [""],
    "tags": [],
    "downloads": 3759589,
    "repositories": ["crates.io"]
  },
  "rust:hf-hub": {
    "coordinates": "rust:hf-hub",
    "name": "hf-hub",
    "description": "This crates aims ease the interaction with [huggingface](https://huggingface.co/)  It aims to be compatible with [huggingface_hub](https://github.com/huggingface/huggingface_hub/) python package, but only implements a smaller subset of functions. ",
    "license": [""],
    "tags": ["hf", "hub", "huggingface", "machine-learning"],
    "downloads": 179583,
    "repositories": ["crates.io"]
  },
  "rust:hickory-proto": {
    "coordinates": "rust:hickory-proto",
    "name": "hickory-proto",
    "description": "Hickory DNS is a safe and secure DNS library. This is the foundational DNS protocol library for all Hickory DNS projects. ",
    "license": [""],
    "tags": ["dnssec", "dig", "bind", "dns", "named"],
    "downloads": 937156,
    "repositories": ["crates.io"]
  },
  "rust:hickory-resolver": {
    "coordinates": "rust:hickory-resolver",
    "name": "hickory-resolver",
    "description": "Hickory DNS is a safe and secure DNS library. This Resolver library  uses the Client library to perform all DNS queries. The Resolver is intended to be a high-level library for any DNS record resolution see Resolver and AsyncResolver for supported resolution types. The Client can be used for other queries. ",
    "license": [""],
    "tags": ["dnssec", "dig", "bind", "dns", "named"],
    "downloads": 890165,
    "repositories": ["crates.io"]
  },
  "rust:hidapi": {
    "coordinates": "rust:hidapi",
    "name": "hidapi",
    "description": "Rust-y wrapper around hidapi",
    "license": [""],
    "tags": ["usb", "wrapper", "binding", "hid", "api"],
    "downloads": 1989754,
    "repositories": ["crates.io"]
  },
  "rust:histogram": {
    "coordinates": "rust:histogram",
    "name": "histogram",
    "description": "A collection of histogram data structures",
    "license": [""],
    "tags": [],
    "downloads": 4424081,
    "repositories": ["crates.io"]
  },
  "rust:hmac-drbg": {
    "coordinates": "rust:hmac-drbg",
    "name": "hmac-drbg",
    "description": "Pure Rust implementation of Hmac DRBG.",
    "license": [""],
    "tags": [],
    "downloads": 9412443,
    "repositories": ["crates.io"]
  },
  "rust:hound": {
    "coordinates": "rust:hound",
    "name": "hound",
    "description": "A wav encoding and decoding library",
    "license": [""],
    "tags": ["audio", "wav", "wave", "codec"],
    "downloads": 2899462,
    "repositories": ["crates.io"]
  },
  "rust:html-escape": {
    "coordinates": "rust:html-escape",
    "name": "html-escape",
    "description": "This library is for encoding/escaping special characters in HTML and decoding/unescaping HTML entities as well.",
    "license": [""],
    "tags": ["escape", "unescape", "encode", "html", "decode"],
    "downloads": 3840182,
    "repositories": ["crates.io"]
  },
  "rust:html-escaper": {
    "coordinates": "rust:html-escaper",
    "name": "html-escaper",
    "description": "HTML escaping wrapper for core::fmt::Formatter",
    "license": [""],
    "tags": [],
    "downloads": 33718,
    "repositories": ["crates.io"]
  },
  "rust:html_parser": {
    "coordinates": "rust:html_parser",
    "name": "html_parser",
    "description": "A simple and general purpose html/xhtml parser",
    "license": [""],
    "tags": ["dom", "html", "pest", "json", "parser"],
    "downloads": 209083,
    "repositories": ["crates.io"]
  },
  "rust:htmlescape": {
    "coordinates": "rust:htmlescape",
    "name": "htmlescape",
    "description": "A library for HTML entity encoding and decoding",
    "license": [""],
    "tags": [],
    "downloads": 4693716,
    "repositories": ["crates.io"]
  },
  "rust:http-auth-basic": {
    "coordinates": "rust:http-auth-basic",
    "name": "http-auth-basic",
    "description": "HTTP Basic Authentication Scheme (RFC 7617 and RFC 2617 compilant, base64-encoded credentials) for Rust applications",
    "license": [""],
    "tags": [],
    "downloads": 289756,
    "repositories": ["crates.io"]
  },
  "rust:http-body-util": {
    "coordinates": "rust:http-body-util",
    "name": "http-body-util",
    "description": "Combinators and adapters for HTTP request or response bodies. ",
    "license": [""],
    "tags": ["http"],
    "downloads": 4098504,
    "repositories": ["crates.io"]
  },
  "rust:http-cache": {
    "coordinates": "rust:http-cache",
    "name": "http-cache",
    "description": "An HTTP caching middleware",
    "license": [""],
    "tags": ["cache", "middleware", "http"],
    "downloads": 292862,
    "repositories": ["crates.io"]
  },
  "rust:http-cache-reqwest": {
    "coordinates": "rust:http-cache-reqwest",
    "name": "http-cache-reqwest",
    "description": "http-cache middleware implementation for reqwest",
    "license": [""],
    "tags": ["reqwest", "middleware", "cache", "http"],
    "downloads": 222068,
    "repositories": ["crates.io"]
  },
  "rust:http-cache-semantics": {
    "coordinates": "rust:http-cache-semantics",
    "name": "http-cache-semantics",
    "description": "RFC 7234. Parses HTTP headers to correctly compute cacheability of responses, even in complex cases",
    "license": [""],
    "tags": ["proxy", "cache-control", "headers", "http", "cache"],
    "downloads": 355725,
    "repositories": ["crates.io"]
  },
  "rust:http-client": {
    "coordinates": "rust:http-client",
    "name": "http-client",
    "description": "Types and traits for http clients.",
    "license": [""],
    "tags": ["async", "futures", "client", "service", "http"],
    "downloads": 3374390,
    "repositories": ["crates.io"]
  },
  "rust:http-range": {
    "coordinates": "rust:http-range",
    "name": "http-range",
    "description": "HTTP Range header parser",
    "license": [""],
    "tags": [],
    "downloads": 4161803,
    "repositories": ["crates.io"]
  },
  "rust:http-serde": {
    "coordinates": "rust:http-serde",
    "name": "http-serde",
    "description": "Serde support for the http crate. (De)serialize HeaderMap, Uri, Method, StatusCode",
    "license": [""],
    "tags": ["status", "url", "deserialize", "serde", "http"],
    "downloads": 3848426,
    "repositories": ["crates.io"]
  },
  "rust:human_bytes": {
    "coordinates": "rust:human_bytes",
    "name": "human_bytes",
    "description": "Crate to convert bytes into human-readable values",
    "license": [""],
    "tags": ["value-formatting", "conversion", "bytes", "format", "utility"],
    "downloads": 612924,
    "repositories": ["crates.io"]
  },
  "rust:humantime-serde": {
    "coordinates": "rust:humantime-serde",
    "name": "humantime-serde",
    "description": "Serde support for the `humantime` crate",
    "license": [""],
    "tags": ["humantime", "duration", "time", "serde"],
    "downloads": 9142213,
    "repositories": ["crates.io"]
  },
  "rust:hyper-proxy": {
    "coordinates": "rust:hyper-proxy",
    "name": "hyper-proxy",
    "description": "A proxy connector for Hyper-based applications",
    "license": [""],
    "tags": ["proxy", "ssl", "tokio", "hyper"],
    "downloads": 3493079,
    "repositories": ["crates.io"]
  },
  "rust:hyper-system-resolver": {
    "coordinates": "rust:hyper-system-resolver",
    "name": "hyper-system-resolver",
    "description": "An advanced system resolver for use with hyper.",
    "license": [""],
    "tags": ["resolver", "dns", "getaddrinfo", "hyper"],
    "downloads": 324864,
    "repositories": ["crates.io"]
  },
  "rust:hyper-util": {
    "coordinates": "rust:hyper-util",
    "name": "hyper-util",
    "description": "hyper utilities",
    "license": [""],
    "tags": ["hyperium", "hyper", "http"],
    "downloads": 3336832,
    "repositories": ["crates.io"]
  },
  "rust:hyperswitch_interfaces": { "name": "hyperswitch_interfaces" },
  "rust:iai": {
    "coordinates": "rust:iai",
    "name": "iai",
    "description": "One-shot benchmarking library",
    "license": [""],
    "tags": ["iai", "benchmark"],
    "downloads": 1474897,
    "repositories": ["crates.io"]
  },
  "rust:iai-callgrind": {
    "coordinates": "rust:iai-callgrind",
    "name": "iai-callgrind",
    "description": "High-precision and consistent benchmarking framework/harness for Rust",
    "license": [""],
    "tags": ["benchmark", "valgrind", "callgrind", "iai"],
    "downloads": 55614,
    "repositories": ["crates.io"]
  },
  "rust:iai-callgrind-macros": {
    "coordinates": "rust:iai-callgrind-macros",
    "name": "iai-callgrind-macros",
    "description": "Proc macros for iai-callgrind, a high-precision and consistent benchmarking framework/harness for Rust",
    "license": [""],
    "tags": ["benchmark", "valgrind", "callgrind", "iai"],
    "downloads": 27299,
    "repositories": ["crates.io"]
  },
  "rust:iai-callgrind-runner": {
    "coordinates": "rust:iai-callgrind-runner",
    "name": "iai-callgrind-runner",
    "description": "Binary package needed by the iai-callgrind library",
    "license": [""],
    "tags": ["benchmark", "valgrind", "callgrind", "iai"],
    "downloads": 43275,
    "repositories": ["crates.io"]
  },
  "rust:iced": {
    "coordinates": "rust:iced",
    "name": "iced",
    "description": "A cross-platform GUI library inspired by Elm",
    "license": [""],
    "tags": ["widgets", "interface", "ui", "gui", "graphics"],
    "downloads": 453280,
    "repositories": ["crates.io"]
  },
  "rust:iced_core": {
    "coordinates": "rust:iced_core",
    "name": "iced_core",
    "description": "The essential ideas of iced",
    "license": [""],
    "tags": ["graphics", "widgets", "gui", "ui", "interface"],
    "downloads": 478245,
    "repositories": ["crates.io"]
  },
  "rust:iced_futures": {
    "coordinates": "rust:iced_futures",
    "name": "iced_futures",
    "description": "Commands, subscriptions, and future executors for iced",
    "license": [""],
    "tags": ["graphics", "gui", "interface", "widgets", "ui"],
    "downloads": 454107,
    "repositories": ["crates.io"]
  },
  "rust:iced_graphics": {
    "coordinates": "rust:iced_graphics",
    "name": "iced_graphics",
    "description": "A bunch of backend-agnostic types that can be leveraged to build a renderer for iced",
    "license": [""],
    "tags": ["widgets", "interface", "ui", "gui", "graphics"],
    "downloads": 416627,
    "repositories": ["crates.io"]
  },
  "rust:iced_renderer": {
    "coordinates": "rust:iced_renderer",
    "name": "iced_renderer",
    "description": "The official renderer for iced",
    "license": [""],
    "tags": ["widgets", "interface", "ui", "gui", "graphics"],
    "downloads": 96706,
    "repositories": ["crates.io"]
  },
  "rust:iced_runtime": {
    "coordinates": "rust:iced_runtime",
    "name": "iced_runtime",
    "description": "A renderer-agnostic runtime for iced",
    "license": [""],
    "tags": ["widgets", "interface", "ui", "gui", "graphics"],
    "downloads": 99137,
    "repositories": ["crates.io"]
  },
  "rust:iced_style": {
    "coordinates": "rust:iced_style",
    "name": "iced_style",
    "description": "The default set of styles of Iced",
    "license": [""],
    "tags": ["widgets", "interface", "ui", "gui", "graphics"],
    "downloads": 460996,
    "repositories": ["crates.io"]
  },
  "rust:iced_tiny_skia": {
    "coordinates": "rust:iced_tiny_skia",
    "name": "iced_tiny_skia",
    "description": "A software renderer for iced on top of tiny-skia",
    "license": [""],
    "tags": ["widgets", "interface", "ui", "gui", "graphics"],
    "downloads": 98400,
    "repositories": ["crates.io"]
  },
  "rust:iced_wgpu": {
    "coordinates": "rust:iced_wgpu",
    "name": "iced_wgpu",
    "description": "A renderer for iced on top of wgpu",
    "license": [""],
    "tags": ["widgets", "interface", "ui", "gui", "graphics"],
    "downloads": 457806,
    "repositories": ["crates.io"]
  },
  "rust:iced_widget": {
    "coordinates": "rust:iced_widget",
    "name": "iced_widget",
    "description": "The built-in widgets for iced",
    "license": [""],
    "tags": ["interface", "widgets", "gui", "ui", "graphics"],
    "downloads": 101736,
    "repositories": ["crates.io"]
  },
  "rust:iced_winit": {
    "coordinates": "rust:iced_winit",
    "name": "iced_winit",
    "description": "A runtime for iced on top of winit",
    "license": [""],
    "tags": ["widgets", "interface", "gui", "ui", "graphics"],
    "downloads": 455150,
    "repositories": ["crates.io"]
  },
  "rust:icrate": {
    "coordinates": "rust:icrate",
    "name": "icrate",
    "description": "Bindings to Apple''s frameworks",
    "license": [""],
    "tags": ["cocoa", "apple", "ios", "macos", "framework"],
    "downloads": 371003,
    "repositories": ["crates.io"]
  },
  "rust:icu_collections": {
    "coordinates": "rust:icu_collections",
    "name": "icu_collections",
    "description": "Collection of API for use in ICU libraries.",
    "license": [""],
    "tags": [],
    "downloads": 329344,
    "repositories": ["crates.io"]
  },
  "rust:icu_locid": {
    "coordinates": "rust:icu_locid",
    "name": "icu_locid",
    "description": "API for managing Unicode Language and Locale Identifiers",
    "license": [""],
    "tags": [],
    "downloads": 1301935,
    "repositories": ["crates.io"]
  },
  "rust:icu_locid_transform": {
    "coordinates": "rust:icu_locid_transform",
    "name": "icu_locid_transform",
    "description": "API for Unicode Language and Locale Identifiers canonicalization",
    "license": [""],
    "tags": [],
    "downloads": 438882,
    "repositories": ["crates.io"]
  },
  "rust:icu_locid_transform_data": {
    "coordinates": "rust:icu_locid_transform_data",
    "name": "icu_locid_transform_data",
    "description": "Data for the icu_locid_transform crate",
    "license": [""],
    "tags": [],
    "downloads": 376687,
    "repositories": ["crates.io"]
  },
  "rust:icu_normalizer": {
    "coordinates": "rust:icu_normalizer",
    "name": "icu_normalizer",
    "description": "API for normalizing text into Unicode Normalization Forms",
    "license": [""],
    "tags": [],
    "downloads": 283334,
    "repositories": ["crates.io"]
  },
  "rust:icu_normalizer_data": {
    "coordinates": "rust:icu_normalizer_data",
    "name": "icu_normalizer_data",
    "description": "Data for the icu_normalizer crate",
    "license": [""],
    "tags": [],
    "downloads": 80924,
    "repositories": ["crates.io"]
  },
  "rust:icu_properties": {
    "coordinates": "rust:icu_properties",
    "name": "icu_properties",
    "description": "Definitions for Unicode properties",
    "license": [""],
    "tags": [],
    "downloads": 490249,
    "repositories": ["crates.io"]
  },
  "rust:icu_properties_data": {
    "coordinates": "rust:icu_properties_data",
    "name": "icu_properties_data",
    "description": "Data for the icu_properties crate",
    "license": [""],
    "tags": [],
    "downloads": 112809,
    "repositories": ["crates.io"]
  },
  "rust:icu_provider": {
    "coordinates": "rust:icu_provider",
    "name": "icu_provider",
    "description": "Trait and struct definitions for the ICU data provider",
    "license": [""],
    "tags": [],
    "downloads": 1278400,
    "repositories": ["crates.io"]
  },
  "rust:icu_provider_macros": {
    "coordinates": "rust:icu_provider_macros",
    "name": "icu_provider_macros",
    "description": "Proc macros for ICU data providers",
    "license": [""],
    "tags": [],
    "downloads": 1272343,
    "repositories": ["crates.io"]
  },
  "rust:id-arena": {
    "coordinates": "rust:id-arena",
    "name": "id-arena",
    "description": "A simple, id-based arena.",
    "license": [""],
    "tags": [],
    "downloads": 7299398,
    "repositories": ["crates.io"]
  },
  "rust:ieee754": {
    "coordinates": "rust:ieee754",
    "name": "ieee754",
    "description": "Low-level manipulations of IEEE754 floating-point numbers. ",
    "license": [""],
    "tags": ["float", "no_std", "floating-point", "mathematics", "numerics"],
    "downloads": 4964261,
    "repositories": ["crates.io"]
  },
  "rust:if-addrs": {
    "coordinates": "rust:if-addrs",
    "name": "if-addrs",
    "description": "Return interface IP addresses on Posix and windows systems",
    "license": [""],
    "tags": [],
    "downloads": 5479444,
    "repositories": ["crates.io"]
  },
  "rust:if-watch": {
    "coordinates": "rust:if-watch",
    "name": "if-watch",
    "description": "crossplatform asynchronous network watcher",
    "license": [""],
    "tags": ["asynchronous", "routing"],
    "downloads": 4537487,
    "repositories": ["crates.io"]
  },
  "rust:igd-next": {
    "coordinates": "rust:igd-next",
    "name": "igd-next",
    "description": "Internet Gateway Protocol client",
    "license": [""],
    "tags": ["igd", "upnp", "async-std", "tokio"],
    "downloads": 476622,
    "repositories": ["crates.io"]
  },
  "rust:ijson": {
    "coordinates": "rust:ijson",
    "name": "ijson",
    "description": "A more memory efficient replacement for serde_json::Value",
    "license": [""],
    "tags": [],
    "downloads": 114731,
    "repositories": ["crates.io"]
  },
  "rust:im": {
    "coordinates": "rust:im",
    "name": "im",
    "description": "Immutable collection datatypes",
    "license": [""],
    "tags": ["rrb-tree", "hamt", "persistent", "immutable", "b-tree"],
    "downloads": 8311567,
    "repositories": ["crates.io"]
  },
  "rust:image-webp": {
    "coordinates": "rust:image-webp",
    "name": "image-webp",
    "description": "WebP encoding and decoding in pure Rust",
    "license": [""],
    "tags": [],
    "downloads": 290023,
    "repositories": ["crates.io"]
  },
  "rust:imagequant": {
    "coordinates": "rust:imagequant",
    "name": "imagequant",
    "description": "Convert 24/32-bit images to 8-bit palette with alpha channel. For lossy PNG compression and high-quality GIF images Dual-licensed like pngquant. See https://pngquant.org for details.",
    "license": [""],
    "tags": ["palette", "quantization", "pngquant", "gif", "compression"],
    "downloads": 261542,
    "repositories": ["crates.io"]
  },
  "rust:imagesize": {
    "coordinates": "rust:imagesize",
    "name": "imagesize",
    "description": "Quick probing of image dimensions without loading the entire file.",
    "license": [""],
    "tags": ["size", "image"],
    "downloads": 1535108,
    "repositories": ["crates.io"]
  },
  "rust:imara-diff": {
    "coordinates": "rust:imara-diff",
    "name": "imara-diff",
    "description": "Minimal terminfo libary.",
    "license": [""],
    "tags": ["myers", "changes", "difference", "diff", "compare"],
    "downloads": 1673652,
    "repositories": ["crates.io"]
  },
  "rust:imgref": {
    "coordinates": "rust:imgref",
    "name": "imgref",
    "description": "A basic 2-dimensional slice for safe and convenient handling of pixel buffers with width, height & stride",
    "license": [""],
    "tags": ["plane", "vec2d", "stride", "frame", "interoperability"],
    "downloads": 2420825,
    "repositories": ["crates.io"]
  },
  "rust:impl-more": {
    "coordinates": "rust:impl-more",
    "name": "impl-more",
    "description": "Concise, declarative trait implementation macros",
    "license": [""],
    "tags": ["implementations", "implement", "derive", "no-std"],
    "downloads": 1213960,
    "repositories": ["crates.io"]
  },
  "rust:impl-rlp": {
    "coordinates": "rust:impl-rlp",
    "name": "impl-rlp",
    "description": "RLP serialization support for uint and fixed hash.",
    "license": [""],
    "tags": [],
    "downloads": 6677542,
    "repositories": ["crates.io"]
  },
  "rust:include-flate": {
    "coordinates": "rust:include-flate",
    "name": "include-flate",
    "description": "A variant of include_bytes!/include_str! with compile-time deflation and runtime lazy inflation",
    "license": [""],
    "tags": ["assets", "include", "deflate", "compression", "macro"],
    "downloads": 338476,
    "repositories": ["crates.io"]
  },
  "rust:include-flate-codegen": {
    "coordinates": "rust:include-flate-codegen",
    "name": "include-flate-codegen",
    "description": "Macro codegen for the include-flate crate",
    "license": [""],
    "tags": [],
    "downloads": 331312,
    "repositories": ["crates.io"]
  },
  "rust:include-flate-codegen-exports": {
    "coordinates": "rust:include-flate-codegen-exports",
    "name": "include-flate-codegen-exports",
    "description": "Macro codegen for the include-flate crate",
    "license": [""],
    "tags": [],
    "downloads": 318192,
    "repositories": ["crates.io"]
  },
  "rust:include_dir": {
    "coordinates": "rust:include_dir",
    "name": "include_dir",
    "description": "Embed the contents of a directory in your binary",
    "license": [""],
    "tags": ["assets", "dir", "include", "embed"],
    "downloads": 8674846,
    "repositories": ["crates.io"]
  },
  "rust:include_dir_macros": {
    "coordinates": "rust:include_dir_macros",
    "name": "include_dir_macros",
    "description": "The procedural macro used by include_dir",
    "license": [""],
    "tags": [],
    "downloads": 6055945,
    "repositories": ["crates.io"]
  },
  "rust:indent": {
    "coordinates": "rust:indent",
    "name": "indent",
    "description": "Functions for indenting multiline strings",
    "license": [""],
    "tags": ["indent", "multiline", "indentation", "string"],
    "downloads": 424526,
    "repositories": ["crates.io"]
  },
  "rust:index_list": {
    "coordinates": "rust:index_list",
    "name": "index_list",
    "description": "A doubly linked list implemented in safe Rust using vector indexes",
    "license": [""],
    "tags": ["linked-list"],
    "downloads": 1002105,
    "repositories": ["crates.io"]
  },
  "rust:indexmap-nostd": {
    "coordinates": "rust:indexmap-nostd",
    "name": "indexmap-nostd",
    "description": "A no_std compatible implementation of the indexmap crate",
    "license": [""],
    "tags": ["hashmap", "no_std"],
    "downloads": 1701667,
    "repositories": ["crates.io"]
  },
  "rust:inferno": {
    "coordinates": "rust:inferno",
    "name": "inferno",
    "description": "Rust port of the FlameGraph performance profiling tool suite",
    "license": [""],
    "tags": ["flamegraph", "profiling", "perf"],
    "downloads": 5676962,
    "repositories": ["crates.io"]
  },
  "rust:inflections": {
    "coordinates": "rust:inflections",
    "name": "inflections",
    "description": "High performance inflection transformation library for changing properties of words like the case.",
    "license": [""],
    "tags": ["case", "camel", "inflect"],
    "downloads": 3546767,
    "repositories": ["crates.io"]
  },
  "rust:inherent": {
    "coordinates": "rust:inherent",
    "name": "inherent",
    "description": "Make trait methods callable without the trait in scope",
    "license": [""],
    "tags": [],
    "downloads": 3013370,
    "repositories": ["crates.io"]
  },
  "rust:ink-stroke-modeler-rs": {
    "coordinates": "rust:ink-stroke-modeler-rs",
    "name": "ink-stroke-modeler-rs",
    "description": "reserved",
    "license": [""],
    "tags": [],
    "downloads": 335,
    "repositories": ["crates.io"]
  },
  "rust:inlinable_string": {
    "coordinates": "rust:inlinable_string",
    "name": "inlinable_string",
    "description": "The `inlinable_string` crate provides the `InlinableString` type -- an owned, grow-able UTF-8 string that stores small strings inline and avoids heap-allocation -- and the `StringExt` trait which abstracts string operations over both `std::string::String` and `InlinableString` (or even your own custom string type).",
    "license": [""],
    "tags": ["inlinable", "inline", "string"],
    "downloads": 4661849,
    "repositories": ["crates.io"]
  },
  "rust:input_buffer": {
    "coordinates": "rust:input_buffer",
    "name": "input_buffer",
    "description": "A peekable FIFO-like buffer for receiving network data efficiently",
    "license": [""],
    "tags": ["io"],
    "downloads": 7491761,
    "repositories": ["crates.io"]
  },
  "rust:inquire": {
    "coordinates": "rust:inquire",
    "name": "inquire",
    "description": "inquire is a library for building interactive prompts on terminals",
    "license": [""],
    "tags": ["question", "ask", "interactive", "prompt", "cli"],
    "downloads": 1705238,
    "repositories": ["crates.io"]
  },
  "rust:insta": {
    "coordinates": "rust:insta",
    "name": "insta",
    "description": "A snapshot testing library for Rust",
    "license": [""],
    "tags": ["jest", "approval", "snapshot", "testing"],
    "downloads": 9062391,
    "repositories": ["crates.io"]
  },
  "rust:integer-sqrt": {
    "coordinates": "rust:integer-sqrt",
    "name": "integer-sqrt",
    "description": "An implementation of integer square root algorithm for primitive rust types",
    "license": [""],
    "tags": ["square", "sqrt", "root", "isqrt", "integer"],
    "downloads": 4999637,
    "repositories": ["crates.io"]
  },
  "rust:internment": {
    "coordinates": "rust:internment",
    "name": "internment",
    "description": "Easy interning of data",
    "license": [""],
    "tags": ["interning", "hashconsing", "hash", "interner", "caching"],
    "downloads": 2767838,
    "repositories": ["crates.io"]
  },
  "rust:interpolate_name": {
    "coordinates": "rust:interpolate_name",
    "name": "interpolate_name",
    "description": "Simple procedural macro attribute for repetitive tests",
    "license": [""],
    "tags": ["proc_macro", "testing"],
    "downloads": 533572,
    "repositories": ["crates.io"]
  },
  "rust:interpolator": {
    "coordinates": "rust:interpolator",
    "name": "interpolator",
    "description": "runtime format strings, fully compatible with std''s macros",
    "license": [""],
    "tags": ["text", "interpolation", "format"],
    "downloads": 1432427,
    "repositories": ["crates.io"]
  },
  "rust:interprocess": {
    "coordinates": "rust:interprocess",
    "name": "interprocess",
    "description": "Interprocess communication toolkit",
    "license": [""],
    "tags": ["shared_memory", "unix_domain_socket", "ipc", "pipe"],
    "downloads": 836611,
    "repositories": ["crates.io"]
  },
  "rust:interprocess-docfix": {
    "coordinates": "rust:interprocess-docfix",
    "name": "interprocess-docfix",
    "description": "Interprocess communication toolkit. Docs fixed.",
    "license": [""],
    "tags": ["shared_memory", "unix_domain_socket", "ipc", "pipe"],
    "downloads": 78106,
    "repositories": ["crates.io"]
  },
  "rust:intmap": {
    "coordinates": "rust:intmap",
    "name": "intmap",
    "description": "Specialized HashMap for u64 keys",
    "license": [""],
    "tags": ["u64", "hashmap", "intmap"],
    "downloads": 1518145,
    "repositories": ["crates.io"]
  },
  "rust:introspection-connector": { "name": "introspection-connector" },
  "rust:intrusive-collections": {
    "coordinates": "rust:intrusive-collections",
    "name": "intrusive-collections",
    "description": "Intrusive collections for Rust (linked list and red-black tree)",
    "license": [""],
    "tags": ["rbtree", "no_std", "intrusive", "list"],
    "downloads": 1244710,
    "repositories": ["crates.io"]
  },
  "rust:ip_network": {
    "coordinates": "rust:ip_network",
    "name": "ip_network",
    "description": "IPv4 and IPv6 network structs. ",
    "license": [""],
    "tags": ["ipv6", "network", "ipv4", "address", "ip"],
    "downloads": 4725458,
    "repositories": ["crates.io"]
  },
  "rust:irg-kvariants": {
    "coordinates": "rust:irg-kvariants",
    "name": "irg-kvariants",
    "description": "A simple wrapper around kvariant from hfhchan/irg",
    "license": [""],
    "tags": [],
    "downloads": 156334,
    "repositories": ["crates.io"]
  },
  "rust:iri-string": {
    "coordinates": "rust:iri-string",
    "name": "iri-string",
    "description": "IRI as string types",
    "license": [""],
    "tags": ["iri", "uri"],
    "downloads": 2711708,
    "repositories": ["crates.io"]
  },
  "rust:is-docker": {
    "coordinates": "rust:is-docker",
    "name": "is-docker",
    "description": "Checks if the process is running inside a Docker container.",
    "license": [""],
    "tags": [],
    "downloads": 968082,
    "repositories": ["crates.io"]
  },
  "rust:is-wsl": {
    "coordinates": "rust:is-wsl",
    "name": "is-wsl",
    "description": "Checks if the process is running inside Windows Subsystem for Linux.",
    "license": [""],
    "tags": [],
    "downloads": 984963,
    "repositories": ["crates.io"]
  },
  "rust:is_ci": {
    "coordinates": "rust:is_ci",
    "name": "is_ci",
    "description": "Super lightweight CI environment checker. Just tells you if you''re in CI or not without much fuss.",
    "license": [""],
    "tags": ["ci", "build"],
    "downloads": 8578443,
    "repositories": ["crates.io"]
  },
  "rust:iso_country": {
    "coordinates": "rust:iso_country",
    "name": "iso_country",
    "description": "ISO3166-1 countries",
    "license": [""],
    "tags": [],
    "downloads": 516173,
    "repositories": ["crates.io"]
  },
  "rust:iso_currency": {
    "coordinates": "rust:iso_currency",
    "name": "iso_currency",
    "description": "ISO 4217 currency codes",
    "license": [""],
    "tags": ["iso4217", "currency", "iso-4217", "iso"],
    "downloads": 464644,
    "repositories": ["crates.io"]
  },
  "rust:isocountry": {
    "coordinates": "rust:isocountry",
    "name": "isocountry",
    "description": "ISO 3166-1 enumeration for Rust",
    "license": [""],
    "tags": ["region", "country", "countrycode", "iso3166-1", "iso3166"],
    "downloads": 888616,
    "repositories": ["crates.io"]
  },
  "rust:itoap": {
    "coordinates": "rust:itoap",
    "name": "itoap",
    "description": "Even faster functions for printing integers with decimal format",
    "license": [""],
    "tags": [],
    "downloads": 447147,
    "repositories": ["crates.io"]
  },
  "rust:javascriptcore-rs": {
    "coordinates": "rust:javascriptcore-rs",
    "name": "javascriptcore-rs",
    "description": "Rust bindings for the javacriptcore library",
    "license": [""],
    "tags": ["gtk-rs", "javascript", "gnome"],
    "downloads": 1177708,
    "repositories": ["crates.io"]
  },
  "rust:javascriptcore-rs-sys": {
    "coordinates": "rust:javascriptcore-rs-sys",
    "name": "javascriptcore-rs-sys",
    "description": "Sys functions for the Rust bindings of the javacriptcore library",
    "license": [""],
    "tags": ["gtk-rs", "javascript", "gnome"],
    "downloads": 1230697,
    "repositories": ["crates.io"]
  },
  "rust:jieba-rs": {
    "coordinates": "rust:jieba-rs",
    "name": "jieba-rs",
    "description": "The Jieba Chinese Word Segmentation Implemented in Rust",
    "license": [""],
    "tags": ["segmenation", "chinese", "nlp"],
    "downloads": 339141,
    "repositories": ["crates.io"]
  },
  "rust:josekit": {
    "coordinates": "rust:josekit",
    "name": "josekit",
    "description": "JOSE (Javascript Object Signing and Encryption) library for Rust.",
    "license": [""],
    "tags": ["jwa", "jwe", "jose", "jwt", "jws"],
    "downloads": 889171,
    "repositories": ["crates.io"]
  },
  "rust:json-patch": {
    "coordinates": "rust:json-patch",
    "name": "json-patch",
    "description": "RFC 6902, JavaScript Object Notation (JSON) Patch",
    "license": [""],
    "tags": ["json", "json-patch"],
    "downloads": 8397673,
    "repositories": ["crates.io"]
  },
  "rust:json-rpc-api-build": { "name": "json-rpc-api-build" },
  "rust:json5": {
    "coordinates": "rust:json5",
    "name": "json5",
    "description": "A Rust JSON5 serializer and deserializer which speaks Serde.",
    "license": [""],
    "tags": ["serde", "parse", "json5", "parser", "json"],
    "downloads": 9274160,
    "repositories": ["crates.io"]
  },
  "rust:json_comments": {
    "coordinates": "rust:json_comments",
    "name": "json_comments",
    "description": "Library to strip comments from JSON before parsing",
    "license": [""],
    "tags": [],
    "downloads": 1761843,
    "repositories": ["crates.io"]
  },
  "rust:jsonpath_lib_polars_vendor": {
    "coordinates": "rust:jsonpath_lib_polars_vendor",
    "name": "jsonpath_lib_polars_vendor",
    "description": "It is JsonPath engine written in Rust. it provide a similar API interface in Webassembly and Javascript too. - Webassembly Demo: https://freestrings.github.io/jsonpath",
    "license": [""],
    "tags": ["lua", "webassembly", "query", "json", "jsonpath"],
    "downloads": 12557,
    "repositories": ["crates.io"]
  },
  "rust:jsonrpc": {
    "coordinates": "rust:jsonrpc",
    "name": "jsonrpc",
    "description": "Rust support for the JSON-RPC 2.0 protocol",
    "license": [""],
    "tags": ["json", "jsonrpc", "http", "protocol"],
    "downloads": 1103784,
    "repositories": ["crates.io"]
  },
  "rust:jsonrpc-client-transports": {
    "coordinates": "rust:jsonrpc-client-transports",
    "name": "jsonrpc-client-transports",
    "description": "Transport agnostic JSON-RPC 2.0 client implementation.",
    "license": [""],
    "tags": ["json", "json-rpc", "serde", "rpc", "jsonrpc"],
    "downloads": 2978019,
    "repositories": ["crates.io"]
  },
  "rust:jsonrpc-core": {
    "coordinates": "rust:jsonrpc-core",
    "name": "jsonrpc-core",
    "description": "Transport agnostic rust implementation of JSON-RPC 2.0 Specification.",
    "license": [""],
    "tags": ["json", "json-rpc", "serde", "rpc", "jsonrpc"],
    "downloads": 8566949,
    "repositories": ["crates.io"]
  },
  "rust:jsonrpc-core-client": {
    "coordinates": "rust:jsonrpc-core-client",
    "name": "jsonrpc-core-client",
    "description": "Transport agnostic JSON-RPC 2.0 client implementation.",
    "license": [""],
    "tags": ["json", "json-rpc", "serde", "rpc", "jsonrpc"],
    "downloads": 2942606,
    "repositories": ["crates.io"]
  },
  "rust:jsonrpc-derive": {
    "coordinates": "rust:jsonrpc-derive",
    "name": "jsonrpc-derive",
    "description": "High level, typed wrapper for `jsonrpc-core`",
    "license": [""],
    "tags": [],
    "downloads": 3532391,
    "repositories": ["crates.io"]
  },
  "rust:jsonrpc-http-server": {
    "coordinates": "rust:jsonrpc-http-server",
    "name": "jsonrpc-http-server",
    "description": "Rust http server using JSONRPC 2.0.",
    "license": [""],
    "tags": ["json", "json-rpc", "rpc", "jsonrpc", "server"],
    "downloads": 2663769,
    "repositories": ["crates.io"]
  },
  "rust:jsonrpc-ipc-server": {
    "coordinates": "rust:jsonrpc-ipc-server",
    "name": "jsonrpc-ipc-server",
    "description": "IPC server for JSON-RPC",
    "license": [""],
    "tags": [],
    "downloads": 1981610,
    "repositories": ["crates.io"]
  },
  "rust:jsonrpc-pubsub": {
    "coordinates": "rust:jsonrpc-pubsub",
    "name": "jsonrpc-pubsub",
    "description": "Publish-Subscribe extension for jsonrpc.",
    "license": [""],
    "tags": ["macros", "json", "json-rpc", "rpc", "jsonrpc"],
    "downloads": 3262202,
    "repositories": ["crates.io"]
  },
  "rust:jsonrpc-server-utils": {
    "coordinates": "rust:jsonrpc-server-utils",
    "name": "jsonrpc-server-utils",
    "description": "Server utils for jsonrpc-core crate.",
    "license": [""],
    "tags": ["json", "json-rpc", "serde", "rpc", "jsonrpc"],
    "downloads": 3382616,
    "repositories": ["crates.io"]
  },
  "rust:jsonrpsee": {
    "coordinates": "rust:jsonrpsee",
    "name": "jsonrpsee",
    "description": "JSON-RPC client/server framework",
    "license": [""],
    "tags": ["jsonrpc", "http", "wasm", "websocket", "json"],
    "downloads": 4461135,
    "repositories": ["crates.io"]
  },
  "rust:jsonrpsee-client-transport": {
    "coordinates": "rust:jsonrpsee-client-transport",
    "name": "jsonrpsee-client-transport",
    "description": "JSON-RPC client transports",
    "license": [""],
    "tags": ["jsonrpc", "http", "wasm", "websocket", "json"],
    "downloads": 3607390,
    "repositories": ["crates.io"]
  },
  "rust:jsonrpsee-core": {
    "coordinates": "rust:jsonrpsee-core",
    "name": "jsonrpsee-core",
    "description": "Utilities for jsonrpsee",
    "license": [""],
    "tags": ["jsonrpc", "http", "wasm", "websocket", "json"],
    "downloads": 4249241,
    "repositories": ["crates.io"]
  },
  "rust:jsonrpsee-http-client": {
    "coordinates": "rust:jsonrpsee-http-client",
    "name": "jsonrpsee-http-client",
    "description": "JSON-RPC HTTP client",
    "license": [""],
    "tags": ["jsonrpc", "http", "wasm", "websocket", "json"],
    "downloads": 3047805,
    "repositories": ["crates.io"]
  },
  "rust:jsonrpsee-proc-macros": {
    "coordinates": "rust:jsonrpsee-proc-macros",
    "name": "jsonrpsee-proc-macros",
    "description": "Procedueral macros for jsonrpsee",
    "license": [""],
    "tags": ["jsonrpc", "http", "wasm", "websocket", "json"],
    "downloads": 3951464,
    "repositories": ["crates.io"]
  },
  "rust:jsonrpsee-server": {
    "coordinates": "rust:jsonrpsee-server",
    "name": "jsonrpsee-server",
    "description": "JSON-RPC server that supports HTTP and WebSocket transports",
    "license": [""],
    "tags": ["jsonrpc", "http", "wasm", "websocket", "json"],
    "downloads": 2533550,
    "repositories": ["crates.io"]
  },
  "rust:jsonrpsee-types": {
    "coordinates": "rust:jsonrpsee-types",
    "name": "jsonrpsee-types",
    "description": "JSON-RPC v2 specific types",
    "license": [""],
    "tags": ["jsonrpc", "http", "wasm", "websocket", "json"],
    "downloads": 4873358,
    "repositories": ["crates.io"]
  },
  "rust:jsonrpsee-wasm-client": {
    "coordinates": "rust:jsonrpsee-wasm-client",
    "name": "jsonrpsee-wasm-client",
    "description": "JSON-RPC WASM client",
    "license": [""],
    "tags": ["jsonrpc", "http", "wasm", "websocket", "json"],
    "downloads": 1099826,
    "repositories": ["crates.io"]
  },
  "rust:jsonrpsee-ws-client": {
    "coordinates": "rust:jsonrpsee-ws-client",
    "name": "jsonrpsee-ws-client",
    "description": "JSON-RPC websocket client",
    "license": [""],
    "tags": ["jsonrpc", "http", "wasm", "websocket", "json"],
    "downloads": 3876618,
    "repositories": ["crates.io"]
  },
  "rust:kamadak-exif": {
    "coordinates": "rust:kamadak-exif",
    "name": "kamadak-exif",
    "description": "Exif parsing library written in pure Rust",
    "license": [""],
    "tags": ["tiff", "jpeg", "reader", "exif", "parser"],
    "downloads": 2699906,
    "repositories": ["crates.io"]
  },
  "rust:kate": {
    "coordinates": "rust:kate",
    "name": "kate",
    "description": "A WIP JVM written in rust.",
    "license": [""],
    "tags": [],
    "downloads": 349,
    "repositories": ["crates.io"]
  },
  "rust:kate-recovery": { "name": "kate-recovery" },
  "rust:keccak-asm": {
    "coordinates": "rust:keccak-asm",
    "name": "keccak-asm",
    "description": "Simple wrappers for SHA-3 algorithms written in assembly",
    "license": [""],
    "tags": ["keccak256", "asm", "assembly", "sha3", "primitives"],
    "downloads": 186311,
    "repositories": ["crates.io"]
  },
  "rust:keyboard-types": {
    "coordinates": "rust:keyboard-types",
    "name": "keyboard-types",
    "description": "Contains types to define keyboard related events.",
    "license": [""],
    "tags": ["event", "webdriver", "input", "keyboard"],
    "downloads": 1490708,
    "repositories": ["crates.io"]
  },
  "rust:keystream": {
    "coordinates": "rust:keystream",
    "name": "keystream",
    "description": "Cryptographic keystream traits",
    "license": [""],
    "tags": ["keystream"],
    "downloads": 937266,
    "repositories": ["crates.io"]
  },
  "rust:kgraph_utils": { "name": "kgraph_utils" },
  "rust:khronos-egl": {
    "coordinates": "rust:khronos-egl",
    "name": "khronos-egl",
    "description": "Rust bindings for EGL",
    "license": [""],
    "tags": ["khronos", "gl", "egl", "opengl"],
    "downloads": 3531395,
    "repositories": ["crates.io"]
  },
  "rust:khronos_api": {
    "coordinates": "rust:khronos_api",
    "name": "khronos_api",
    "description": "The Khronos XML API Registry, exposed as byte string constants.",
    "license": [""],
    "tags": ["egl", "khronos", "opengl", "gl"],
    "downloads": 5543015,
    "repositories": ["crates.io"]
  },
  "rust:kqueue": {
    "coordinates": "rust:kqueue",
    "name": "kqueue",
    "description": "kqueue interface for BSDs",
    "license": [""],
    "tags": ["kevent", "bsd", "kqueue"],
    "downloads": 6156909,
    "repositories": ["crates.io"]
  },
  "rust:kqueue-sys": {
    "coordinates": "rust:kqueue-sys",
    "name": "kqueue-sys",
    "description": "Low-level kqueue interface for BSDs",
    "license": [""],
    "tags": ["kevent", "bsd", "darwin", "kqueue", "macos"],
    "downloads": 6081637,
    "repositories": ["crates.io"]
  },
  "rust:krates": {
    "coordinates": "rust:krates",
    "name": "krates",
    "description": "Create graphs of crates gathered from cargo metadata",
    "license": [""],
    "tags": ["cargo", "graph", "metadata"],
    "downloads": 982543,
    "repositories": ["crates.io"]
  },
  "rust:krb5-src": {
    "coordinates": "rust:krb5-src",
    "name": "krb5-src",
    "description": "Build system integration for libkrb5, MIT''s Kerberos implementation.",
    "license": [""],
    "tags": [],
    "downloads": 1101954,
    "repositories": ["crates.io"]
  },
  "rust:kstring": {
    "coordinates": "rust:kstring",
    "name": "kstring",
    "description": "Key String: optimized for map keys",
    "license": [""],
    "tags": ["string", "serde", "serialization"],
    "downloads": 6282236,
    "repositories": ["crates.io"]
  },
  "rust:kuchikiki": {
    "coordinates": "rust:kuchikiki",
    "name": "kuchikiki",
    "description": "(口利き) HTML tree manipulation library",
    "license": [""],
    "tags": [],
    "downloads": 652300,
    "repositories": ["crates.io"]
  },
  "rust:kurbo": {
    "coordinates": "rust:kurbo",
    "name": "kurbo",
    "description": "A 2D curves library",
    "license": [""],
    "tags": ["graphics", "curves", "curve", "bezier", "geometry"],
    "downloads": 2304651,
    "repositories": ["crates.io"]
  },
  "rust:kvdb": {
    "coordinates": "rust:kvdb",
    "name": "kvdb",
    "description": "Generic key-value trait",
    "license": [""],
    "tags": [],
    "downloads": 3277478,
    "repositories": ["crates.io"]
  },
  "rust:kvdb-memorydb": {
    "coordinates": "rust:kvdb-memorydb",
    "name": "kvdb-memorydb",
    "description": "A key-value in-memory database that implements the  `KeyValueDB` trait",
    "license": [""],
    "tags": [],
    "downloads": 3182629,
    "repositories": ["crates.io"]
  },
  "rust:kvdb-rocksdb": {
    "coordinates": "rust:kvdb-rocksdb",
    "name": "kvdb-rocksdb",
    "description": "kvdb implementation backed by RocksDB",
    "license": [""],
    "tags": [],
    "downloads": 3238914,
    "repositories": ["crates.io"]
  },
  "rust:lambda_http": {
    "coordinates": "rust:lambda_http",
    "name": "lambda_http",
    "description": "Application Load Balancer and API Gateway event types for AWS Lambda",
    "license": [""],
    "tags": ["alb", "lambda", "aws", "api", "apigateway"],
    "downloads": 1104833,
    "repositories": ["crates.io"]
  },
  "rust:lambda_runtime": {
    "coordinates": "rust:lambda_runtime",
    "name": "lambda_runtime",
    "description": "AWS Lambda Runtime",
    "license": [""],
    "tags": ["lambda", "aws", "api"],
    "downloads": 4689634,
    "repositories": ["crates.io"]
  },
  "rust:lambda_runtime_api_client": {
    "coordinates": "rust:lambda_runtime_api_client",
    "name": "lambda_runtime_api_client",
    "description": "AWS Lambda Runtime interaction API",
    "license": [""],
    "tags": ["aws", "lambda", "api"],
    "downloads": 3265859,
    "repositories": ["crates.io"]
  },
  "rust:lazy-regex": {
    "coordinates": "rust:lazy-regex",
    "name": "lazy-regex",
    "description": "lazy static regular expressions checked at compile time",
    "license": [""],
    "tags": ["static", "macro", "lazy", "regex"],
    "downloads": 3102410,
    "repositories": ["crates.io"]
  },
  "rust:lazy-regex-proc_macros": {
    "coordinates": "rust:lazy-regex-proc_macros",
    "name": "lazy-regex-proc_macros",
    "description": "proc macros for the lazy_regex crate",
    "license": [""],
    "tags": [],
    "downloads": 3044989,
    "repositories": ["crates.io"]
  },
  "rust:lebe": {
    "coordinates": "rust:lebe",
    "name": "lebe",
    "description": "Tiny, dead simple, high performance endianness conversions with a generic API",
    "license": [""],
    "tags": ["binary", "endianness", "byteorder", "endian", "io"],
    "downloads": 6639079,
    "repositories": ["crates.io"]
  },
  "rust:leptos": {
    "coordinates": "rust:leptos",
    "name": "leptos",
    "description": "Leptos is a full-stack, isomorphic Rust web framework leveraging fine-grained reactivity to build declarative user interfaces.",
    "license": [""],
    "tags": [],
    "downloads": 348655,
    "repositories": ["crates.io"]
  },
  "rust:leptos_axum": {
    "coordinates": "rust:leptos_axum",
    "name": "leptos_axum",
    "description": "Axum integrations for the Leptos web framework.",
    "license": [""],
    "tags": [],
    "downloads": 80566,
    "repositories": ["crates.io"]
  },
  "rust:leptos_config": {
    "coordinates": "rust:leptos_config",
    "name": "leptos_config",
    "description": "Configuration for the Leptos web framework.",
    "license": [""],
    "tags": [],
    "downloads": 342096,
    "repositories": ["crates.io"]
  },
  "rust:leptos_dom": {
    "coordinates": "rust:leptos_dom",
    "name": "leptos_dom",
    "description": "DOM operations for the Leptos web framework.",
    "license": [""],
    "tags": [],
    "downloads": 348433,
    "repositories": ["crates.io"]
  },
  "rust:leptos_hot_reload": {
    "coordinates": "rust:leptos_hot_reload",
    "name": "leptos_hot_reload",
    "description": "Utility types used for dev mode and hot-reloading for the Leptos web framework.",
    "license": [""],
    "tags": [],
    "downloads": 376453,
    "repositories": ["crates.io"]
  },
  "rust:leptos_integration_utils": {
    "coordinates": "rust:leptos_integration_utils",
    "name": "leptos_integration_utils",
    "description": "Utilities to help build server integrations for the Leptos web framework.",
    "license": [""],
    "tags": [],
    "downloads": 134763,
    "repositories": ["crates.io"]
  },
  "rust:leptos_macro": {
    "coordinates": "rust:leptos_macro",
    "name": "leptos_macro",
    "description": "view macro for the Leptos web framework.",
    "license": [""],
    "tags": [],
    "downloads": 346846,
    "repositories": ["crates.io"]
  },
  "rust:leptos_meta": {
    "coordinates": "rust:leptos_meta",
    "name": "leptos_meta",
    "description": "Tools to set HTML metadata in the Leptos web framework.",
    "license": [""],
    "tags": [],
    "downloads": 184531,
    "repositories": ["crates.io"]
  },
  "rust:leptos_reactive": {
    "coordinates": "rust:leptos_reactive",
    "name": "leptos_reactive",
    "description": "Reactive system for the Leptos web framework.",
    "license": [""],
    "tags": [],
    "downloads": 354415,
    "repositories": ["crates.io"]
  },
  "rust:leptos_router": {
    "coordinates": "rust:leptos_router",
    "name": "leptos_router",
    "description": "Router for the Leptos web framework.",
    "license": [""],
    "tags": [],
    "downloads": 207249,
    "repositories": ["crates.io"]
  },
  "rust:leptos_server": {
    "coordinates": "rust:leptos_server",
    "name": "leptos_server",
    "description": "RPC for the Leptos web framework.",
    "license": [""],
    "tags": [],
    "downloads": 345970,
    "repositories": ["crates.io"]
  },
  "rust:lettre": {
    "coordinates": "rust:lettre",
    "name": "lettre",
    "description": "Email client",
    "license": [""],
    "tags": ["mailer", "message", "sendmail", "smtp", "email"],
    "downloads": 2250717,
    "repositories": ["crates.io"]
  },
  "rust:levenshtein_automata": {
    "coordinates": "rust:levenshtein_automata",
    "name": "levenshtein_automata",
    "description": "Creates Levenshtein Automata in an efficient manner.",
    "license": [""],
    "tags": ["levenshtein", "automata", "automaton", "fuzzy"],
    "downloads": 3297581,
    "repositories": ["crates.io"]
  },
  "rust:libadwaita": {
    "coordinates": "rust:libadwaita",
    "name": "libadwaita",
    "description": "Rust bindings for libadwaita",
    "license": [""],
    "tags": ["gnome", "gui", "adwaita", "gtk4-rs"],
    "downloads": 548935,
    "repositories": ["crates.io"]
  },
  "rust:libadwaita-sys": {
    "coordinates": "rust:libadwaita-sys",
    "name": "libadwaita-sys",
    "description": "FFI bindings for libadwaita",
    "license": [""],
    "tags": ["gnome", "gui", "adwaita", "gtk4-rs"],
    "downloads": 543897,
    "repositories": ["crates.io"]
  },
  "rust:libffi": {
    "coordinates": "rust:libffi",
    "name": "libffi",
    "description": "Rust bindings for libffi",
    "license": [""],
    "tags": ["ffi", "c", "closure", "libffi"],
    "downloads": 814796,
    "repositories": ["crates.io"]
  },
  "rust:libffi-sys": {
    "coordinates": "rust:libffi-sys",
    "name": "libffi-sys",
    "description": "Raw Rust bindings for libffi",
    "license": [""],
    "tags": ["closure", "libffi", "c", "ffi"],
    "downloads": 811553,
    "repositories": ["crates.io"]
  },
  "rust:libflate_lz77": {
    "coordinates": "rust:libflate_lz77",
    "name": "libflate_lz77",
    "description": "LZ77 encoder for libflate crate",
    "license": [""],
    "tags": ["lz77"],
    "downloads": 8284747,
    "repositories": ["crates.io"]
  },
  "rust:libfuzzer-sys": {
    "coordinates": "rust:libfuzzer-sys",
    "name": "libfuzzer-sys",
    "description": "A wrapper around LLVM''s libFuzzer runtime.",
    "license": [""],
    "tags": [],
    "downloads": 3832119,
    "repositories": ["crates.io"]
  },
  "rust:libmimalloc-sys": {
    "coordinates": "rust:libmimalloc-sys",
    "name": "libmimalloc-sys",
    "description": "Sys crate wrapping the mimalloc allocator",
    "license": [""],
    "tags": ["allocator", "encrypted-heap", "performance"],
    "downloads": 4692222,
    "repositories": ["crates.io"]
  },
  "rust:libp2p": {
    "coordinates": "rust:libp2p",
    "name": "libp2p",
    "description": "Peer-to-peer networking library",
    "license": [""],
    "tags": ["networking", "libp2p", "peer-to-peer"],
    "downloads": 5115474,
    "repositories": ["crates.io"]
  },
  "rust:libp2p-allow-block-list": {
    "coordinates": "rust:libp2p-allow-block-list",
    "name": "libp2p-allow-block-list",
    "description": "Allow/block list connection management for libp2p.",
    "license": [""],
    "tags": ["peer-to-peer", "libp2p", "networking"],
    "downloads": 1846352,
    "repositories": ["crates.io"]
  },
  "rust:libp2p-autonat": {
    "coordinates": "rust:libp2p-autonat",
    "name": "libp2p-autonat",
    "description": "NAT and firewall detection for libp2p",
    "license": [""],
    "tags": ["libp2p", "networking", "peer-to-peer"],
    "downloads": 653763,
    "repositories": ["crates.io"]
  },
  "rust:libp2p-connection-limits": {
    "coordinates": "rust:libp2p-connection-limits",
    "name": "libp2p-connection-limits",
    "description": "Connection limits for libp2p.",
    "license": [""],
    "tags": ["networking", "libp2p", "peer-to-peer"],
    "downloads": 1850020,
    "repositories": ["crates.io"]
  },
  "rust:libp2p-core": {
    "coordinates": "rust:libp2p-core",
    "name": "libp2p-core",
    "description": "Core traits and structs of libp2p",
    "license": [""],
    "tags": ["peer-to-peer", "libp2p", "networking"],
    "downloads": 5796660,
    "repositories": ["crates.io"]
  },
  "rust:libp2p-dcutr": {
    "coordinates": "rust:libp2p-dcutr",
    "name": "libp2p-dcutr",
    "description": "Direct connection upgrade through relay",
    "license": [""],
    "tags": ["peer-to-peer", "libp2p", "networking"],
    "downloads": 111830,
    "repositories": ["crates.io"]
  },
  "rust:libp2p-dns": {
    "coordinates": "rust:libp2p-dns",
    "name": "libp2p-dns",
    "description": "DNS transport implementation for libp2p",
    "license": [""],
    "tags": ["networking", "libp2p", "peer-to-peer"],
    "downloads": 4805606,
    "repositories": ["crates.io"]
  },
  "rust:libp2p-gossipsub": {
    "coordinates": "rust:libp2p-gossipsub",
    "name": "libp2p-gossipsub",
    "description": "Gossipsub protocol for libp2p",
    "license": [""],
    "tags": ["networking", "libp2p", "peer-to-peer"],
    "downloads": 2707972,
    "repositories": ["crates.io"]
  },
  "rust:libp2p-identify": {
    "coordinates": "rust:libp2p-identify",
    "name": "libp2p-identify",
    "description": "Nodes identifcation protocol for libp2p",
    "license": [""],
    "tags": ["libp2p", "networking", "peer-to-peer"],
    "downloads": 4681429,
    "repositories": ["crates.io"]
  },
  "rust:libp2p-identity": {
    "coordinates": "rust:libp2p-identity",
    "name": "libp2p-identity",
    "description": "Data structures and algorithms for identifying peers in libp2p.",
    "license": [""],
    "tags": ["libp2p", "peer-to-peer", "networking", "cryptography"],
    "downloads": 2462278,
    "repositories": ["crates.io"]
  },
  "rust:libp2p-kad": {
    "coordinates": "rust:libp2p-kad",
    "name": "libp2p-kad",
    "description": "Kademlia protocol for libp2p",
    "license": [""],
    "tags": ["networking", "libp2p", "peer-to-peer"],
    "downloads": 4408751,
    "repositories": ["crates.io"]
  },
  "rust:libp2p-mdns": {
    "coordinates": "rust:libp2p-mdns",
    "name": "libp2p-mdns",
    "description": "Implementation of the libp2p mDNS discovery method",
    "license": [""],
    "tags": ["peer-to-peer", "libp2p", "networking"],
    "downloads": 4456422,
    "repositories": ["crates.io"]
  },
  "rust:libp2p-metrics": {
    "coordinates": "rust:libp2p-metrics",
    "name": "libp2p-metrics",
    "description": "Metrics for libp2p",
    "license": [""],
    "tags": ["libp2p", "peer-to-peer", "networking"],
    "downloads": 3658094,
    "repositories": ["crates.io"]
  },
  "rust:libp2p-noise": {
    "coordinates": "rust:libp2p-noise",
    "name": "libp2p-noise",
    "description": "Cryptographic handshake protocol using the noise framework.",
    "license": [""],
    "tags": [],
    "downloads": 4851435,
    "repositories": ["crates.io"]
  },
  "rust:libp2p-ping": {
    "coordinates": "rust:libp2p-ping",
    "name": "libp2p-ping",
    "description": "Ping protocol for libp2p",
    "license": [""],
    "tags": ["libp2p", "peer-to-peer", "networking"],
    "downloads": 4164607,
    "repositories": ["crates.io"]
  },
  "rust:libp2p-quic": {
    "coordinates": "rust:libp2p-quic",
    "name": "libp2p-quic",
    "description": "TLS based QUIC transport implementation for libp2p",
    "license": [""],
    "tags": [],
    "downloads": 2264136,
    "repositories": ["crates.io"]
  },
  "rust:libp2p-relay": {
    "coordinates": "rust:libp2p-relay",
    "name": "libp2p-relay",
    "description": "Communications relaying for libp2p",
    "license": [""],
    "tags": ["peer-to-peer", "libp2p", "networking"],
    "downloads": 1321634,
    "repositories": ["crates.io"]
  },
  "rust:libp2p-request-response": {
    "coordinates": "rust:libp2p-request-response",
    "name": "libp2p-request-response",
    "description": "Generic Request/Response Protocols",
    "license": [""],
    "tags": ["peer-to-peer", "libp2p", "networking"],
    "downloads": 4071044,
    "repositories": ["crates.io"]
  },
  "rust:libp2p-swarm": {
    "coordinates": "rust:libp2p-swarm",
    "name": "libp2p-swarm",
    "description": "The libp2p swarm",
    "license": [""],
    "tags": ["peer-to-peer", "libp2p", "networking"],
    "downloads": 5054835,
    "repositories": ["crates.io"]
  },
  "rust:libp2p-swarm-derive": {
    "coordinates": "rust:libp2p-swarm-derive",
    "name": "libp2p-swarm-derive",
    "description": "Procedural macros of libp2p-swarm",
    "license": [""],
    "tags": ["peer-to-peer", "libp2p", "networking"],
    "downloads": 4176726,
    "repositories": ["crates.io"]
  },
  "rust:libp2p-tcp": {
    "coordinates": "rust:libp2p-tcp",
    "name": "libp2p-tcp",
    "description": "TCP/IP transport protocol for libp2p",
    "license": [""],
    "tags": ["peer-to-peer", "libp2p", "networking"],
    "downloads": 4890549,
    "repositories": ["crates.io"]
  },
  "rust:libp2p-tls": {
    "coordinates": "rust:libp2p-tls",
    "name": "libp2p-tls",
    "description": "TLS configuration based on libp2p TLS specs.",
    "license": [""],
    "tags": [],
    "downloads": 2245468,
    "repositories": ["crates.io"]
  },
  "rust:libp2p-upnp": {
    "coordinates": "rust:libp2p-upnp",
    "name": "libp2p-upnp",
    "description": "UPnP support for libp2p transports",
    "license": [""],
    "tags": ["networking", "libp2p", "peer-to-peer"],
    "downloads": 342105,
    "repositories": ["crates.io"]
  },
  "rust:libp2p-wasm-ext": {
    "coordinates": "rust:libp2p-wasm-ext",
    "name": "libp2p-wasm-ext",
    "description": "Allows passing in an external transport in a WASM environment",
    "license": [""],
    "tags": ["libp2p", "peer-to-peer", "networking"],
    "downloads": 3565127,
    "repositories": ["crates.io"]
  },
  "rust:libp2p-websocket": {
    "coordinates": "rust:libp2p-websocket",
    "name": "libp2p-websocket",
    "description": "WebSocket transport for libp2p",
    "license": [""],
    "tags": ["libp2p", "networking", "peer-to-peer"],
    "downloads": 4244314,
    "repositories": ["crates.io"]
  },
  "rust:libp2p-yamux": {
    "coordinates": "rust:libp2p-yamux",
    "name": "libp2p-yamux",
    "description": "Yamux multiplexing protocol for libp2p",
    "license": [""],
    "tags": ["peer-to-peer", "libp2p", "networking"],
    "downloads": 4779179,
    "repositories": ["crates.io"]
  },
  "rust:libproc": {
    "coordinates": "rust:libproc",
    "name": "libproc",
    "description": "A library to get information about running processes - for Mac OS X and Linux",
    "license": [""],
    "tags": [],
    "downloads": 1217627,
    "repositories": ["crates.io"]
  },
  "rust:libredox": {
    "coordinates": "rust:libredox",
    "name": "libredox",
    "description": "Redox stable ABI",
    "license": [""],
    "tags": [],
    "downloads": 4145604,
    "repositories": ["crates.io"]
  },
  "rust:librsvg": {
    "coordinates": "rust:librsvg",
    "name": "librsvg",
    "description": "A library to render SVG images to Cairo surfaces. GNOME uses this to render SVG icons. Outside of GNOME, other desktop environments use it for similar purposes. Wikimedia uses it for Wikipedia''s SVG diagrams. ",
    "license": [""],
    "tags": [],
    "downloads": 14671,
    "repositories": ["crates.io"]
  },
  "rust:libsecp256k1-core": {
    "coordinates": "rust:libsecp256k1-core",
    "name": "libsecp256k1-core",
    "description": "Core functions for pure Rust secp256k1 implementation.",
    "license": [""],
    "tags": ["no_std", "bitcoin", "secp256k1", "ecdsa", "crypto"],
    "downloads": 8037896,
    "repositories": ["crates.io"]
  },
  "rust:libsecp256k1-gen-ecmult": {
    "coordinates": "rust:libsecp256k1-gen-ecmult",
    "name": "libsecp256k1-gen-ecmult",
    "description": "Generator function of const_gen for libsecp256k1.",
    "license": [""],
    "tags": ["no_std", "bitcoin", "secp256k1", "ecdsa", "crypto"],
    "downloads": 8046452,
    "repositories": ["crates.io"]
  },
  "rust:libsecp256k1-gen-genmult": {
    "coordinates": "rust:libsecp256k1-gen-genmult",
    "name": "libsecp256k1-gen-genmult",
    "description": "Generator function of const for libsecp256k1.",
    "license": [""],
    "tags": ["no_std", "bitcoin", "secp256k1", "ecdsa", "crypto"],
    "downloads": 8036752,
    "repositories": ["crates.io"]
  },
  "rust:libxdo": {
    "coordinates": "rust:libxdo",
    "name": "libxdo",
    "description": "Bindings to libxdo",
    "license": [""],
    "tags": ["xdotool", "libxdo", "automation", "xdo", "x11"],
    "downloads": 699591,
    "repositories": ["crates.io"]
  },
  "rust:libxdo-sys": {
    "coordinates": "rust:libxdo-sys",
    "name": "libxdo-sys",
    "description": "FFI bindings to libxdo",
    "license": [""],
    "tags": ["xdotool", "libxdo", "automation", "xdo", "x11"],
    "downloads": 688533,
    "repositories": ["crates.io"]
  },
  "rust:libz-ng-sys": {
    "coordinates": "rust:libz-ng-sys",
    "name": "libz-ng-sys",
    "description": "Low-level bindings to zlib-ng (libz-ng), a high-performance zlib library.",
    "license": [""],
    "tags": ["zlib-ng", "zlib"],
    "downloads": 752547,
    "repositories": ["crates.io"]
  },
  "rust:lifetimed-bytes": {
    "coordinates": "rust:lifetimed-bytes",
    "name": "lifetimed-bytes",
    "description": "Bytes, but with attached lifetime",
    "license": [""],
    "tags": ["buffers", "io", "zero-copy"],
    "downloads": 260150,
    "repositories": ["crates.io"]
  },
  "rust:light-poseidon": {
    "coordinates": "rust:light-poseidon",
    "name": "light-poseidon",
    "description": "Poseidon hash implementation in Rust",
    "license": [""],
    "tags": ["hash", "zero-knowledge", "poseidon", "zksnark", "cryptography"],
    "downloads": 793776,
    "repositories": ["crates.io"]
  },
  "rust:lightningcss": {
    "coordinates": "rust:lightningcss",
    "name": "lightningcss",
    "description": "A CSS parser, transformer, and minifier",
    "license": [""],
    "tags": ["parcel", "css", "minifier"],
    "downloads": 252846,
    "repositories": ["crates.io"]
  },
  "rust:lindera-cc-cedict": {
    "coordinates": "rust:lindera-cc-cedict",
    "name": "lindera-cc-cedict",
    "description": "A Japanese morphological dictionary for CC-CEDICT.",
    "license": [""],
    "tags": ["cc-cedict", "chinese", "morphological", "dictionary"],
    "downloads": 31502,
    "repositories": ["crates.io"]
  },
  "rust:lindera-cc-cedict-builder": {
    "coordinates": "rust:lindera-cc-cedict-builder",
    "name": "lindera-cc-cedict-builder",
    "description": "A Chinese morphological dictionary builder for CC-CEDICT.",
    "license": [""],
    "tags": ["cc-cedict", "chinese", "morphological", "dictionary", "builder"],
    "downloads": 283801,
    "repositories": ["crates.io"]
  },
  "rust:lindera-compress": {
    "coordinates": "rust:lindera-compress",
    "name": "lindera-compress",
    "description": "A morphological analysis library.",
    "license": [""],
    "tags": ["library", "morphological", "analysis"],
    "downloads": 151568,
    "repositories": ["crates.io"]
  },
  "rust:lindera-core": {
    "coordinates": "rust:lindera-core",
    "name": "lindera-core",
    "description": "A morphological analysis library.",
    "license": [""],
    "tags": ["library", "morphological", "analysis"],
    "downloads": 318460,
    "repositories": ["crates.io"]
  },
  "rust:lindera-decompress": {
    "coordinates": "rust:lindera-decompress",
    "name": "lindera-decompress",
    "description": "A morphological analysis library.",
    "license": [""],
    "tags": ["library", "morphological", "analysis"],
    "downloads": 288438,
    "repositories": ["crates.io"]
  },
  "rust:lindera-dictionary": {
    "coordinates": "rust:lindera-dictionary",
    "name": "lindera-dictionary",
    "description": "A Japanese morphological dictionary.",
    "license": [""],
    "tags": ["library", "morphological", "analysis"],
    "downloads": 310819,
    "repositories": ["crates.io"]
  },
  "rust:lindera-ipadic": {
    "coordinates": "rust:lindera-ipadic",
    "name": "lindera-ipadic",
    "description": "A Japanese morphological dictionary for IPADIC.",
    "license": [""],
    "tags": ["ipadic", "japanese", "morphological", "dictionary"],
    "downloads": 194417,
    "repositories": ["crates.io"]
  },
  "rust:lindera-ipadic-builder": {
    "coordinates": "rust:lindera-ipadic-builder",
    "name": "lindera-ipadic-builder",
    "description": "A Japanese morphological dictionary builder for IPADIC.",
    "license": [""],
    "tags": ["ipadic", "japanese", "morphological", "dictionary", "builder"],
    "downloads": 304641,
    "repositories": ["crates.io"]
  },
  "rust:lindera-ipadic-neologd-builder": {
    "coordinates": "rust:lindera-ipadic-neologd-builder",
    "name": "lindera-ipadic-neologd-builder",
    "description": "A Japanese morphological dictionary builder for IPADIC NEologd.",
    "license": [""],
    "tags": ["ipadic", "japanese", "neologd", "dictionary", "builder"],
    "downloads": 141057,
    "repositories": ["crates.io"]
  },
  "rust:lindera-ko-dic": {
    "coordinates": "rust:lindera-ko-dic",
    "name": "lindera-ko-dic",
    "description": "A Japanese morphological dictionary for ko-dic.",
    "license": [""],
    "tags": ["korean", "morphological", "dictionary", "ko-dic"],
    "downloads": 163642,
    "repositories": ["crates.io"]
  },
  "rust:lindera-ko-dic-builder": {
    "coordinates": "rust:lindera-ko-dic-builder",
    "name": "lindera-ko-dic-builder",
    "description": "A Korean morphological dictionary builder for ko-dic.",
    "license": [""],
    "tags": ["korean", "morphological", "dictionary", "builder", "ko-dic"],
    "downloads": 285983,
    "repositories": ["crates.io"]
  },
  "rust:lindera-tokenizer": {
    "coordinates": "rust:lindera-tokenizer",
    "name": "lindera-tokenizer",
    "description": "A morphological analysis library.",
    "license": [""],
    "tags": ["library", "morphological", "tokenizer", "analysis"],
    "downloads": 98846,
    "repositories": ["crates.io"]
  },
  "rust:lindera-unidic": {
    "coordinates": "rust:lindera-unidic",
    "name": "lindera-unidic",
    "description": "A Japanese morphological dictionary for UniDic.",
    "license": [""],
    "tags": ["japanese", "unidic", "morphological", "dictionary"],
    "downloads": 79129,
    "repositories": ["crates.io"]
  },
  "rust:lindera-unidic-builder": {
    "coordinates": "rust:lindera-unidic-builder",
    "name": "lindera-unidic-builder",
    "description": "A Japanese morphological dictionary builder for UniDic.",
    "license": [""],
    "tags": ["japanese", "unidic", "morphological", "dictionary", "builder"],
    "downloads": 287645,
    "repositories": ["crates.io"]
  },
  "rust:line-col": {
    "coordinates": "rust:line-col",
    "name": "line-col",
    "description": "Convert string slice indices into line/column numbers",
    "license": [""],
    "tags": ["line", "column", "lookup", "parsing", "str"],
    "downloads": 254773,
    "repositories": ["crates.io"]
  },
  "rust:line-numbers": {
    "coordinates": "rust:line-numbers",
    "name": "line-numbers",
    "description": "Find line numbers in strings by byte offsets, quickly",
    "license": [""],
    "tags": [],
    "downloads": 18235,
    "repositories": ["crates.io"]
  },
  "rust:line-wrap": {
    "coordinates": "rust:line-wrap",
    "name": "line-wrap",
    "description": "Efficiently insert line separators",
    "license": [""],
    "tags": ["line-wrap", "line", "wrap"],
    "downloads": 5231247,
    "repositories": ["crates.io"]
  },
  "rust:linear-map": {
    "coordinates": "rust:linear-map",
    "name": "linear-map",
    "description": "A map implemented by searching linearly in a vector.",
    "license": [""],
    "tags": ["data-structures"],
    "downloads": 1418832,
    "repositories": ["crates.io"]
  },
  "rust:linked_hash_set": {
    "coordinates": "rust:linked_hash_set",
    "name": "linked_hash_set",
    "description": "HashSet with insertion ordering",
    "license": [""],
    "tags": ["data-structures"],
    "downloads": 9218092,
    "repositories": ["crates.io"]
  },
  "rust:linregress": {
    "coordinates": "rust:linregress",
    "name": "linregress",
    "description": "ordinary least squared linear regression with some basic statistics",
    "license": [""],
    "tags": ["statistics", "ols", "regression"],
    "downloads": 3340852,
    "repositories": ["crates.io"]
  },
  "rust:lioness": {
    "coordinates": "rust:lioness",
    "name": "lioness",
    "description": "Lioness wide block cipher",
    "license": [""],
    "tags": ["lioness", "sphinx", "cipher", "mixnet", "cryptography"],
    "downloads": 910238,
    "repositories": ["crates.io"]
  },
  "rust:liquid": {
    "coordinates": "rust:liquid",
    "name": "liquid",
    "description": "The liquid templating language for Rust",
    "license": [""],
    "tags": ["liquid", "templating", "html", "template", "language"],
    "downloads": 1940020,
    "repositories": ["crates.io"]
  },
  "rust:liquid-core": {
    "coordinates": "rust:liquid-core",
    "name": "liquid-core",
    "description": "Core liquid functionality",
    "license": [""],
    "tags": ["liquid", "templating", "html", "template", "language"],
    "downloads": 1636536,
    "repositories": ["crates.io"]
  },
  "rust:liquid-derive": {
    "coordinates": "rust:liquid-derive",
    "name": "liquid-derive",
    "description": "The liquid templating language for Rust",
    "license": [""],
    "tags": ["liquid", "templating", "html", "template", "language"],
    "downloads": 1703182,
    "repositories": ["crates.io"]
  },
  "rust:liquid-lib": {
    "coordinates": "rust:liquid-lib",
    "name": "liquid-lib",
    "description": "The liquid templating language for Rust",
    "license": [""],
    "tags": ["liquid", "templating", "html", "template", "language"],
    "downloads": 1627949,
    "repositories": ["crates.io"]
  },
  "rust:litemap": {
    "coordinates": "rust:litemap",
    "name": "litemap",
    "description": "A key-value Map implementation based on a flat, sorted Vec.",
    "license": [""],
    "tags": ["vec", "sorted", "btreemap", "hashmap", "map"],
    "downloads": 1341093,
    "repositories": ["crates.io"]
  },
  "rust:litrs": {
    "coordinates": "rust:litrs",
    "name": "litrs",
    "description": "Parse and inspect Rust literals (i.e. tokens in the Rust programming language representing fixed values). Particularly useful for proc macros, but can also be used outside of a proc-macro context. ",
    "license": [""],
    "tags": ["proc-macro", "literal", "type", "procedural", "parsing"],
    "downloads": 1189153,
    "repositories": ["crates.io"]
  },
  "rust:lmdb-master-sys": {
    "coordinates": "rust:lmdb-master-sys",
    "name": "lmdb-master-sys",
    "description": "Rust bindings for liblmdb on the mdb.master branch.",
    "license": [""],
    "tags": ["lmdb", "database", "storage-engine", "library", "bindings"],
    "downloads": 101492,
    "repositories": ["crates.io"]
  },
  "rust:locale_config": {
    "coordinates": "rust:locale_config",
    "name": "locale_config",
    "description": "Maintains locale preferences for process and thread and initialises them by inspecting the system for user preference. ",
    "license": [""],
    "tags": ["i18n"],
    "downloads": 1980564,
    "repositories": ["crates.io"]
  },
  "rust:log-once": {
    "coordinates": "rust:log-once",
    "name": "log-once",
    "description": "Collection of helper macros for logging some events only once.",
    "license": [""],
    "tags": [],
    "downloads": 277251,
    "repositories": ["crates.io"]
  },
  "rust:longest-increasing-subsequence": {
    "coordinates": "rust:longest-increasing-subsequence",
    "name": "longest-increasing-subsequence",
    "description": "Find a longest increasing subsequence of some input sequence",
    "license": [""],
    "tags": [],
    "downloads": 323666,
    "repositories": ["crates.io"]
  },
  "rust:loom": {
    "coordinates": "rust:loom",
    "name": "loom",
    "description": "Permutation testing for concurrent code",
    "license": [""],
    "tags": ["atomic", "lock-free"],
    "downloads": 6115350,
    "repositories": ["crates.io"]
  },
  "rust:loop9": {
    "coordinates": "rust:loop9",
    "name": "loop9",
    "description": "Tiny helper function to visit every pixel in the image together with its neighboring pixels. Duplicates pixels on the edges.",
    "license": [""],
    "tags": ["convolve", "convolution", "iterate", "blur"],
    "downloads": 414687,
    "repositories": ["crates.io"]
  },
  "rust:lrlex": {
    "coordinates": "rust:lrlex",
    "name": "lrlex",
    "description": "Simple lexer generator",
    "license": [""],
    "tags": [],
    "downloads": 93921,
    "repositories": ["crates.io"]
  },
  "rust:lrpar": {
    "coordinates": "rust:lrpar",
    "name": "lrpar",
    "description": "Yacc-compatible parser generator",
    "license": [""],
    "tags": ["lr", "grammar", "parser", "yacc"],
    "downloads": 92254,
    "repositories": ["crates.io"]
  },
  "rust:lrtable": {
    "coordinates": "rust:lrtable",
    "name": "lrtable",
    "description": "LR grammar table generation",
    "license": [""],
    "tags": [],
    "downloads": 97432,
    "repositories": ["crates.io"]
  },
  "rust:lsm303agr": {
    "coordinates": "rust:lsm303agr",
    "name": "lsm303agr",
    "description": "Platform-agnostic Rust driver for the LSM303AGR ultra-compact high-performance eCompass module: ultra-low-power 3D accelerometer and 3D magnetometer.",
    "license": [""],
    "tags": ["accelerometer", "magnetometer", "mems", "embedded-hal-driver"],
    "downloads": 24462,
    "repositories": ["crates.io"]
  },
  "rust:lsp-types": {
    "coordinates": "rust:lsp-types",
    "name": "lsp-types",
    "description": "Types for interaction with a language server, using VSCode''s Language Server Protocol",
    "license": [""],
    "tags": ["vscode", "lsif", "language", "lsp", "server"],
    "downloads": 7095168,
    "repositories": ["crates.io"]
  },
  "rust:lua-src": {
    "coordinates": "rust:lua-src",
    "name": "lua-src",
    "description": "Sources of Lua 5.1/5.2/5.3/5.4 and logic to build them. ",
    "license": [""],
    "tags": ["lua54", "lua51", "lua53", "lua52", "lua"],
    "downloads": 1111643,
    "repositories": ["crates.io"]
  },
  "rust:luajit-src": {
    "coordinates": "rust:luajit-src",
    "name": "luajit-src",
    "description": "Sources of LuaJIT 2.1 and logic to build it. ",
    "license": [""],
    "tags": ["luajit", "lua"],
    "downloads": 1258712,
    "repositories": ["crates.io"]
  },
  "rust:luhn": {
    "coordinates": "rust:luhn",
    "name": "luhn",
    "description": "A Luhn validation library",
    "license": [""],
    "tags": [],
    "downloads": 190916,
    "repositories": ["crates.io"]
  },
  "rust:mac_address": {
    "coordinates": "rust:mac_address",
    "name": "mac_address",
    "description": "Cross-platform retrieval of a network interface MAC address.",
    "license": [""],
    "tags": ["mac", "address", "interface", "network"],
    "downloads": 2660575,
    "repositories": ["crates.io"]
  },
  "rust:macaw": {
    "coordinates": "rust:macaw",
    "name": "macaw",
    "description": "An opinionated game math library built on top the excellent glam",
    "license": [""],
    "tags": ["math", "gamedev"],
    "downloads": 234153,
    "repositories": ["crates.io"]
  },
  "rust:mach2": {
    "coordinates": "rust:mach2",
    "name": "mach2",
    "description": "A Rust interface to the user-space API of the Mach 3.0 kernel that underlies OSX.",
    "license": [""],
    "tags": ["darwin", "kernel", "macos"],
    "downloads": 5139431,
    "repositories": ["crates.io"]
  },
  "rust:macro_magic": {
    "coordinates": "rust:macro_magic",
    "name": "macro_magic",
    "description": "Allows the exporting and importing of the tokens of items across module, file, and crate boundaries",
    "license": [""],
    "tags": ["proc-macro", "proc-macros", "magic", "macros", "macro"],
    "downloads": 1288077,
    "repositories": ["crates.io"]
  },
  "rust:macro_magic_core": {
    "coordinates": "rust:macro_magic_core",
    "name": "macro_magic_core",
    "description": "Core implementation behind macro_magic",
    "license": [""],
    "tags": [],
    "downloads": 1303161,
    "repositories": ["crates.io"]
  },
  "rust:macro_magic_core_macros": {
    "coordinates": "rust:macro_magic_core_macros",
    "name": "macro_magic_core_macros",
    "description": "Support macros for macro_magic_core",
    "license": [""],
    "tags": [],
    "downloads": 1311597,
    "repositories": ["crates.io"]
  },
  "rust:macro_magic_macros": {
    "coordinates": "rust:macro_magic_macros",
    "name": "macro_magic_macros",
    "description": "Proc-macro sub-crate for macro_magic",
    "license": [""],
    "tags": [],
    "downloads": 1303199,
    "repositories": ["crates.io"]
  },
  "rust:macro_rules_attribute": {
    "coordinates": "rust:macro_rules_attribute",
    "name": "macro_rules_attribute",
    "description": "Use declarative macros in attribute or derive position",
    "license": [""],
    "tags": ["derive", "decorator", "macro_rules", "attribute", "macro"],
    "downloads": 2096358,
    "repositories": ["crates.io"]
  },
  "rust:macro_rules_attribute-proc_macro": {
    "coordinates": "rust:macro_rules_attribute-proc_macro",
    "name": "macro_rules_attribute-proc_macro",
    "description": "Use declarative macros as proc_macro attributes or derives",
    "license": [""],
    "tags": [],
    "downloads": 2087991,
    "repositories": ["crates.io"]
  },
  "rust:malloc_buf": {
    "coordinates": "rust:malloc_buf",
    "name": "malloc_buf",
    "description": "Structs for handling malloc''d memory passed to Rust.",
    "license": [""],
    "tags": [],
    "downloads": 8708006,
    "repositories": ["crates.io"]
  },
  "rust:managed": {
    "coordinates": "rust:managed",
    "name": "managed",
    "description": "An interface for logically owning objects, whether or not heap allocation is available.",
    "license": [""],
    "tags": ["ownership"],
    "downloads": 1917248,
    "repositories": ["crates.io"]
  },
  "rust:manganis": {
    "coordinates": "rust:manganis",
    "name": "manganis",
    "description": "Ergonomic, automatic, cross crate asset collection and optimization",
    "license": [""],
    "tags": ["assets"],
    "downloads": 4873,
    "repositories": ["crates.io"]
  },
  "rust:manganis-cli-support": {
    "coordinates": "rust:manganis-cli-support",
    "name": "manganis-cli-support",
    "description": "Ergonomic, automatic, cross crate asset collection and optimization",
    "license": [""],
    "tags": ["assets"],
    "downloads": 6726,
    "repositories": ["crates.io"]
  },
  "rust:manganis-common": {
    "coordinates": "rust:manganis-common",
    "name": "manganis-common",
    "description": "Ergonomic, automatic, cross crate asset collection and optimization",
    "license": [""],
    "tags": ["assets"],
    "downloads": 8597,
    "repositories": ["crates.io"]
  },
  "rust:manganis-macro": {
    "coordinates": "rust:manganis-macro",
    "name": "manganis-macro",
    "description": "Ergonomic, automatic, cross crate asset collection and optimization",
    "license": [""],
    "tags": ["assets"],
    "downloads": 4960,
    "repositories": ["crates.io"]
  },
  "rust:manifest-dir-macros": {
    "coordinates": "rust:manifest-dir-macros",
    "name": "manifest-dir-macros",
    "description": "This crate provides function-like macros to check or operate paths relative to CARGO_MANIFEST_DIR at compile time.",
    "license": [""],
    "tags": ["root", "directory", "cargo_manifest_dir", "project"],
    "downloads": 303650,
    "repositories": ["crates.io"]
  },
  "rust:manyhow": {
    "coordinates": "rust:manyhow",
    "name": "manyhow",
    "description": "proc macro error handling à la anyhow x proc-macro-error",
    "license": [""],
    "tags": ["proc-macro", "error-handling", "error"],
    "downloads": 219208,
    "repositories": ["crates.io"]
  },
  "rust:manyhow-macros": {
    "coordinates": "rust:manyhow-macros",
    "name": "manyhow-macros",
    "description": "Macro for manyhow",
    "license": [""],
    "tags": ["error", "proc-macro", "error-handling"],
    "downloads": 215904,
    "repositories": ["crates.io"]
  },
  "rust:masking": { "name": "masking" },
  "rust:matter": {
    "coordinates": "rust:matter",
    "name": "matter",
    "description": "Universal frontmatter parser.",
    "license": [""],
    "tags": ["yaml", "frontmatter", "toml", "json"],
    "downloads": 45175,
    "repositories": ["crates.io"]
  },
  "rust:maud": {
    "coordinates": "rust:maud",
    "name": "maud",
    "description": "Compile-time HTML templates.",
    "license": [""],
    "tags": [],
    "downloads": 515950,
    "repositories": ["crates.io"]
  },
  "rust:maud_macros": {
    "coordinates": "rust:maud_macros",
    "name": "maud_macros",
    "description": "Compile-time HTML templates.",
    "license": [""],
    "tags": [],
    "downloads": 516863,
    "repositories": ["crates.io"]
  },
  "rust:maxminddb": {
    "coordinates": "rust:maxminddb",
    "name": "maxminddb",
    "description": "Library for reading MaxMind DB format used by GeoIP2 and GeoLite2",
    "license": [""],
    "tags": ["maxmind", "geolocation", "geoip2", "geoip", "ip"],
    "downloads": 2509809,
    "repositories": ["crates.io"]
  },
  "rust:maybe-rayon": {
    "coordinates": "rust:maybe-rayon",
    "name": "maybe-rayon",
    "description": "Either acts as rayon or creates a single-threaded facade",
    "license": [""],
    "tags": [],
    "downloads": 764014,
    "repositories": ["crates.io"]
  },
  "rust:mdbook": {
    "coordinates": "rust:mdbook",
    "name": "mdbook",
    "description": "Creates a book from markdown files",
    "license": [""],
    "tags": ["book", "gitbook", "rustbook", "markdown"],
    "downloads": 4257814,
    "repositories": ["crates.io"]
  },
  "rust:mdbx-sys": {
    "coordinates": "rust:mdbx-sys",
    "name": "mdbx-sys",
    "description": "Rust bindings for libmdbx.",
    "license": [""],
    "tags": ["database", "bindings", "storage-engine", "mdbx", "library"],
    "downloads": 606835,
    "repositories": ["crates.io"]
  },
  "rust:measure_time": {
    "coordinates": "rust:measure_time",
    "name": "measure_time",
    "description": "Provices macros to measure the time until end of scope. ",
    "license": [""],
    "tags": ["humantime", "wall", "elapsed", "time", "measure"],
    "downloads": 3175901,
    "repositories": ["crates.io"]
  },
  "rust:mediatype": {
    "coordinates": "rust:mediatype",
    "name": "mediatype",
    "description": "MIME Media-type parsing",
    "license": [""],
    "tags": ["mime", "media-types", "media-type", "media-extensions"],
    "downloads": 719148,
    "repositories": ["crates.io"]
  },
  "rust:memfd": {
    "coordinates": "rust:memfd",
    "name": "memfd",
    "description": "A pure-Rust library to work with Linux memfd and sealing",
    "license": [""],
    "tags": ["memfd_create", "memfd", "seal", "linux"],
    "downloads": 6254295,
    "repositories": ["crates.io"]
  },
  "rust:memory-db": {
    "coordinates": "rust:memory-db",
    "name": "memory-db",
    "description": "In-memory implementation of hash-db, useful for tests",
    "license": [""],
    "tags": [],
    "downloads": 4288722,
    "repositories": ["crates.io"]
  },
  "rust:memory-stats": {
    "coordinates": "rust:memory-stats",
    "name": "memory-stats",
    "description": "A cross-platform memory profiler for Rust.",
    "license": [""],
    "tags": ["profiling", "memory", "performance"],
    "downloads": 861226,
    "repositories": ["crates.io"]
  },
  "rust:merlin": {
    "coordinates": "rust:merlin",
    "name": "merlin",
    "description": "Composable proof transcripts for public-coin arguments of knowledge",
    "license": [""],
    "tags": ["transcript", "fiat-shamir", "cryptography", "zero-knowledge"],
    "downloads": 8474535,
    "repositories": ["crates.io"]
  },
  "rust:metal": {
    "coordinates": "rust:metal",
    "name": "metal",
    "description": "Rust bindings for Metal",
    "license": [""],
    "tags": ["bindings", "graphics", "metal"],
    "downloads": 2548297,
    "repositories": ["crates.io"]
  },
  "rust:metrics-exporter-prometheus": {
    "coordinates": "rust:metrics-exporter-prometheus",
    "name": "metrics-exporter-prometheus",
    "description": "A metrics-compatible exporter for sending metrics to Prometheus.",
    "license": [""],
    "tags": ["prometheus", "telemetry", "metrics"],
    "downloads": 5090462,
    "repositories": ["crates.io"]
  },
  "rust:metrics-macros": {
    "coordinates": "rust:metrics-macros",
    "name": "metrics-macros",
    "description": "Macros for the metrics crate.",
    "license": [""],
    "tags": ["facade", "macros", "metrics"],
    "downloads": 9049770,
    "repositories": ["crates.io"]
  },
  "rust:metrics-process": {
    "coordinates": "rust:metrics-process",
    "name": "metrics-process",
    "description": "Cross-platform Prometheus style process metrics collector of metrics crate",
    "license": [""],
    "tags": [
      "open-metrics",
      "prometheus",
      "process",
      "metrics",
      "cross-platform"
    ],
    "downloads": 283256,
    "repositories": ["crates.io"]
  },
  "rust:metrics-util": {
    "coordinates": "rust:metrics-util",
    "name": "metrics-util",
    "description": "Helper types/functions used by the metrics ecosystem.",
    "license": [""],
    "tags": ["percentile", "quantile", "metrics"],
    "downloads": 8255855,
    "repositories": ["crates.io"]
  },
  "rust:mev-share-sse": {
    "coordinates": "rust:mev-share-sse",
    "name": "mev-share-sse",
    "description": "MEV-share Server Side Events support in rust ",
    "license": [""],
    "tags": [],
    "downloads": 53228,
    "repositories": ["crates.io"]
  },
  "rust:microbit-common": {
    "coordinates": "rust:microbit-common",
    "name": "microbit-common",
    "description": "Implementation details for the BBC Micro:bit board support crates",
    "license": [""],
    "tags": ["nrf", "arm", "cortex-m", "hal"],
    "downloads": 24176,
    "repositories": ["crates.io"]
  },
  "rust:microbit-v2": {
    "coordinates": "rust:microbit-v2",
    "name": "microbit-v2",
    "description": "Board support crate for the BBC Micro:bit V2",
    "license": [""],
    "tags": ["nrf", "arm", "cortex-m", "hal"],
    "downloads": 22487,
    "repositories": ["crates.io"]
  },
  "rust:miette": {
    "coordinates": "rust:miette",
    "name": "miette",
    "description": "Fancy diagnostic reporting library and protocol for us mere mortals who aren''t compiler hackers.",
    "license": [""],
    "tags": [],
    "downloads": 9222758,
    "repositories": ["crates.io"]
  },
  "rust:miette-derive": {
    "coordinates": "rust:miette-derive",
    "name": "miette-derive",
    "description": "Derive macros for miette. Like `thiserror` for Diagnostics.",
    "license": [""],
    "tags": [],
    "downloads": 9218076,
    "repositories": ["crates.io"]
  },
  "rust:migration-connector": { "name": "migration-connector" },
  "rust:migration-core": { "name": "migration-core" },
  "rust:mimalloc": {
    "coordinates": "rust:mimalloc",
    "name": "mimalloc",
    "description": "Performance and security oriented drop-in allocator",
    "license": [""],
    "tags": ["mimalloc", "encrypted-heap", "performance", "allocator"],
    "downloads": 4670642,
    "repositories": ["crates.io"]
  },
  "rust:mime_guess2": {
    "coordinates": "rust:mime_guess2",
    "name": "mime_guess2",
    "description": "A simple crate for detection of a file''s MIME type by its extension.",
    "license": [""],
    "tags": ["filesystem", "extension", "mime"],
    "downloads": 202135,
    "repositories": ["crates.io"]
  },
  "rust:min-max-heap": {
    "coordinates": "rust:min-max-heap",
    "name": "min-max-heap",
    "description": "An efficient, double-ended priority queue",
    "license": [""],
    "tags": ["priority-queue", "heap"],
    "downloads": 705629,
    "repositories": ["crates.io"]
  },
  "rust:miniscript": {
    "coordinates": "rust:miniscript",
    "name": "miniscript",
    "description": "Miniscript: a subset of Bitcoin Script designed for analysis",
    "license": [""],
    "tags": ["miniscript", "crypto", "bitcoin", "script"],
    "downloads": 809245,
    "repositories": ["crates.io"]
  },
  "rust:mint": {
    "coordinates": "rust:mint",
    "name": "mint",
    "description": "Math interoperability standard types",
    "license": [""],
    "tags": ["math"],
    "downloads": 2010051,
    "repositories": ["crates.io"]
  },
  "rust:mio-aio": {
    "coordinates": "rust:mio-aio",
    "name": "mio-aio",
    "description": "POSIX AIO bindings for mio ",
    "license": [""],
    "tags": ["aio", "non-blocking", "async", "io"],
    "downloads": 99619,
    "repositories": ["crates.io"]
  },
  "rust:mixnet": {
    "coordinates": "rust:mixnet",
    "name": "mixnet",
    "description": "A mix network based on Loopix",
    "license": [""],
    "tags": [],
    "downloads": 719278,
    "repositories": ["crates.io"]
  },
  "rust:mlua": {
    "coordinates": "rust:mlua",
    "name": "mlua",
    "description": "High level bindings to Lua 5.4/5.3/5.2/5.1 (including LuaJIT) and Roblox Luau with async/await features and support of writing native Lua modules in Rust. ",
    "license": [""],
    "tags": ["luau", "luajit", "lua", "scripting", "async"],
    "downloads": 1289192,
    "repositories": ["crates.io"]
  },
  "rust:mlua_derive": {
    "coordinates": "rust:mlua_derive",
    "name": "mlua_derive",
    "description": "Procedural macros for the mlua crate.",
    "license": [""],
    "tags": ["mlua", "lua"],
    "downloads": 469028,
    "repositories": ["crates.io"]
  },
  "rust:mmr-rpc": {
    "coordinates": "rust:mmr-rpc",
    "name": "mmr-rpc",
    "description": "Node-specific RPC methods for interaction with Merkle Mountain Range pallet. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 19161,
    "repositories": ["crates.io"]
  },
  "rust:mobc": {
    "coordinates": "rust:mobc",
    "name": "mobc",
    "description": "A generic connection pool with async/await support",
    "license": [""],
    "tags": ["await", "async", "pool", "database"],
    "downloads": 971552,
    "repositories": ["crates.io"]
  },
  "rust:modular-bitfield": {
    "coordinates": "rust:modular-bitfield",
    "name": "modular-bitfield",
    "description": "Allows to easily define bitfield types with modular building blocks.",
    "license": [""],
    "tags": ["bit", "bitfield", "bitfields"],
    "downloads": 1972785,
    "repositories": ["crates.io"]
  },
  "rust:modular-bitfield-impl": {
    "coordinates": "rust:modular-bitfield-impl",
    "name": "modular-bitfield-impl",
    "description": "Bitfields for structs that allow for modular use of enums.",
    "license": [""],
    "tags": ["bit", "bitfield", "bitfields"],
    "downloads": 1972284,
    "repositories": ["crates.io"]
  },
  "rust:moka": {
    "coordinates": "rust:moka",
    "name": "moka",
    "description": "A fast and concurrent cache library inspired by Java Caffeine",
    "license": [""],
    "tags": ["cache", "concurrent"],
    "downloads": 4952936,
    "repositories": ["crates.io"]
  },
  "rust:mongodb": {
    "coordinates": "rust:mongodb",
    "name": "mongodb",
    "description": "The official MongoDB driver for Rust",
    "license": [""],
    "tags": ["mongodb", "bson", "nosql", "mongo", "database"],
    "downloads": 3455878,
    "repositories": ["crates.io"]
  },
  "rust:mongodb-client": { "name": "mongodb-client" },
  "rust:mongodb-introspection-connector": {
    "name": "mongodb-introspection-connector"
  },
  "rust:mongodb-migration-connector": { "name": "mongodb-migration-connector" },
  "rust:mongodb-query-connector": { "name": "mongodb-query-connector" },
  "rust:mongodb-schema-describer": { "name": "mongodb-schema-describer" },
  "rust:monostate": {
    "coordinates": "rust:monostate",
    "name": "monostate",
    "description": "Type that deserializes only from one specific value",
    "license": [""],
    "tags": ["serialization", "serde"],
    "downloads": 905673,
    "repositories": ["crates.io"]
  },
  "rust:monostate-impl": {
    "coordinates": "rust:monostate-impl",
    "name": "monostate-impl",
    "description": "Implementation detail of the monostate crate",
    "license": [""],
    "tags": [],
    "downloads": 904590,
    "repositories": ["crates.io"]
  },
  "rust:moveit": {
    "coordinates": "rust:moveit",
    "name": "moveit",
    "description": "A library for safe, in-place construction of Rust (and C++!) objects.",
    "license": [""],
    "tags": ["no_std", "macros", "ownership", "lifetime", "ffi"],
    "downloads": 431203,
    "repositories": ["crates.io"]
  },
  "rust:mozjpeg": {
    "coordinates": "rust:mozjpeg",
    "name": "mozjpeg",
    "description": "Higher-level wrapper for Mozilla''s JPEG library",
    "license": [""],
    "tags": ["encoder", "jpeg", "libjpeg", "image", "decoder"],
    "downloads": 280131,
    "repositories": ["crates.io"]
  },
  "rust:mozjpeg-sys": {
    "coordinates": "rust:mozjpeg-sys",
    "name": "mozjpeg-sys",
    "description": "FFI bindings for MozJPEG v4.  MozJPEG is automatically built and linked statically. Requires nasm and a C compiler.",
    "license": [""],
    "tags": ["static", "mozjpeg", "jpeg", "libjpeg"],
    "downloads": 446594,
    "repositories": ["crates.io"]
  },
  "rust:mp4": {
    "coordinates": "rust:mp4",
    "name": "mp4",
    "description": "MP4 reader and writer library in Rust.",
    "license": [""],
    "tags": ["iso-mp4", "isobmff", "mp4", "video", "multimedia"],
    "downloads": 235941,
    "repositories": ["crates.io"]
  },
  "rust:mrecordlog": {
    "coordinates": "rust:mrecordlog",
    "name": "mrecordlog",
    "description": "Quickwit''s shared record log.",
    "license": [""],
    "tags": [],
    "downloads": 8519,
    "repositories": ["crates.io"]
  },
  "rust:muda": {
    "coordinates": "rust:muda",
    "name": "muda",
    "description": "Menu Utilities for Desktop Applications",
    "license": [""],
    "tags": ["windowing", "menu"],
    "downloads": 837110,
    "repositories": ["crates.io"]
  },
  "rust:multiaddr": {
    "coordinates": "rust:multiaddr",
    "name": "multiaddr",
    "description": "Implementation of the multiaddr format",
    "license": [""],
    "tags": ["multiaddr", "ipfs"],
    "downloads": 6281704,
    "repositories": ["crates.io"]
  },
  "rust:multibase": {
    "coordinates": "rust:multibase",
    "name": "multibase",
    "description": "multibase in rust",
    "license": [""],
    "tags": ["ipld", "cid", "multihash", "ipfs", "no_std"],
    "downloads": 6131578,
    "repositories": ["crates.io"]
  },
  "rust:multihash-codetable": {
    "coordinates": "rust:multihash-codetable",
    "name": "multihash-codetable",
    "description": "Default multihash code-table with cryptographically secure hash implementations",
    "license": [""],
    "tags": [],
    "downloads": 507460,
    "repositories": ["crates.io"]
  },
  "rust:multihash-derive": {
    "coordinates": "rust:multihash-derive",
    "name": "multihash-derive",
    "description": "Proc macro for deriving custom multihash tables.",
    "license": [""],
    "tags": [],
    "downloads": 6422669,
    "repositories": ["crates.io"]
  },
  "rust:multihash-derive-impl": {
    "coordinates": "rust:multihash-derive-impl",
    "name": "multihash-derive-impl",
    "description": "Internal proc-macro crate for the MultihashDigest derive",
    "license": [""],
    "tags": [],
    "downloads": 507001,
    "repositories": ["crates.io"]
  },
  "rust:multistream-select": {
    "coordinates": "rust:multistream-select",
    "name": "multistream-select",
    "description": "Multistream-select negotiation protocol for libp2p",
    "license": [""],
    "tags": ["libp2p", "peer-to-peer", "networking"],
    "downloads": 5699065,
    "repositories": ["crates.io"]
  },
  "rust:multiversion": {
    "coordinates": "rust:multiversion",
    "name": "multiversion",
    "description": "Easy function multiversioning",
    "license": [""],
    "tags": [],
    "downloads": 3235709,
    "repositories": ["crates.io"]
  },
  "rust:multiversion-macros": {
    "coordinates": "rust:multiversion-macros",
    "name": "multiversion-macros",
    "description": "Implementation crate for multiversion",
    "license": [""],
    "tags": [],
    "downloads": 3236235,
    "repositories": ["crates.io"]
  },
  "rust:murmur3": {
    "coordinates": "rust:murmur3",
    "name": "murmur3",
    "description": "A rust implementation of Murmur3 hash",
    "license": [""],
    "tags": ["murmur3", "hash", "murmur"],
    "downloads": 2436839,
    "repositories": ["crates.io"]
  },
  "rust:murmurhash32": {
    "coordinates": "rust:murmurhash32",
    "name": "murmurhash32",
    "description": "A simple implementation of murmurhash32_2",
    "license": [""],
    "tags": ["murmurhash"],
    "downloads": 3150630,
    "repositories": ["crates.io"]
  },
  "rust:mutate_once": {
    "coordinates": "rust:mutate_once",
    "name": "mutate_once",
    "description": "Interior mutability, write-once and borrowable as plain &T",
    "license": [""],
    "tags": ["mutability", "write-once", "cell"],
    "downloads": 2638019,
    "repositories": ["crates.io"]
  },
  "rust:mutually_exclusive_features": {
    "coordinates": "rust:mutually_exclusive_features",
    "name": "mutually_exclusive_features",
    "description": "Macros to check that only none or one of a set of features is enabled at a time, as known as mutually exclusive features",
    "license": [""],
    "tags": ["feature", "exclusive", "macro", "mutually_exclusive", "mutually"],
    "downloads": 473931,
    "repositories": ["crates.io"]
  },
  "rust:mysql_async": {
    "coordinates": "rust:mysql_async",
    "name": "mysql_async",
    "description": "Tokio based asynchronous MySql client library.",
    "license": [""],
    "tags": ["asynchronous", "mysql", "database", "async"],
    "downloads": 2193182,
    "repositories": ["crates.io"]
  },
  "rust:mysql_common": {
    "coordinates": "rust:mysql_common",
    "name": "mysql_common",
    "description": "MySql protocol primitives",
    "license": [""],
    "tags": ["mysql", "database"],
    "downloads": 4759669,
    "repositories": ["crates.io"]
  },
  "rust:naga": {
    "coordinates": "rust:naga",
    "name": "naga",
    "description": "Shader translation infrastructure",
    "license": [""],
    "tags": ["glsl", "shader", "spir-v", "msl"],
    "downloads": 4355712,
    "repositories": ["crates.io"]
  },
  "rust:nalgebra-macros": {
    "coordinates": "rust:nalgebra-macros",
    "name": "nalgebra-macros",
    "description": "Procedural macros for nalgebra",
    "license": [""],
    "tags": ["algebra", "linear", "matrix", "math", "vector"],
    "downloads": 7807723,
    "repositories": ["crates.io"]
  },
  "rust:names": {
    "coordinates": "rust:names",
    "name": "names",
    "description": "A random name generator with names suitable for use in container instances, project names, application instances, etc. ",
    "license": [""],
    "tags": ["name", "random"],
    "downloads": 5485262,
    "repositories": ["crates.io"]
  },
  "rust:nanoid": {
    "coordinates": "rust:nanoid",
    "name": "nanoid",
    "description": "A tiny, secure, URL-friendly, unique string ID generator for Rust.",
    "license": [""],
    "tags": ["url", "uuid", "id", "random"],
    "downloads": 3093443,
    "repositories": ["crates.io"]
  },
  "rust:nasm-rs": {
    "coordinates": "rust:nasm-rs",
    "name": "nasm-rs",
    "description": "Run NASM during your Cargo build.",
    "license": [""],
    "tags": ["nasm", "assembler", "build-dependencies", "cargo", "assembly"],
    "downloads": 1101019,
    "repositories": ["crates.io"]
  },
  "rust:natord": {
    "coordinates": "rust:natord",
    "name": "natord",
    "description": "Natural ordering for Rust",
    "license": [""],
    "tags": ["sort", "order", "natural"],
    "downloads": 1508535,
    "repositories": ["crates.io"]
  },
  "rust:nb": {
    "coordinates": "rust:nb",
    "name": "nb",
    "description": "Minimal non-blocking I/O layer",
    "license": [""],
    "tags": ["await", "io", "futures"],
    "downloads": 9493395,
    "repositories": ["crates.io"]
  },
  "rust:ndarray-rand": {
    "coordinates": "rust:ndarray-rand",
    "name": "ndarray-rand",
    "description": "Constructors for randomized arrays. `rand` integration for `ndarray`.",
    "license": [""],
    "tags": ["rand", "ndarray", "matrix", "multidimensional"],
    "downloads": 1166088,
    "repositories": ["crates.io"]
  },
  "rust:ndk": {
    "coordinates": "rust:ndk",
    "name": "ndk",
    "description": "Safe Rust bindings to the Android NDK",
    "license": [""],
    "tags": ["ndk", "android"],
    "downloads": 4767023,
    "repositories": ["crates.io"]
  },
  "rust:ndk-context": {
    "coordinates": "rust:ndk-context",
    "name": "ndk-context",
    "description": "Handles for accessing Android APIs",
    "license": [""],
    "tags": ["jni", "android", "apk", "ndk"],
    "downloads": 3306424,
    "repositories": ["crates.io"]
  },
  "rust:ndk-sys": {
    "coordinates": "rust:ndk-sys",
    "name": "ndk-sys",
    "description": "FFI bindings for the Android NDK",
    "license": [""],
    "tags": ["ndk", "android"],
    "downloads": 4767693,
    "repositories": ["crates.io"]
  },
  "rust:netlink-packet-core": {
    "coordinates": "rust:netlink-packet-core",
    "name": "netlink-packet-core",
    "description": "netlink packet types",
    "license": [""],
    "tags": ["linux", "netlink"],
    "downloads": 5352770,
    "repositories": ["crates.io"]
  },
  "rust:netlink-packet-route": {
    "coordinates": "rust:netlink-packet-route",
    "name": "netlink-packet-route",
    "description": "netlink packet types",
    "license": [""],
    "tags": ["netlink", "linux"],
    "downloads": 5262074,
    "repositories": ["crates.io"]
  },
  "rust:netlink-packet-utils": {
    "coordinates": "rust:netlink-packet-utils",
    "name": "netlink-packet-utils",
    "description": "macros and helpers for parsing netlink messages",
    "license": [""],
    "tags": [],
    "downloads": 5360696,
    "repositories": ["crates.io"]
  },
  "rust:netlink-proto": {
    "coordinates": "rust:netlink-proto",
    "name": "netlink-proto",
    "description": "async netlink protocol",
    "license": [""],
    "tags": ["linux", "netlink", "async"],
    "downloads": 4823458,
    "repositories": ["crates.io"]
  },
  "rust:netlink-sys": {
    "coordinates": "rust:netlink-sys",
    "name": "netlink-sys",
    "description": "netlink sockets, with optional integration with tokio",
    "license": [""],
    "tags": ["netlink", "ip", "linux"],
    "downloads": 5473683,
    "repositories": ["crates.io"]
  },
  "rust:never": {
    "coordinates": "rust:never",
    "name": "never",
    "description": "A stable version of the unstable never type (!)",
    "license": [""],
    "tags": ["void", "stable", "never", "unstable"],
    "downloads": 656470,
    "repositories": ["crates.io"]
  },
  "rust:new_mime_guess": {
    "coordinates": "rust:new_mime_guess",
    "name": "new_mime_guess",
    "description": "A simple crate for associating MIME types to file extensions.",
    "license": [""],
    "tags": ["extension", "filesystem", "mime"],
    "downloads": 240699,
    "repositories": ["crates.io"]
  },
  "rust:new_string_template": {
    "coordinates": "rust:new_string_template",
    "name": "new_string_template",
    "description": "Simple Customizable String-Templating Library for Rust.",
    "license": [""],
    "tags": ["template", "string", "runtime"],
    "downloads": 358781,
    "repositories": ["crates.io"]
  },
  "rust:newline-converter": {
    "coordinates": "rust:newline-converter",
    "name": "newline-converter",
    "description": "Newline byte converter library",
    "license": [""],
    "tags": ["linebreak", "newline", "conversion"],
    "downloads": 2026216,
    "repositories": ["crates.io"]
  },
  "rust:newtype": {
    "coordinates": "rust:newtype",
    "name": "newtype",
    "description": "Custom Derive to give tuple structs newtype semantics",
    "license": [""],
    "tags": [],
    "downloads": 9993,
    "repositories": ["crates.io"]
  },
  "rust:next_version": {
    "coordinates": "rust:next_version",
    "name": "next_version",
    "description": "Determine next semantic version based on conventional commits",
    "license": [""],
    "tags": ["commits", "semver", "semantic", "conventional", "versioning"],
    "downloads": 75161,
    "repositories": ["crates.io"]
  },
  "rust:nkeys": {
    "coordinates": "rust:nkeys",
    "name": "nkeys",
    "description": "Rust implementation of the NATS nkeys library",
    "license": [""],
    "tags": ["crypto", "ed25519", "nats", "cryptography"],
    "downloads": 2204078,
    "repositories": ["crates.io"]
  },
  "rust:no-std-net": {
    "coordinates": "rust:no-std-net",
    "name": "no-std-net",
    "description": "Rust''s std::net... without the ''std''.",
    "license": [""],
    "tags": [],
    "downloads": 3721206,
    "repositories": ["crates.io"]
  },
  "rust:nom_locate": {
    "coordinates": "rust:nom_locate",
    "name": "nom_locate",
    "description": "A special input type for nom to locate tokens",
    "license": [""],
    "tags": ["nom"],
    "downloads": 3888989,
    "repositories": ["crates.io"]
  },
  "rust:nonempty": {
    "coordinates": "rust:nonempty",
    "name": "nonempty",
    "description": "Correct by construction non-empty vector",
    "license": [""],
    "tags": [],
    "downloads": 2126034,
    "repositories": ["crates.io"]
  },
  "rust:noop_proc_macro": {
    "coordinates": "rust:noop_proc_macro",
    "name": "noop_proc_macro",
    "description": "No-op proc_macro, literally does nothing",
    "license": [""],
    "tags": ["noop", "proc_macro"],
    "downloads": 1015240,
    "repositories": ["crates.io"]
  },
  "rust:normpath": {
    "coordinates": "rust:normpath",
    "name": "normpath",
    "description": "More reliable path manipulation ",
    "license": [""],
    "tags": ["windows", "canonicalize", "path", "absolute", "normalize"],
    "downloads": 5408369,
    "repositories": ["crates.io"]
  },
  "rust:notify-debouncer-full": {
    "coordinates": "rust:notify-debouncer-full",
    "name": "notify-debouncer-full",
    "description": "notify event debouncer optimized for ease of use",
    "license": [""],
    "tags": ["watch", "filesystem", "events", "notify"],
    "downloads": 1085414,
    "repositories": ["crates.io"]
  },
  "rust:notify-debouncer-mini": {
    "coordinates": "rust:notify-debouncer-mini",
    "name": "notify-debouncer-mini",
    "description": "notify mini debouncer for events",
    "license": [""],
    "tags": ["events", "notify", "watch", "filesystem"],
    "downloads": 1770401,
    "repositories": ["crates.io"]
  },
  "rust:now": {
    "coordinates": "rust:now",
    "name": "now",
    "description": "a time toolkit for chrono",
    "license": [""],
    "tags": [],
    "downloads": 774201,
    "repositories": ["crates.io"]
  },
  "rust:nrf-hal-common": {
    "coordinates": "rust:nrf-hal-common",
    "name": "nrf-hal-common",
    "description": "Implementation details of the nRF HAL crates. Don''t use this directly, use one of the specific HAL crates instead (`nrfXYZ-hal`).",
    "license": [""],
    "tags": ["nrf52", "arm", "nrf", "cortex-m", "hal"],
    "downloads": 91428,
    "repositories": ["crates.io"]
  },
  "rust:nrf-usbd": {
    "coordinates": "rust:nrf-usbd",
    "name": "nrf-usbd",
    "description": "USB driver for nRF microcontrollers",
    "license": [""],
    "tags": ["peripheral", "nrf52", "nrf", "usb", "hal"],
    "downloads": 49587,
    "repositories": ["crates.io"]
  },
  "rust:nrf52833-hal": {
    "coordinates": "rust:nrf52833-hal",
    "name": "nrf52833-hal",
    "description": "HAL for nRF52833 microcontrollers",
    "license": [""],
    "tags": ["nrf52", "nrf52833", "arm", "cortex-m", "hal"],
    "downloads": 32491,
    "repositories": ["crates.io"]
  },
  "rust:nrf52833-pac": {
    "coordinates": "rust:nrf52833-pac",
    "name": "nrf52833-pac",
    "description": "Peripheral Access Crate for Nordic''s nrf52833 microcontroller",
    "license": [""],
    "tags": ["arm", "nrf", "no-std", "peripherals", "cortex-m"],
    "downloads": 63844,
    "repositories": ["crates.io"]
  },
  "rust:nucleo": {
    "coordinates": "rust:nucleo",
    "name": "nucleo",
    "description": "plug and play high performance fuzzy matcher",
    "license": [""],
    "tags": [],
    "downloads": 46969,
    "repositories": ["crates.io"]
  },
  "rust:nucleo-matcher": {
    "coordinates": "rust:nucleo-matcher",
    "name": "nucleo-matcher",
    "description": "plug and play high performance fuzzy matcher",
    "license": [""],
    "tags": [],
    "downloads": 47113,
    "repositories": ["crates.io"]
  },
  "rust:nuid": {
    "coordinates": "rust:nuid",
    "name": "nuid",
    "description": "A highly performant unique identifier generator.",
    "license": [""],
    "tags": ["nuid", "uuid", "guid"],
    "downloads": 1989405,
    "repositories": ["crates.io"]
  },
  "rust:num-conv": {
    "coordinates": "rust:num-conv",
    "name": "num-conv",
    "description": "`num_conv` is a crate to convert between integer types without using `as` casts. This provides better certainty when refactoring, makes the exact behavior of code more explicit, and allows using turbofish syntax. ",
    "license": [""],
    "tags": ["truncate", "extend", "integer", "convert", "cast"],
    "downloads": 7194944,
    "repositories": ["crates.io"]
  },
  "rust:numeric-sort": {
    "coordinates": "rust:numeric-sort",
    "name": "numeric-sort",
    "description": "A zero-allocation, human-readable sorting library. ",
    "license": [""],
    "tags": [],
    "downloads": 4108,
    "repositories": ["crates.io"]
  },
  "rust:numfmt": {
    "coordinates": "rust:numfmt",
    "name": "numfmt",
    "description": "Fast and friendly Rust number formatting",
    "license": [""],
    "tags": ["float-format", "number-format", "formatting"],
    "downloads": 10575,
    "repositories": ["crates.io"]
  },
  "rust:numpy": {
    "coordinates": "rust:numpy",
    "name": "numpy",
    "description": "PyO3-based Rust bindings of the NumPy C-API",
    "license": [""],
    "tags": ["numpy", "ffi", "pyo3", "python"],
    "downloads": 2712497,
    "repositories": ["crates.io"]
  },
  "rust:nybbles": {
    "coordinates": "rust:nybbles",
    "name": "nybbles",
    "description": "Efficient nibble-sized (4-bit) byte sequence data structure",
    "license": [""],
    "tags": ["nibbles", "vector", "ethereum"],
    "downloads": 56640,
    "repositories": ["crates.io"]
  },
  "rust:oauth2": {
    "coordinates": "rust:oauth2",
    "name": "oauth2",
    "description": "An extensible, strongly-typed implementation of OAuth2",
    "license": [""],
    "tags": [],
    "downloads": 4492338,
    "repositories": ["crates.io"]
  },
  "rust:objc": {
    "coordinates": "rust:objc",
    "name": "objc",
    "description": "Objective-C Runtime bindings and wrapper for Rust.",
    "license": [""],
    "tags": ["osx", "uikit", "objective-c", "cocoa", "ios"],
    "downloads": 8775215,
    "repositories": ["crates.io"]
  },
  "rust:objc-foundation": {
    "coordinates": "rust:objc-foundation",
    "name": "objc-foundation",
    "description": "Rust wrapper for Objective-C''s Foundation framework.",
    "license": [""],
    "tags": ["objective-c", "ios", "uikit", "osx", "cocoa"],
    "downloads": 5029611,
    "repositories": ["crates.io"]
  },
  "rust:objc-sys": {
    "coordinates": "rust:objc-sys",
    "name": "objc-sys",
    "description": "Raw bindings to the Objective-C runtime and ABI",
    "license": [""],
    "tags": ["ios", "sys", "objc_msgsend", "objective-c", "macos"],
    "downloads": 1606058,
    "repositories": ["crates.io"]
  },
  "rust:objc2": {
    "coordinates": "rust:objc2",
    "name": "objc2",
    "description": "Objective-C interface and runtime bindings",
    "license": [""],
    "tags": ["ios", "objective-c", "objc", "objc_msgsend", "macos"],
    "downloads": 1638182,
    "repositories": ["crates.io"]
  },
  "rust:objc2-encode": {
    "coordinates": "rust:objc2-encode",
    "name": "objc2-encode",
    "description": "Objective-C type-encoding representation and parsing",
    "license": [""],
    "tags": ["ios", "encode", "objective-c", "macos"],
    "downloads": 1627349,
    "repositories": ["crates.io"]
  },
  "rust:objc_exception": {
    "coordinates": "rust:objc_exception",
    "name": "objc_exception",
    "description": "Rust interface for Objective-C''s throw and try/catch statements.",
    "license": [""],
    "tags": ["osx", "objective-c", "ios"],
    "downloads": 3305276,
    "repositories": ["crates.io"]
  },
  "rust:objc_id": {
    "coordinates": "rust:objc_id",
    "name": "objc_id",
    "description": "Rust smart pointers for Objective-C reference counting.",
    "license": [""],
    "tags": ["osx", "ios", "objective-c"],
    "downloads": 5269189,
    "repositories": ["crates.io"]
  },
  "rust:object_store": {
    "coordinates": "rust:object_store",
    "name": "object_store",
    "description": "A generic object store interface for uniformly interacting with AWS S3, Google Cloud Storage, Azure Blob Storage and local files.",
    "license": [""],
    "tags": ["object", "storage", "cloud"],
    "downloads": 4120288,
    "repositories": ["crates.io"]
  },
  "rust:obkv": {
    "coordinates": "rust:obkv",
    "name": "obkv",
    "description": "Optimized-bytes key and a value store",
    "license": [""],
    "tags": ["lightweight", "minimalist", "key-value-store"],
    "downloads": 176153,
    "repositories": ["crates.io"]
  },
  "rust:oboe": {
    "coordinates": "rust:oboe",
    "name": "oboe",
    "description": "Safe interface for oboe an android library for low latency audio IO",
    "license": [""],
    "tags": ["oboe", "opensles", "aaudio", "android", "audio"],
    "downloads": 1381431,
    "repositories": ["crates.io"]
  },
  "rust:oboe-sys": {
    "coordinates": "rust:oboe-sys",
    "name": "oboe-sys",
    "description": "Unsafe bindings for oboe an android library for low latency audio IO",
    "license": [""],
    "tags": ["oboe", "opensles", "aaudio", "android", "audio"],
    "downloads": 1329262,
    "repositories": ["crates.io"]
  },
  "rust:ofb": {
    "coordinates": "rust:ofb",
    "name": "ofb",
    "description": "Output Feedback][OFB] (OFB) block cipher mode of operation",
    "license": [""],
    "tags": ["crypto", "block-mode", "ciphers", "stream-cipher"],
    "downloads": 509393,
    "repositories": ["crates.io"]
  },
  "rust:oncemutex": {
    "coordinates": "rust:oncemutex",
    "name": "oncemutex",
    "description": "A mutex providing one-time synchronized access, then safe unsynchronized access.",
    "license": [""],
    "tags": [],
    "downloads": 1947359,
    "repositories": ["crates.io"]
  },
  "rust:oneshot": {
    "coordinates": "rust:oneshot",
    "name": "oneshot",
    "description": "Oneshot spsc channel with (potentially) lock-free non-blocking send, and a receiver supporting both thread blocking receive operations as well as Future based async polling. ",
    "license": [""],
    "tags": ["spsc", "channel", "oneshot", "sync", "async"],
    "downloads": 3306400,
    "repositories": ["crates.io"]
  },
  "rust:onig": {
    "coordinates": "rust:onig",
    "name": "onig",
    "description": "Rust-Onig is a set of Rust bindings for the Oniguruma regular expression library. Oniguruma is a modern regex library with support for multiple character encodings and regex syntaxes. ",
    "license": [""],
    "tags": [],
    "downloads": 5855054,
    "repositories": ["crates.io"]
  },
  "rust:onig_sys": {
    "coordinates": "rust:onig_sys",
    "name": "onig_sys",
    "description": "The `onig_sys` crate contains raw rust bindings to the oniguruma library. This crate exposes a set of unsafe functions which can then be used by other crates to create safe wrappers around Oniguruma.  You probably don''t want to link to this crate directly; instead check out the `onig` crate. ",
    "license": [""],
    "tags": [],
    "downloads": 5721897,
    "repositories": ["crates.io"]
  },
  "rust:open": {
    "coordinates": "rust:open",
    "name": "open",
    "description": "Open a path or URL using the program configured on the system",
    "license": [""],
    "tags": ["start", "xdg-open", "launch", "open"],
    "downloads": 7375613,
    "repositories": ["crates.io"]
  },
  "rust:openapi": {
    "coordinates": "rust:openapi",
    "name": "openapi",
    "description": "Rust bindings for openapi schemas",
    "license": [""],
    "tags": ["openapi", "swagger"],
    "downloads": 19568,
    "repositories": ["crates.io"]
  },
  "rust:opendal": {
    "coordinates": "rust:opendal",
    "name": "opendal",
    "description": "Apache OpenDAL™: Access data freely, painlessly, and efficiently.",
    "license": [""],
    "tags": ["azblob", "gcs", "fs", "s3", "storage"],
    "downloads": 1279743,
    "repositories": ["crates.io"]
  },
  "rust:opener": {
    "coordinates": "rust:opener",
    "name": "opener",
    "description": "Open a file or link using the system default program.",
    "license": [""],
    "tags": ["launcher", "open", "browser", "default"],
    "downloads": 9098854,
    "repositories": ["crates.io"]
  },
  "rust:openidconnect": {
    "coordinates": "rust:openidconnect",
    "name": "openidconnect",
    "description": "OpenID Connect library",
    "license": [""],
    "tags": ["openid", "oauth2", "authentication", "oidc", "auth"],
    "downloads": 1238356,
    "repositories": ["crates.io"]
  },
  "rust:opensearch": {
    "coordinates": "rust:opensearch",
    "name": "opensearch",
    "description": "Official OpenSearch Rust client",
    "license": [""],
    "tags": ["search", "lucene", "elasticsearch", "opensearch"],
    "downloads": 263243,
    "repositories": ["crates.io"]
  },
  "rust:opentelemetry-appender-tracing": {
    "coordinates": "rust:opentelemetry-appender-tracing",
    "name": "opentelemetry-appender-tracing",
    "description": "An OpenTelemetry log appender for the tracing crate",
    "license": [""],
    "tags": ["tracing", "log", "logs", "opentelemetry"],
    "downloads": 109135,
    "repositories": ["crates.io"]
  },
  "rust:opentelemetry-proto": {
    "coordinates": "rust:opentelemetry-proto",
    "name": "opentelemetry-proto",
    "description": "Protobuf generated files and transformations.",
    "license": [""],
    "tags": ["tracing", "otlp", "logging", "metrics", "opentelemetry"],
    "downloads": 8711238,
    "repositories": ["crates.io"]
  },
  "rust:opentls": {
    "coordinates": "rust:opentls",
    "name": "opentls",
    "description": "TLS connections with OpenSSL. ",
    "license": [""],
    "tags": [],
    "downloads": 1142545,
    "repositories": ["crates.io"]
  },
  "rust:orbclient": {
    "coordinates": "rust:orbclient",
    "name": "orbclient",
    "description": "The Orbital Client Library",
    "license": [""],
    "tags": ["orbital", "redox", "ui"],
    "downloads": 1579814,
    "repositories": ["crates.io"]
  },
  "rust:ord-bitcoincore-rpc": {
    "coordinates": "rust:ord-bitcoincore-rpc",
    "name": "ord-bitcoincore-rpc",
    "description": "RPC client library for the Bitcoin Core JSON-RPC API.",
    "license": [""],
    "tags": ["crypto", "bitcoin-core", "bitcoin", "rpc"],
    "downloads": 34663,
    "repositories": ["crates.io"]
  },
  "rust:ord-bitcoincore-rpc-json": {
    "coordinates": "rust:ord-bitcoincore-rpc-json",
    "name": "ord-bitcoincore-rpc-json",
    "description": "JSON-enabled type structs for bitcoincore-rpc crate.",
    "license": [""],
    "tags": ["crypto", "bitcoin", "bitcoin-core", "rpc"],
    "downloads": 34034,
    "repositories": ["crates.io"]
  },
  "rust:ordered-stream": {
    "coordinates": "rust:ordered-stream",
    "name": "ordered-stream",
    "description": "Streams that are ordered relative to external events",
    "license": [""],
    "tags": ["timestamp", "async", "stream"],
    "downloads": 5859626,
    "repositories": ["crates.io"]
  },
  "rust:ordermap": {
    "coordinates": "rust:ordermap",
    "name": "ordermap",
    "description": "A hash table with consistent order and fast iteration. NOTE: This crate was renamed to indexmap. Please use it under its new name.",
    "license": [""],
    "tags": ["hashmap"],
    "downloads": 4605948,
    "repositories": ["crates.io"]
  },
  "rust:owned_ttf_parser": {
    "coordinates": "rust:owned_ttf_parser",
    "name": "owned_ttf_parser",
    "description": "ttf-parser plus support for owned data",
    "license": [""],
    "tags": ["opentype", "otf", "ttf", "truetype"],
    "downloads": 7235676,
    "repositories": ["crates.io"]
  },
  "rust:ownedbytes": {
    "coordinates": "rust:ownedbytes",
    "name": "ownedbytes",
    "description": "Expose data as static slice",
    "license": [""],
    "tags": [],
    "downloads": 1657593,
    "repositories": ["crates.io"]
  },
  "rust:packedvec": {
    "coordinates": "rust:packedvec",
    "name": "packedvec",
    "description": "Store vectors of integers efficiently",
    "license": [""],
    "tags": [],
    "downloads": 90429,
    "repositories": ["crates.io"]
  },
  "rust:pad-adapter": {
    "coordinates": "rust:pad-adapter",
    "name": "pad-adapter",
    "description": "A utility crate that provides pad adapter.",
    "license": [""],
    "tags": ["pad", "adapter", "aligned", "tabs", "whitespace"],
    "downloads": 301303,
    "repositories": ["crates.io"]
  },
  "rust:page_size": {
    "coordinates": "rust:page_size",
    "name": "page_size",
    "description": "Provides an easy, fast, cross-platform way to retrieve the memory page size",
    "license": [""],
    "tags": ["page_size", "page", "ram", "memory"],
    "downloads": 3691730,
    "repositories": ["crates.io"]
  },
  "rust:palette": {
    "coordinates": "rust:palette",
    "name": "palette",
    "description": "Convert and manage colors with a focus on correctness, flexibility and ease of use.",
    "license": [""],
    "tags": ["linear", "pixel", "color", "rgb", "conversion"],
    "downloads": 1816961,
    "repositories": ["crates.io"]
  },
  "rust:palette_derive": {
    "coordinates": "rust:palette_derive",
    "name": "palette_derive",
    "description": "Automatically implement traits from the palette crate.",
    "license": [""],
    "tags": ["macros", "derive", "palette"],
    "downloads": 1754318,
    "repositories": ["crates.io"]
  },
  "rust:pallet-authority-discovery": {
    "coordinates": "rust:pallet-authority-discovery",
    "name": "pallet-authority-discovery",
    "description": "FRAME pallet for authority discovery (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 65793,
    "repositories": ["crates.io"]
  },
  "rust:pallet-authorship": {
    "coordinates": "rust:pallet-authorship",
    "name": "pallet-authorship",
    "description": "Block and Uncle Author tracking for the FRAME (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 249421,
    "repositories": ["crates.io"]
  },
  "rust:pallet-babe": {
    "coordinates": "rust:pallet-babe",
    "name": "pallet-babe",
    "description": "Consensus extension module for BABE consensus. Collects on-chain randomness from VRF outputs and manages epoch transitions. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 77596,
    "repositories": ["crates.io"]
  },
  "rust:pallet-bags-list": {
    "coordinates": "rust:pallet-bags-list",
    "name": "pallet-bags-list",
    "description": "FRAME pallet bags list (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 25499,
    "repositories": ["crates.io"]
  },
  "rust:pallet-balances": {
    "coordinates": "rust:pallet-balances",
    "name": "pallet-balances",
    "description": "FRAME pallet to manage balances (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 276718,
    "repositories": ["crates.io"]
  },
  "rust:pallet-collective": {
    "coordinates": "rust:pallet-collective",
    "name": "pallet-collective",
    "description": "Collective system: Members of a set of account IDs can make their collective feelings known through dispatched calls from one of two specialized origins. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 62528,
    "repositories": ["crates.io"]
  },
  "rust:pallet-election-provider-multi-phase": {
    "coordinates": "rust:pallet-election-provider-multi-phase",
    "name": "pallet-election-provider-multi-phase",
    "description": "PALLET two phase election providers (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 36701,
    "repositories": ["crates.io"]
  },
  "rust:pallet-election-provider-support-benchmarking": {
    "coordinates": "rust:pallet-election-provider-support-benchmarking",
    "name": "pallet-election-provider-support-benchmarking",
    "description": "Benchmarking for election provider support onchain config trait (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 36839,
    "repositories": ["crates.io"]
  },
  "rust:pallet-grandpa": {
    "coordinates": "rust:pallet-grandpa",
    "name": "pallet-grandpa",
    "description": "FRAME pallet for GRANDPA finality gadget (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 230420,
    "repositories": ["crates.io"]
  },
  "rust:pallet-identity": {
    "coordinates": "rust:pallet-identity",
    "name": "pallet-identity",
    "description": "FRAME identity management pallet (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 55286,
    "repositories": ["crates.io"]
  },
  "rust:pallet-im-online": {
    "coordinates": "rust:pallet-im-online",
    "name": "pallet-im-online",
    "description": "FRAME''s I''m online pallet (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 63053,
    "repositories": ["crates.io"]
  },
  "rust:pallet-indices": {
    "coordinates": "rust:pallet-indices",
    "name": "pallet-indices",
    "description": "FRAME indices management pallet (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 126463,
    "repositories": ["crates.io"]
  },
  "rust:pallet-mmr": {
    "coordinates": "rust:pallet-mmr",
    "name": "pallet-mmr",
    "description": "FRAME Merkle Mountain Range pallet. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 26567,
    "repositories": ["crates.io"]
  },
  "rust:pallet-multisig": {
    "coordinates": "rust:pallet-multisig",
    "name": "pallet-multisig",
    "description": "FRAME multi-signature dispatch pallet (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 67575,
    "repositories": ["crates.io"]
  },
  "rust:pallet-nomination-pools": {
    "coordinates": "rust:pallet-nomination-pools",
    "name": "pallet-nomination-pools",
    "description": "FRAME nomination pools pallet (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 27271,
    "repositories": ["crates.io"]
  },
  "rust:pallet-nomination-pools-runtime-api": {
    "coordinates": "rust:pallet-nomination-pools-runtime-api",
    "name": "pallet-nomination-pools-runtime-api",
    "description": "Runtime API for nomination-pools FRAME pallet (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 24483,
    "repositories": ["crates.io"]
  },
  "rust:pallet-offences": {
    "coordinates": "rust:pallet-offences",
    "name": "pallet-offences",
    "description": "FRAME offences pallet (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 63677,
    "repositories": ["crates.io"]
  },
  "rust:pallet-preimage": {
    "coordinates": "rust:pallet-preimage",
    "name": "pallet-preimage",
    "description": "FRAME pallet for storing preimages of hashes (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 27931,
    "repositories": ["crates.io"]
  },
  "rust:pallet-proxy": {
    "coordinates": "rust:pallet-proxy",
    "name": "pallet-proxy",
    "description": "FRAME proxying pallet (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 46849,
    "repositories": ["crates.io"]
  },
  "rust:pallet-scheduler": {
    "coordinates": "rust:pallet-scheduler",
    "name": "pallet-scheduler",
    "description": "FRAME Scheduler pallet (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 79807,
    "repositories": ["crates.io"]
  },
  "rust:pallet-session": {
    "coordinates": "rust:pallet-session",
    "name": "pallet-session",
    "description": "FRAME sessions pallet (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 264159,
    "repositories": ["crates.io"]
  },
  "rust:pallet-staking": {
    "coordinates": "rust:pallet-staking",
    "name": "pallet-staking",
    "description": "FRAME pallet staking",
    "license": [""],
    "tags": [],
    "downloads": 109666,
    "repositories": ["crates.io"]
  },
  "rust:pallet-staking-reward-curve": {
    "coordinates": "rust:pallet-staking-reward-curve",
    "name": "pallet-staking-reward-curve",
    "description": "Reward Curve for FRAME staking pallet",
    "license": [""],
    "tags": [],
    "downloads": 45362,
    "repositories": ["crates.io"]
  },
  "rust:pallet-staking-reward-fn": {
    "coordinates": "rust:pallet-staking-reward-fn",
    "name": "pallet-staking-reward-fn",
    "description": "Reward function for FRAME staking pallet (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 30410,
    "repositories": ["crates.io"]
  },
  "rust:pallet-sudo": {
    "coordinates": "rust:pallet-sudo",
    "name": "pallet-sudo",
    "description": "FRAME pallet for sudo (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 218242,
    "repositories": ["crates.io"]
  },
  "rust:pallet-timestamp": {
    "coordinates": "rust:pallet-timestamp",
    "name": "pallet-timestamp",
    "description": "FRAME Timestamp Module (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 286161,
    "repositories": ["crates.io"]
  },
  "rust:pallet-transaction-payment": {
    "coordinates": "rust:pallet-transaction-payment",
    "name": "pallet-transaction-payment",
    "description": "FRAME pallet to manage transaction payments (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 251281,
    "repositories": ["crates.io"]
  },
  "rust:pallet-transaction-payment-rpc": {
    "coordinates": "rust:pallet-transaction-payment-rpc",
    "name": "pallet-transaction-payment-rpc",
    "description": "RPC interface for the transaction payment pallet. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 174484,
    "repositories": ["crates.io"]
  },
  "rust:pallet-transaction-payment-rpc-runtime-api": {
    "coordinates": "rust:pallet-transaction-payment-rpc-runtime-api",
    "name": "pallet-transaction-payment-rpc-runtime-api",
    "description": "RPC runtime API for transaction payment FRAME pallet (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 227548,
    "repositories": ["crates.io"]
  },
  "rust:pallet-treasury": {
    "coordinates": "rust:pallet-treasury",
    "name": "pallet-treasury",
    "description": "FRAME pallet to manage treasury (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 65200,
    "repositories": ["crates.io"]
  },
  "rust:pallet-tx-pause": {
    "coordinates": "rust:pallet-tx-pause",
    "name": "pallet-tx-pause",
    "description": "FRAME transaction pause pallet (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 4929,
    "repositories": ["crates.io"]
  },
  "rust:pallet-utility": {
    "coordinates": "rust:pallet-utility",
    "name": "pallet-utility",
    "description": "FRAME utilities pallet (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 67749,
    "repositories": ["crates.io"]
  },
  "rust:pango": {
    "coordinates": "rust:pango",
    "name": "pango",
    "description": "Rust bindings for the Pango library",
    "license": [""],
    "tags": ["pango", "gtk-rs", "gnome"],
    "downloads": 4340364,
    "repositories": ["crates.io"]
  },
  "rust:pango-sys": {
    "coordinates": "rust:pango-sys",
    "name": "pango-sys",
    "description": "FFI bindings to libpango-1.0",
    "license": [""],
    "tags": ["pango", "gtk-rs", "gnome", "ffi"],
    "downloads": 4707869,
    "repositories": ["crates.io"]
  },
  "rust:pangocairo": {
    "coordinates": "rust:pangocairo",
    "name": "pangocairo",
    "description": "Rust bindings for the PangoCairo library",
    "license": [""],
    "tags": ["pango", "gtk-rs", "gnome", "cairo"],
    "downloads": 543762,
    "repositories": ["crates.io"]
  },
  "rust:pangocairo-sys": {
    "coordinates": "rust:pangocairo-sys",
    "name": "pangocairo-sys",
    "description": "FFI bindings to PangoCairo",
    "license": [""],
    "tags": ["gtk", "ffi", "gnome", "gtk-rs"],
    "downloads": 542791,
    "repositories": ["crates.io"]
  },
  "rust:panic-halt": {
    "coordinates": "rust:panic-halt",
    "name": "panic-halt",
    "description": "Set panicking behavior to halt",
    "license": [""],
    "tags": ["panic-handler", "panic", "halt"],
    "downloads": 949906,
    "repositories": ["crates.io"]
  },
  "rust:papergrid": {
    "coordinates": "rust:papergrid",
    "name": "papergrid",
    "description": "Papergrid is a core library to print a table",
    "license": [""],
    "tags": [],
    "downloads": 2724018,
    "repositories": ["crates.io"]
  },
  "rust:parcel_selectors": {
    "coordinates": "rust:parcel_selectors",
    "name": "parcel_selectors",
    "description": "CSS Selectors matching for Rust - forked for lightningcss",
    "license": [""],
    "tags": ["selectors", "css"],
    "downloads": 251325,
    "repositories": ["crates.io"]
  },
  "rust:parcel_sourcemap": {
    "coordinates": "rust:parcel_sourcemap",
    "name": "parcel_sourcemap",
    "description": "Parcel Source Map Library",
    "license": [""],
    "tags": ["sourcemap", "node", "parcel"],
    "downloads": 225623,
    "repositories": ["crates.io"]
  },
  "rust:parity-db": {
    "coordinates": "rust:parity-db",
    "name": "parity-db",
    "description": "Key-value database for the blockchain",
    "license": [""],
    "tags": [],
    "downloads": 3285463,
    "repositories": ["crates.io"]
  },
  "rust:parity-send-wrapper": {
    "coordinates": "rust:parity-send-wrapper",
    "name": "parity-send-wrapper",
    "description": "This Rust library implements a wrapper type called SendWrapper which allows you to move around non-Send types between threads, as long as you access the contained value only from within the original thread. You also have to make sure that the wrapper is dropped from within the original thread. If any of these constraints is violated, a panic occurs.  Forked from https://github.com/thk1/send_wrapper because it was unmaintained",
    "license": [""],
    "tags": ["thread_local", "wrapper", "send"],
    "downloads": 3288329,
    "repositories": ["crates.io"]
  },
  "rust:parity-tokio-ipc": {
    "coordinates": "rust:parity-tokio-ipc",
    "name": "parity-tokio-ipc",
    "description": "Interprocess communication library for tokio. ",
    "license": [""],
    "tags": [],
    "downloads": 2958793,
    "repositories": ["crates.io"]
  },
  "rust:parity-util-mem": {
    "coordinates": "rust:parity-util-mem",
    "name": "parity-util-mem",
    "description": "Collection of memory related utilities",
    "license": [""],
    "tags": [],
    "downloads": 3264830,
    "repositories": ["crates.io"]
  },
  "rust:parity-util-mem-derive": {
    "coordinates": "rust:parity-util-mem-derive",
    "name": "parity-util-mem-derive",
    "description": "Crate for memory reporting",
    "license": [""],
    "tags": [],
    "downloads": 2889210,
    "repositories": ["crates.io"]
  },
  "rust:parity-wasm": {
    "coordinates": "rust:parity-wasm",
    "name": "parity-wasm",
    "description": "WebAssembly low-level format library",
    "license": [""],
    "tags": ["serde", "interpreter", "wasm", "webassembly", "bytecode"],
    "downloads": 8312130,
    "repositories": ["crates.io"]
  },
  "rust:parquet": {
    "coordinates": "rust:parquet",
    "name": "parquet",
    "description": "Apache Parquet implementation in Rust",
    "license": [""],
    "tags": ["arrow", "parquet", "hadoop"],
    "downloads": 4424887,
    "repositories": ["crates.io"]
  },
  "rust:parquet-format-safe": {
    "coordinates": "rust:parquet-format-safe",
    "name": "parquet-format-safe",
    "description": "Safe Parquet and Thrift reader and writer (sync and async)",
    "license": [""],
    "tags": ["thrift", "parquet"],
    "downloads": 1017896,
    "repositories": ["crates.io"]
  },
  "rust:parry2d-f64": {
    "coordinates": "rust:parry2d-f64",
    "name": "parry2d-f64",
    "description": "2 dimensional collision detection library in Rust. 64-bit precision version.",
    "license": [""],
    "tags": ["collision", "geometry", "convex", "distance", "ray"],
    "downloads": 92649,
    "repositories": ["crates.io"]
  },
  "rust:parse-size": {
    "coordinates": "rust:parse-size",
    "name": "parse-size",
    "description": "Parse byte size into integer accurately.",
    "license": [""],
    "tags": ["human", "bytes", "humanize", "size", "parser"],
    "downloads": 1095436,
    "repositories": ["crates.io"]
  },
  "rust:parser-database": { "name": "parser-database" },
  "rust:partial_sort": {
    "coordinates": "rust:partial_sort",
    "name": "partial_sort",
    "description": "partial_sort is Rust version of [std::partial_sort](https://en.cppreference.com/w/cpp/algorithm/partial_sort)",
    "license": [""],
    "tags": [],
    "downloads": 1248007,
    "repositories": ["crates.io"]
  },
  "rust:path-absolutize": {
    "coordinates": "rust:path-absolutize",
    "name": "path-absolutize",
    "description": "A library for extending `Path` and `PathBuf` in order to get an absolute path and remove the containing dots.",
    "license": [""],
    "tags": ["dot", "dedot", "absolute", "path", "canonical"],
    "downloads": 4354763,
    "repositories": ["crates.io"]
  },
  "rust:path-dedot": {
    "coordinates": "rust:path-dedot",
    "name": "path-dedot",
    "description": "A library for extending `Path` and `PathBuf` in order to parse the path which contains dots.",
    "license": [""],
    "tags": ["dot", "dedot", "absolute", "path", "canonical"],
    "downloads": 5002043,
    "repositories": ["crates.io"]
  },
  "rust:path-matchers": {
    "coordinates": "rust:path-matchers",
    "name": "path-matchers",
    "description": "A collection of path matchers. ",
    "license": [""],
    "tags": [],
    "downloads": 213399,
    "repositories": ["crates.io"]
  },
  "rust:path-slash": {
    "coordinates": "rust:path-slash",
    "name": "path-slash",
    "description": "Conversion to/from a file path from/to slash path",
    "license": [""],
    "tags": ["path"],
    "downloads": 7039392,
    "repositories": ["crates.io"]
  },
  "rust:pcap": {
    "coordinates": "rust:pcap",
    "name": "pcap",
    "description": "A packet capture API around pcap/wpcap",
    "license": [""],
    "tags": ["pcap", "sniffing", "packet"],
    "downloads": 928099,
    "repositories": ["crates.io"]
  },
  "rust:pear": {
    "coordinates": "rust:pear",
    "name": "pear",
    "description": "A pear is a fruit.",
    "license": [""],
    "tags": [],
    "downloads": 5732693,
    "repositories": ["crates.io"]
  },
  "rust:pear_codegen": {
    "coordinates": "rust:pear_codegen",
    "name": "pear_codegen",
    "description": "A (codegen) pear is a fruit.",
    "license": [""],
    "tags": [],
    "downloads": 5728737,
    "repositories": ["crates.io"]
  },
  "rust:peg": {
    "coordinates": "rust:peg",
    "name": "peg",
    "description": "A simple Parsing Expression Grammar (PEG) parser generator.",
    "license": [""],
    "tags": ["parsing", "peg", "parser", "grammar"],
    "downloads": 3447065,
    "repositories": ["crates.io"]
  },
  "rust:peg-macros": {
    "coordinates": "rust:peg-macros",
    "name": "peg-macros",
    "description": "Procedural macros for rust-peg. To use rust-peg, see the `peg` crate.",
    "license": [""],
    "tags": [],
    "downloads": 3268908,
    "repositories": ["crates.io"]
  },
  "rust:peg-runtime": {
    "coordinates": "rust:peg-runtime",
    "name": "peg-runtime",
    "description": "Runtime support for rust-peg grammars. To use rust-peg, see the `peg` crate.",
    "license": [""],
    "tags": [],
    "downloads": 3270527,
    "repositories": ["crates.io"]
  },
  "rust:percentage": {
    "coordinates": "rust:percentage",
    "name": "percentage",
    "description": "A crate to calculate percentages",
    "license": [""],
    "tags": [],
    "downloads": 1154540,
    "repositories": ["crates.io"]
  },
  "rust:ph": {
    "coordinates": "rust:ph",
    "name": "ph",
    "description": "The library of data structures based on perfect hashing.",
    "license": [""],
    "tags": ["hashing", "perfect", "mphf", "dictionary", "map"],
    "downloads": 95503,
    "repositories": ["crates.io"]
  },
  "rust:phonenumber": {
    "coordinates": "rust:phonenumber",
    "name": "phonenumber",
    "description": "Library for parsing, formatting and validating international phone numbers.",
    "license": [""],
    "tags": ["phonenumber", "phone", "formatter", "number", "parser"],
    "downloads": 1902627,
    "repositories": ["crates.io"]
  },
  "rust:pickledb": {
    "coordinates": "rust:pickledb",
    "name": "pickledb",
    "description": "A lightweight and simple key-value store written in Rust, heavily inspired by Python''s PickleDB (https://pythonhosted.org/pickleDB/)",
    "license": [""],
    "tags": ["db", "kv", "key-value-store", "database", "pickledb"],
    "downloads": 472380,
    "repositories": ["crates.io"]
  },
  "rust:piet": {
    "coordinates": "rust:piet",
    "name": "piet",
    "description": "An abstraction for 2D graphics.",
    "license": [""],
    "tags": ["2d", "graphics"],
    "downloads": 342265,
    "repositories": ["crates.io"]
  },
  "rust:piet-cairo": {
    "coordinates": "rust:piet-cairo",
    "name": "piet-cairo",
    "description": "Cairo backend for piet 2D graphics abstraction.",
    "license": [""],
    "tags": ["2d", "graphics"],
    "downloads": 241056,
    "repositories": ["crates.io"]
  },
  "rust:pinyin": {
    "coordinates": "rust:pinyin",
    "name": "pinyin",
    "description": "Convert Chinese to pinyin",
    "license": [""],
    "tags": ["pinyin", "hanzi", "chinese"],
    "downloads": 227384,
    "repositories": ["crates.io"]
  },
  "rust:piper": {
    "coordinates": "rust:piper",
    "name": "piper",
    "description": "Async pipes, channels, mutexes, and more.",
    "license": [""],
    "tags": [],
    "downloads": 6369164,
    "repositories": ["crates.io"]
  },
  "rust:pkcs5": {
    "coordinates": "rust:pkcs5",
    "name": "pkcs5",
    "description": "Pure Rust implementation of Public-Key Cryptography Standards (PKCS) #5: Password-Based Cryptography Specification Version 2.1 (RFC 8018) ",
    "license": [""],
    "tags": ["pkcs", "password", "key", "crypto"],
    "downloads": 1837104,
    "repositories": ["crates.io"]
  },
  "rust:plain": {
    "coordinates": "rust:plain",
    "name": "plain",
    "description": "A small Rust library that allows users to reinterpret data of certain types safely.",
    "license": [""],
    "tags": ["pod", "ffi", "plain", "memory"],
    "downloads": 7799414,
    "repositories": ["crates.io"]
  },
  "rust:plain_hasher": {
    "coordinates": "rust:plain_hasher",
    "name": "plain_hasher",
    "description": "Hasher for 32-byte keys.",
    "license": [""],
    "tags": ["hasher", "hash"],
    "downloads": 376829,
    "repositories": ["crates.io"]
  },
  "rust:planus": {
    "coordinates": "rust:planus",
    "name": "planus",
    "description": "Planus is an alternative compiler for flatbuffers, an efficient cross platform serialization library.",
    "license": [""],
    "tags": ["flatbuffers", "zero-copy", "serialization"],
    "downloads": 1722985,
    "repositories": ["crates.io"]
  },
  "rust:platform-dirs": {
    "coordinates": "rust:platform-dirs",
    "name": "platform-dirs",
    "description": "A library for obtaining platform dependant directory paths for application and user directories",
    "license": [""],
    "tags": [],
    "downloads": 343129,
    "repositories": ["crates.io"]
  },
  "rust:plist": {
    "coordinates": "rust:plist",
    "name": "plist",
    "description": "A rusty plist parser. Supports Serde serialization.",
    "license": [""],
    "tags": ["plist", "parser"],
    "downloads": 5912897,
    "repositories": ["crates.io"]
  },
  "rust:ply-rs": {
    "coordinates": "rust:ply-rs",
    "name": "ply-rs",
    "description": "Library for reading/writing ascii and binary PLY files.",
    "license": [""],
    "tags": ["ply"],
    "downloads": 88596,
    "repositories": ["crates.io"]
  },
  "rust:pm_auth": { "name": "pm_auth" },
  "rust:pnet": {
    "coordinates": "rust:pnet",
    "name": "pnet",
    "description": "Cross-platform, low level networking using the Rust programming language.",
    "license": [""],
    "tags": ["packet", "datalink", "protocol", "transport", "networking"],
    "downloads": 2982402,
    "repositories": ["crates.io"]
  },
  "rust:pnet_base": {
    "coordinates": "rust:pnet_base",
    "name": "pnet_base",
    "description": "Fundamental base types and code used by pnet.",
    "license": [""],
    "tags": ["ethernet", "networking"],
    "downloads": 4683373,
    "repositories": ["crates.io"]
  },
  "rust:pnet_datalink": {
    "coordinates": "rust:pnet_datalink",
    "name": "pnet_datalink",
    "description": "Cross-platform, datalink layer networking.",
    "license": [""],
    "tags": ["datalink", "raw", "ethernet", "networking"],
    "downloads": 3286033,
    "repositories": ["crates.io"]
  },
  "rust:pnet_macros": {
    "coordinates": "rust:pnet_macros",
    "name": "pnet_macros",
    "description": "Automatic bit manipulation for binary data formats",
    "license": [""],
    "tags": ["packet", "protocol", "networking", "bitfields"],
    "downloads": 4466791,
    "repositories": ["crates.io"]
  },
  "rust:pnet_macros_support": {
    "coordinates": "rust:pnet_macros_support",
    "name": "pnet_macros_support",
    "description": "Support library for libpnet_macros",
    "license": [""],
    "tags": ["packet", "networking", "bitfields", "protocol"],
    "downloads": 4353179,
    "repositories": ["crates.io"]
  },
  "rust:pnet_packet": {
    "coordinates": "rust:pnet_packet",
    "name": "pnet_packet",
    "description": "Cross-platform, binary packet parsing and manipulation",
    "license": [""],
    "tags": ["packet", "raw", "networking", "parsing"],
    "downloads": 4225981,
    "repositories": ["crates.io"]
  },
  "rust:pnet_sys": {
    "coordinates": "rust:pnet_sys",
    "name": "pnet_sys",
    "description": "Access to network related system function and calls.",
    "license": [""],
    "tags": ["raw", "datalink", "ethernet", "networking"],
    "downloads": 3314459,
    "repositories": ["crates.io"]
  },
  "rust:pnet_transport": {
    "coordinates": "rust:pnet_transport",
    "name": "pnet_transport",
    "description": "Cross-platform, transport layer networking.",
    "license": [""],
    "tags": ["raw", "socket", "transport", "networking"],
    "downloads": 2905560,
    "repositories": ["crates.io"]
  },
  "rust:points_on_curve": {
    "coordinates": "rust:points_on_curve",
    "name": "points_on_curve",
    "description": "Points on Bezier Curves",
    "license": [""],
    "tags": ["bezier", "graphics"],
    "downloads": 6894,
    "repositories": ["crates.io"]
  },
  "rust:polars-arrow-format": {
    "coordinates": "rust:polars-arrow-format",
    "name": "polars-arrow-format",
    "description": "Unofficial flatbuffers and tonic code of Apache Arrow spec",
    "license": [""],
    "tags": ["arrow", "analytics"],
    "downloads": 91996,
    "repositories": ["crates.io"]
  },
  "rust:polkavm-common": {
    "coordinates": "rust:polkavm-common",
    "name": "polkavm-common",
    "description": "The common crate for PolkaVM",
    "license": [""],
    "tags": [],
    "downloads": 635939,
    "repositories": ["crates.io"]
  },
  "rust:polkavm-derive": {
    "coordinates": "rust:polkavm-derive",
    "name": "polkavm-derive",
    "description": "The derive crate for PolkaVM guest programs",
    "license": [""],
    "tags": [],
    "downloads": 557116,
    "repositories": ["crates.io"]
  },
  "rust:polkavm-derive-impl": {
    "coordinates": "rust:polkavm-derive-impl",
    "name": "polkavm-derive-impl",
    "description": "The derive crate for PolkaVM guest programs (implementation)",
    "license": [""],
    "tags": [],
    "downloads": 556522,
    "repositories": ["crates.io"]
  },
  "rust:polkavm-derive-impl-macro": {
    "coordinates": "rust:polkavm-derive-impl-macro",
    "name": "polkavm-derive-impl-macro",
    "description": "The derive crate for PolkaVM guest programs (proc-macro)",
    "license": [""],
    "tags": [],
    "downloads": 288028,
    "repositories": ["crates.io"]
  },
  "rust:poll-promise": {
    "coordinates": "rust:poll-promise",
    "name": "poll-promise",
    "description": "Poll the result of an async operation in a game or immediate mode GUI.",
    "license": [""],
    "tags": ["promise", "gamedev", "poll", "async", "gui"],
    "downloads": 223836,
    "repositories": ["crates.io"]
  },
  "rust:pollster": {
    "coordinates": "rust:pollster",
    "name": "pollster",
    "description": "Synchronously block the thread until a future completes",
    "license": [""],
    "tags": ["block_on", "executor", "runtime", "async", "minimal"],
    "downloads": 2927169,
    "repositories": ["crates.io"]
  },
  "rust:poly-multiproof": { "name": "poly-multiproof" },
  "rust:poppler-rs": {
    "coordinates": "rust:poppler-rs",
    "name": "poppler-rs",
    "description": "High-level (safe) bindings for poppler-glib",
    "license": [""],
    "tags": ["poppler", "pdf"],
    "downloads": 36316,
    "repositories": ["crates.io"]
  },
  "rust:poppler-sys-rs": {
    "coordinates": "rust:poppler-sys-rs",
    "name": "poppler-sys-rs",
    "description": "Low-level (FFI) bindings for poppler-glib",
    "license": [""],
    "tags": ["poppler", "ffi"],
    "downloads": 35975,
    "repositories": ["crates.io"]
  },
  "rust:postcard": {
    "coordinates": "rust:postcard",
    "name": "postcard",
    "description": "A no_std + serde compatible message library for Rust",
    "license": [""],
    "tags": ["serde", "framing", "cobs"],
    "downloads": 3336053,
    "repositories": ["crates.io"]
  },
  "rust:postgres-native-tls": {
    "coordinates": "rust:postgres-native-tls",
    "name": "postgres-native-tls",
    "description": "TLS support for tokio-postgres via native-tls",
    "license": [""],
    "tags": [],
    "downloads": 577133,
    "repositories": ["crates.io"]
  },
  "rust:pprof": {
    "coordinates": "rust:pprof",
    "name": "pprof",
    "description": "An internal perf tools for rust programs.",
    "license": [""],
    "tags": [],
    "downloads": 6207714,
    "repositories": ["crates.io"]
  },
  "rust:pq-sys": {
    "coordinates": "rust:pq-sys",
    "name": "pq-sys",
    "description": "Auto-generated rust bindings for libpq",
    "license": [""],
    "tags": [],
    "downloads": 6436259,
    "repositories": ["crates.io"]
  },
  "rust:presser": {
    "coordinates": "rust:presser",
    "name": "presser",
    "description": "A crate to help you copy things into raw buffers without invoking spooky action at a distance (undefined behavior).",
    "license": [""],
    "tags": ["memory", "copy", "raw", "buffer", "graphics"],
    "downloads": 401812,
    "repositories": ["crates.io"]
  },
  "rust:prettier-please": {
    "coordinates": "rust:prettier-please",
    "name": "prettier-please",
    "description": "A minimal `syn` syntax tree pretty-printer",
    "license": [""],
    "tags": [],
    "downloads": 67339,
    "repositories": ["crates.io"]
  },
  "rust:pretty-hex": {
    "coordinates": "rust:pretty-hex",
    "name": "pretty-hex",
    "description": "Pretty hex dump of bytes slice in the common style.",
    "license": [""],
    "tags": ["dump", "hex", "logging", "binary"],
    "downloads": 6153092,
    "repositories": ["crates.io"]
  },
  "rust:prettytable-rs": {
    "coordinates": "rust:prettytable-rs",
    "name": "prettytable-rs",
    "description": "A library for printing pretty formatted tables in terminal",
    "license": [""],
    "tags": ["table", "tab", "pretty", "print", "format"],
    "downloads": 7883892,
    "repositories": ["crates.io"]
  },
  "rust:prio-graph": {
    "coordinates": "rust:prio-graph",
    "name": "prio-graph",
    "description": "A lazily populated directed acyclic graph with top-level priority ordering",
    "license": [""],
    "tags": [],
    "downloads": 258454,
    "repositories": ["crates.io"]
  },
  "rust:prisma-client-rust": {
    "coordinates": "rust:prisma-client-rust",
    "name": "prisma-client-rust",
    "description": "A prisma client for Rust",
    "license": [""],
    "tags": [],
    "downloads": 1634,
    "repositories": ["crates.io"]
  },
  "rust:prisma-client-rust-cli": {
    "coordinates": "rust:prisma-client-rust-cli",
    "name": "prisma-client-rust-cli",
    "description": "CLI for prisma-client-rust",
    "license": [""],
    "tags": [],
    "downloads": 645,
    "repositories": ["crates.io"]
  },
  "rust:prisma-client-rust-macros": { "name": "prisma-client-rust-macros" },
  "rust:prisma-client-rust-sdk": { "name": "prisma-client-rust-sdk" },
  "rust:prisma-models": { "name": "prisma-models" },
  "rust:prisma-value": { "name": "prisma-value" },
  "rust:proc-macro-utils": {
    "coordinates": "rust:proc-macro-utils",
    "name": "proc-macro-utils",
    "description": "low-level utilities on proc-macro and proc-macro2 types",
    "license": [""],
    "tags": ["macros"],
    "downloads": 1473220,
    "repositories": ["crates.io"]
  },
  "rust:proc-macro-warning": {
    "coordinates": "rust:proc-macro-warning",
    "name": "proc-macro-warning",
    "description": "Emit warnings from inside proc macros.",
    "license": [""],
    "tags": [],
    "downloads": 1806161,
    "repositories": ["crates.io"]
  },
  "rust:proc-macro2-diagnostics": {
    "coordinates": "rust:proc-macro2-diagnostics",
    "name": "proc-macro2-diagnostics",
    "description": "Diagnostics for proc-macro2.",
    "license": [""],
    "tags": [],
    "downloads": 5242560,
    "repositories": ["crates.io"]
  },
  "rust:procfs-core": {
    "coordinates": "rust:procfs-core",
    "name": "procfs-core",
    "description": "Data structures and parsing for the linux procfs pseudo-filesystem",
    "license": [""],
    "tags": ["process", "linux", "proc", "procfs"],
    "downloads": 1583239,
    "repositories": ["crates.io"]
  },
  "rust:prodash": {
    "coordinates": "rust:prodash",
    "name": "prodash",
    "description": "A dashboard for visualizing progress of asynchronous and possibly blocking tasks",
    "license": [""],
    "tags": [],
    "downloads": 4029763,
    "repositories": ["crates.io"]
  },
  "rust:profiling": {
    "coordinates": "rust:profiling",
    "name": "profiling",
    "description": "This crate provides a very thin abstraction over other profiler crates.",
    "license": [""],
    "tags": ["profiling", "performance"],
    "downloads": 4330779,
    "repositories": ["crates.io"]
  },
  "rust:profiling-procmacros": {
    "coordinates": "rust:profiling-procmacros",
    "name": "profiling-procmacros",
    "description": "This crate provides a very thin abstraction over other profiler crates.",
    "license": [""],
    "tags": ["profiling", "performance"],
    "downloads": 842440,
    "repositories": ["crates.io"]
  },
  "rust:prometheus-client": {
    "coordinates": "rust:prometheus-client",
    "name": "prometheus-client",
    "description": "Open Metrics client library allowing users to natively instrument applications.",
    "license": [""],
    "tags": [
      "monitoring",
      "prometheus",
      "openmetrics",
      "instrumentation",
      "metrics"
    ],
    "downloads": 5265400,
    "repositories": ["crates.io"]
  },
  "rust:prometheus-client-derive-encode": {
    "coordinates": "rust:prometheus-client-derive-encode",
    "name": "prometheus-client-derive-encode",
    "description": "Auxiliary crate to derive Encode trait from prometheus-client.",
    "license": [""],
    "tags": [],
    "downloads": 3116110,
    "repositories": ["crates.io"]
  },
  "rust:promql-parser": {
    "coordinates": "rust:promql-parser",
    "name": "promql-parser",
    "description": "Parse PromQL query into AST",
    "license": [""],
    "tags": ["promql", "prometheus", "parser"],
    "downloads": 37143,
    "repositories": ["crates.io"]
  },
  "rust:proptest-derive": {
    "coordinates": "rust:proptest-derive",
    "name": "proptest-derive",
    "description": "Custom-derive for the Arbitrary trait of proptest. ",
    "license": [""],
    "tags": ["proptest", "arbitrary", "derive", "testing", "quickcheck"],
    "downloads": 4332167,
    "repositories": ["crates.io"]
  },
  "rust:protobuf-src": {
    "coordinates": "rust:protobuf-src",
    "name": "protobuf-src",
    "description": "Build system integration for libprotobuf.",
    "license": [""],
    "tags": [],
    "downloads": 2166918,
    "repositories": ["crates.io"]
  },
  "rust:protoc-prebuilt": {
    "coordinates": "rust:protoc-prebuilt",
    "name": "protoc-prebuilt",
    "description": "Protobuf compiler protoc pre-built binaries installer",
    "license": [""],
    "tags": ["protoc", "protobuf"],
    "downloads": 204840,
    "repositories": ["crates.io"]
  },
  "rust:psl": {
    "coordinates": "rust:psl",
    "name": "psl",
    "description": "Extract root domain and suffix from a domain name",
    "license": [""],
    "tags": ["tld", "tldextract", "domain", "no_std", "publicsuffix"],
    "downloads": 2468881,
    "repositories": ["crates.io"]
  },
  "rust:psl-core": { "name": "psl-core" },
  "rust:public-ip": {
    "coordinates": "rust:public-ip",
    "name": "public-ip",
    "description": "Find the public IP address of a device",
    "license": [""],
    "tags": ["public", "external", "ip", "async"],
    "downloads": 331385,
    "repositories": ["crates.io"]
  },
  "rust:puffin": {
    "coordinates": "rust:puffin",
    "name": "puffin",
    "description": "Simple instrumentation profiler for games",
    "license": [""],
    "tags": ["instrumentation", "profiler", "gamedev"],
    "downloads": 804594,
    "repositories": ["crates.io"]
  },
  "rust:puffin_http": {
    "coordinates": "rust:puffin_http",
    "name": "puffin_http",
    "description": "TCP server/client for puffin profiler data",
    "license": [""],
    "tags": ["instrumentation", "profiler", "gamedev"],
    "downloads": 293892,
    "repositories": ["crates.io"]
  },
  "rust:pulldown-cmark-escape": {
    "coordinates": "rust:pulldown-cmark-escape",
    "name": "pulldown-cmark-escape",
    "description": "An escape library for HTML created in the pulldown-cmark project",
    "license": [""],
    "tags": ["escape", "commonmark", "html", "markdown"],
    "downloads": 186840,
    "repositories": ["crates.io"]
  },
  "rust:pulp": {
    "coordinates": "rust:pulp",
    "name": "pulp",
    "description": "Safe generic simd",
    "license": [""],
    "tags": ["simd"],
    "downloads": 320094,
    "repositories": ["crates.io"]
  },
  "rust:pulsar": {
    "coordinates": "rust:pulsar",
    "name": "pulsar",
    "description": "Rust client for Apache Pulsar",
    "license": [""],
    "tags": ["pulsar", "api", "client"],
    "downloads": 935584,
    "repositories": ["crates.io"]
  },
  "rust:pyo3-built": {
    "coordinates": "rust:pyo3-built",
    "name": "pyo3-built",
    "description": "Expose build variables obtained with built as a PyDict",
    "license": [""],
    "tags": ["built", "cpython", "python", "pyo3"],
    "downloads": 227284,
    "repositories": ["crates.io"]
  },
  "rust:pyroscope": {
    "coordinates": "rust:pyroscope",
    "name": "pyroscope",
    "description": "Pyroscope Profiler Agent for continuous profiling of Rust, Python and Ruby applications. ",
    "license": [""],
    "tags": ["pprof", "pyroscope", "profiler", "profiling"],
    "downloads": 1142038,
    "repositories": ["crates.io"]
  },
  "rust:pyroscope_pprofrs": {
    "coordinates": "rust:pyroscope_pprofrs",
    "name": "pyroscope_pprofrs",
    "description": "pprof-rs backend for Pyroscope Profiler. ",
    "license": [""],
    "tags": ["pprof-rs", "pyroscope", "profiler"],
    "downloads": 1020287,
    "repositories": ["crates.io"]
  },
  "rust:qoi": {
    "coordinates": "rust:qoi",
    "name": "qoi",
    "description": "VERY fast encoder/decoder for QOI (Quite Okay Image) format",
    "license": [""],
    "tags": ["qoi", "image", "encoding", "graphics"],
    "downloads": 3987099,
    "repositories": ["crates.io"]
  },
  "rust:qrcode": {
    "coordinates": "rust:qrcode",
    "name": "qrcode",
    "description": "QR code encoder in Rust",
    "license": [""],
    "tags": ["qrcode"],
    "downloads": 3675184,
    "repositories": ["crates.io"]
  },
  "rust:qstring": {
    "coordinates": "rust:qstring",
    "name": "qstring",
    "description": "Query string parser",
    "license": [""],
    "tags": ["url", "querystring", "query"],
    "downloads": 4902827,
    "repositories": ["crates.io"]
  },
  "rust:quad-rand": {
    "coordinates": "rust:quad-rand",
    "name": "quad-rand",
    "description": "Pseudo random implementation with std atomics. ",
    "license": [""],
    "tags": [],
    "downloads": 967382,
    "repositories": ["crates.io"]
  },
  "rust:quaint": {
    "coordinates": "rust:quaint",
    "name": "quaint",
    "description": "An abstraction layer for SQL databases.",
    "license": [""],
    "tags": ["mysql", "postgresql", "sql", "sqlite"],
    "downloads": 20987,
    "repositories": ["crates.io"]
  },
  "rust:qualifier_attr": {
    "coordinates": "rust:qualifier_attr",
    "name": "qualifier_attr",
    "description": "Procedural macro attributes for adding \"qualifiers\" (pub, async, unsafe, const, extern \"C\", ...) to various items.",
    "license": [""],
    "tags": ["pub", "cfg_attr", "extern", "async", "conditional"],
    "downloads": 670131,
    "repositories": ["crates.io"]
  },
  "rust:query-connector": { "name": "query-connector" },
  "rust:query-core": { "name": "query-core" },
  "rust:query-engine-metrics": { "name": "query-engine-metrics" },
  "rust:query_map": {
    "coordinates": "rust:query_map",
    "name": "query_map",
    "description": "VectorMap is a generic wrapper around HashMap<String, Vec<String>> to handle different transformations like URL query strings.",
    "license": [""],
    "tags": ["serde", "url"],
    "downloads": 1514633,
    "repositories": ["crates.io"]
  },
  "rust:quick-protobuf": {
    "coordinates": "rust:quick-protobuf",
    "name": "quick-protobuf",
    "description": "A pure Rust protobuf (de)serializer. Quick.",
    "license": [""],
    "tags": ["parser", "protobuf"],
    "downloads": 4079656,
    "repositories": ["crates.io"]
  },
  "rust:quick-protobuf-codec": {
    "coordinates": "rust:quick-protobuf-codec",
    "name": "quick-protobuf-codec",
    "description": "Asynchronous de-/encoding of Protobuf structs using asynchronous-codec, unsigned-varint and quick-protobuf.",
    "license": [""],
    "tags": ["networking"],
    "downloads": 1959595,
    "repositories": ["crates.io"]
  },
  "rust:quicksink": {
    "coordinates": "rust:quicksink",
    "name": "quicksink",
    "description": "Create a Sink from some value and a closure returning a Future.",
    "license": [""],
    "tags": ["sink", "async", "futures"],
    "downloads": 4111883,
    "repositories": ["crates.io"]
  },
  "rust:quinn": {
    "coordinates": "rust:quinn",
    "name": "quinn",
    "description": "Versatile QUIC transport protocol implementation",
    "license": [""],
    "tags": ["quic"],
    "downloads": 5094110,
    "repositories": ["crates.io"]
  },
  "rust:quinn-proto": {
    "coordinates": "rust:quinn-proto",
    "name": "quinn-proto",
    "description": "State machine for the QUIC transport protocol",
    "license": [""],
    "tags": ["quic"],
    "downloads": 7124545,
    "repositories": ["crates.io"]
  },
  "rust:quinn-udp": {
    "coordinates": "rust:quinn-udp",
    "name": "quinn-udp",
    "description": "UDP sockets with ECN information for the QUIC transport protocol",
    "license": [""],
    "tags": ["quic"],
    "downloads": 4788521,
    "repositories": ["crates.io"]
  },
  "rust:quote-use": {
    "coordinates": "rust:quote-use",
    "name": "quote-use",
    "description": "Support `use` in procmacros hygienically",
    "license": [""],
    "tags": ["macro"],
    "downloads": 1468326,
    "repositories": ["crates.io"]
  },
  "rust:quote-use-macros": {
    "coordinates": "rust:quote-use-macros",
    "name": "quote-use-macros",
    "description": "Support `use` in procmacros hygienically",
    "license": [""],
    "tags": ["macro"],
    "downloads": 1221628,
    "repositories": ["crates.io"]
  },
  "rust:quoted_printable": {
    "coordinates": "rust:quoted_printable",
    "name": "quoted_printable",
    "description": "A simple encoder/decoder for quoted-printable data",
    "license": [""],
    "tags": ["printable", "decode", "quoted", "encode"],
    "downloads": 3267290,
    "repositories": ["crates.io"]
  },
  "rust:r2d2-diesel": {
    "coordinates": "rust:r2d2-diesel",
    "name": "r2d2-diesel",
    "description": "r2d2 support for Diesel",
    "license": [""],
    "tags": [],
    "downloads": 313038,
    "repositories": ["crates.io"]
  },
  "rust:radix-heap": {
    "coordinates": "rust:radix-heap",
    "name": "radix-heap",
    "description": "Fast monotone priority queues",
    "license": [""],
    "tags": ["heap"],
    "downloads": 66939,
    "repositories": ["crates.io"]
  },
  "rust:railwind": {
    "coordinates": "rust:railwind",
    "name": "railwind",
    "description": "Tailwind compiler for utility classes written in Rust",
    "license": [""],
    "tags": ["tailwind", "compiler", "css"],
    "downloads": 13633,
    "repositories": ["crates.io"]
  },
  "rust:rand_regex": {
    "coordinates": "rust:rand_regex",
    "name": "rand_regex",
    "description": "Generates random strings and byte strings matching a regex",
    "license": [""],
    "tags": ["regex", "generator", "random"],
    "downloads": 664837,
    "repositories": ["crates.io"]
  },
  "rust:range-alloc": {
    "coordinates": "rust:range-alloc",
    "name": "range-alloc",
    "description": "Generic range allocator",
    "license": [""],
    "tags": ["allocator"],
    "downloads": 2983387,
    "repositories": ["crates.io"]
  },
  "rust:rangemap": {
    "coordinates": "rust:rangemap",
    "name": "rangemap",
    "description": "Map and set data structures whose keys are stored as ranges.  Contiguous and overlapping ranges that map to the same value are coalesced into a single range. ",
    "license": [""],
    "tags": [],
    "downloads": 1539157,
    "repositories": ["crates.io"]
  },
  "rust:ratatui": {
    "coordinates": "rust:ratatui",
    "name": "ratatui",
    "description": "A library that''s all about cooking up terminal user interfaces",
    "license": [""],
    "tags": ["dashboard", "terminal", "tui"],
    "downloads": 1498204,
    "repositories": ["crates.io"]
  },
  "rust:rav1e": {
    "coordinates": "rust:rav1e",
    "name": "rav1e",
    "description": "The fastest and safest AV1 encoder",
    "license": [""],
    "tags": [],
    "downloads": 652256,
    "repositories": ["crates.io"]
  },
  "rust:ravif": {
    "coordinates": "rust:ravif",
    "name": "ravif",
    "description": "rav1e-based pure Rust library for encoding images in AVIF format (powers the `cavif` tool)",
    "license": [""],
    "tags": ["rav1f", "av1", "convert", "cav1f", "avif"],
    "downloads": 398816,
    "repositories": ["crates.io"]
  },
  "rust:rayon-cond": {
    "coordinates": "rust:rayon-cond",
    "name": "rayon-cond",
    "description": "Experimental iterator wrapper that is conditionally parallel or serial.",
    "license": [""],
    "tags": ["parallel", "iterator"],
    "downloads": 1101864,
    "repositories": ["crates.io"]
  },
  "rust:rctree": {
    "coordinates": "rust:rctree",
    "name": "rctree",
    "description": "A ''DOM-like'' tree implemented using reference counting",
    "license": [""],
    "tags": [],
    "downloads": 1680859,
    "repositories": ["crates.io"]
  },
  "rust:rdkafka": {
    "coordinates": "rust:rdkafka",
    "name": "rdkafka",
    "description": "Rust wrapper for librdkafka",
    "license": [""],
    "tags": ["rdkafka", "kafka"],
    "downloads": 8873104,
    "repositories": ["crates.io"]
  },
  "rust:rdkafka-sys": {
    "coordinates": "rust:rdkafka-sys",
    "name": "rdkafka-sys",
    "description": "Native bindings to the librdkafka library",
    "license": [""],
    "tags": ["rdkafka", "kafka"],
    "downloads": 7663368,
    "repositories": ["crates.io"]
  },
  "rust:re_arrow2": {
    "coordinates": "rust:re_arrow2",
    "name": "re_arrow2",
    "description": "Unofficial implementation of Apache Arrow spec in safe Rust",
    "license": [""],
    "tags": ["analytics", "arrow"],
    "downloads": 48742,
    "repositories": ["crates.io"]
  },
  "rust:read-fonts": {
    "coordinates": "rust:read-fonts",
    "name": "read-fonts",
    "description": "Reading OpenType font files.",
    "license": [""],
    "tags": [],
    "downloads": 200718,
    "repositories": ["crates.io"]
  },
  "rust:realworld": {
    "coordinates": "rust:realworld",
    "name": "realworld",
    "description": "Rust / Rocket codebase containing real world examples (CRUD, auth, advanced patterns, etc) that adheres to the RealWorld spec and API. ",
    "license": [""],
    "tags": ["realworld", "rocket", "demo", "web"],
    "downloads": 1540,
    "repositories": ["crates.io"]
  },
  "rust:realworld-tide-sqlite-backend": {
    "name": "realworld-tide-sqlite-backend"
  },
  "rust:realworld-warp": { "name": "realworld-warp" },
  "rust:reborrow": {
    "coordinates": "rust:reborrow",
    "name": "reborrow",
    "description": "Emulate reborrowing for user types.",
    "license": [""],
    "tags": ["lifetime", "reborrow"],
    "downloads": 342485,
    "repositories": ["crates.io"]
  },
  "rust:recursive": {
    "coordinates": "rust:recursive",
    "name": "recursive",
    "description": "Easy recursion without stack overflows.",
    "license": [""],
    "tags": [],
    "downloads": 6225,
    "repositories": ["crates.io"]
  },
  "rust:recursive-proc-macro-impl": {
    "coordinates": "rust:recursive-proc-macro-impl",
    "name": "recursive-proc-macro-impl",
    "description": "Procedural macros for the recursive crate.",
    "license": [""],
    "tags": [],
    "downloads": 6230,
    "repositories": ["crates.io"]
  },
  "rust:redb": {
    "coordinates": "rust:redb",
    "name": "redb",
    "description": "Rust Embedded DataBase",
    "license": [""],
    "tags": [],
    "downloads": 269729,
    "repositories": ["crates.io"]
  },
  "rust:redis-protocol": {
    "coordinates": "rust:redis-protocol",
    "name": "redis-protocol",
    "description": "An implementation of the RESP2 and RESP3 protocols.",
    "license": [""],
    "tags": ["resp", "redis", "no_std", "protocol"],
    "downloads": 1067335,
    "repositories": ["crates.io"]
  },
  "rust:redis_interface": { "name": "redis_interface" },
  "rust:reed-solomon-erasure": {
    "coordinates": "rust:reed-solomon-erasure",
    "name": "reed-solomon-erasure",
    "description": "Rust implementation of Reed-Solomon erasure coding",
    "license": [""],
    "tags": ["erasure", "reed-solomon"],
    "downloads": 1417412,
    "repositories": ["crates.io"]
  },
  "rust:reedline": {
    "coordinates": "rust:reedline",
    "name": "reedline",
    "description": "A readline-like crate for CLI text input",
    "license": [""],
    "tags": [],
    "downloads": 525394,
    "repositories": ["crates.io"]
  },
  "rust:reflink-copy": {
    "coordinates": "rust:reflink-copy",
    "name": "reflink-copy",
    "description": "copy-on-write mechanism on supported file systems",
    "license": [""],
    "tags": ["reflink", "btrfs", "cow", "xfs", "copy"],
    "downloads": 285528,
    "repositories": ["crates.io"]
  },
  "rust:regalloc2": {
    "coordinates": "rust:regalloc2",
    "name": "regalloc2",
    "description": "Backtracking register allocator inspired from IonMonkey",
    "license": [""],
    "tags": [],
    "downloads": 6373354,
    "repositories": ["crates.io"]
  },
  "rust:regex-cache": {
    "coordinates": "rust:regex-cache",
    "name": "regex-cache",
    "description": "Lazy and cached regular expressions.",
    "license": [""],
    "tags": ["lazy", "cache", "regex"],
    "downloads": 1918851,
    "repositories": ["crates.io"]
  },
  "rust:regex-cursor": {
    "coordinates": "rust:regex-cursor",
    "name": "regex-cursor",
    "description": "regex fork that can search discontiguous haystacks",
    "license": [""],
    "tags": ["regex", "nfa", "dfa", "automata", "automaton"],
    "downloads": 11990,
    "repositories": ["crates.io"]
  },
  "rust:regex-lite": {
    "coordinates": "rust:regex-lite",
    "name": "regex-lite",
    "description": "A lightweight regex engine that optimizes for binary size and compilation time. ",
    "license": [""],
    "tags": [],
    "downloads": 2676341,
    "repositories": ["crates.io"]
  },
  "rust:regress": {
    "coordinates": "rust:regress",
    "name": "regress",
    "description": "A regular expression engine targeting EcmaScript syntax",
    "license": [""],
    "tags": ["regexp", "regex"],
    "downloads": 3019097,
    "repositories": ["crates.io"]
  },
  "rust:renderdoc-sys": {
    "coordinates": "rust:renderdoc-sys",
    "name": "renderdoc-sys",
    "description": "Low-level bindings to the RenderDoc API",
    "license": [""],
    "tags": ["tracing", "renderdoc", "graphics", "profiling", "ffi"],
    "downloads": 3287235,
    "repositories": ["crates.io"]
  },
  "rust:reqsign": {
    "coordinates": "rust:reqsign",
    "name": "reqsign",
    "description": "Signing API requests without effort.",
    "license": [""],
    "tags": [],
    "downloads": 1780082,
    "repositories": ["crates.io"]
  },
  "rust:request-handlers": { "name": "request-handlers" },
  "rust:reqwest-eventsource": {
    "coordinates": "rust:reqwest-eventsource",
    "name": "reqwest-eventsource",
    "description": "Helper to build an Eventsource using reqwest",
    "license": [""],
    "tags": ["reqwest", "eventsource", "event", "stream", "sse"],
    "downloads": 429522,
    "repositories": ["crates.io"]
  },
  "rust:reqwest-middleware": {
    "coordinates": "rust:reqwest-middleware",
    "name": "reqwest-middleware",
    "description": "Wrapper around reqwest to allow for client middleware chains.",
    "license": [""],
    "tags": ["reqwest", "middleware", "http"],
    "downloads": 4959015,
    "repositories": ["crates.io"]
  },
  "rust:reth-libmdbx": { "name": "reth-libmdbx" },
  "rust:retry": {
    "coordinates": "rust:retry",
    "name": "retry",
    "description": "Utilities for retrying operations that can fail.",
    "license": [""],
    "tags": ["utilities", "utility"],
    "downloads": 5182161,
    "repositories": ["crates.io"]
  },
  "rust:revm": {
    "coordinates": "rust:revm",
    "name": "revm",
    "description": "revm - Rust Ethereum Virtual Machine",
    "license": [""],
    "tags": ["ethereum", "evm", "revm", "no_std"],
    "downloads": 402549,
    "repositories": ["crates.io"]
  },
  "rust:revm-inspectors": {
    "coordinates": "rust:revm-inspectors",
    "name": "revm-inspectors",
    "description": "revm-inspectors",
    "license": [""],
    "tags": [],
    "downloads": 227,
    "repositories": ["crates.io"]
  },
  "rust:revm-interpreter": {
    "coordinates": "rust:revm-interpreter",
    "name": "revm-interpreter",
    "description": "revm Interpreter",
    "license": [""],
    "tags": ["interpreter", "ethereum", "evm", "revm", "no_std"],
    "downloads": 228876,
    "repositories": ["crates.io"]
  },
  "rust:revm-precompile": {
    "coordinates": "rust:revm-precompile",
    "name": "revm-precompile",
    "description": "revm Precompiles - Ethereum compatible precompiled contracts",
    "license": [""],
    "tags": ["precompiles", "ethereum", "evm", "revm", "no_std"],
    "downloads": 237920,
    "repositories": ["crates.io"]
  },
  "rust:revm-primitives": {
    "coordinates": "rust:revm-primitives",
    "name": "revm-primitives",
    "description": "revm primitives",
    "license": [""],
    "tags": ["ethereum", "evm", "types", "revm", "no_std"],
    "downloads": 256273,
    "repositories": ["crates.io"]
  },
  "rust:rfd": {
    "coordinates": "rust:rfd",
    "name": "rfd",
    "description": "Rusty File Dialog",
    "license": [""],
    "tags": ["ui", "dialog", "file"],
    "downloads": 2008524,
    "repositories": ["crates.io"]
  },
  "rust:rhai": {
    "coordinates": "rust:rhai",
    "name": "rhai",
    "description": "Embedded scripting for Rust",
    "license": [""],
    "tags": ["scripting-language", "scripting-engine", "scripting", "embedded"],
    "downloads": 1551103,
    "repositories": ["crates.io"]
  },
  "rust:rhai_codegen": {
    "coordinates": "rust:rhai_codegen",
    "name": "rhai_codegen",
    "description": "Procedural macros support package for Rhai, a scripting language and engine for Rust",
    "license": [""],
    "tags": [
      "scripting-language",
      "scripting-engine",
      "plugin",
      "scripting",
      "embedded"
    ],
    "downloads": 1415610,
    "repositories": ["crates.io"]
  },
  "rust:ripemd": {
    "coordinates": "rust:ripemd",
    "name": "ripemd",
    "description": "Pure Rust implementation of the RIPEMD hash functions",
    "license": [""],
    "tags": ["ripemd", "digest", "hash", "crypto"],
    "downloads": 6571981,
    "repositories": ["crates.io"]
  },
  "rust:rle-decode-fast": {
    "coordinates": "rust:rle-decode-fast",
    "name": "rle-decode-fast",
    "description": "Deprecated: this is available in stable Rust since 1.53 as Vec::extend_from_within().  Previsouly, the fastest way to implement any kind of decoding for Run Length Encoded data in Rust. ",
    "license": [""],
    "tags": [],
    "downloads": 9381981,
    "repositories": ["crates.io"]
  },
  "rust:rlimit": {
    "coordinates": "rust:rlimit",
    "name": "rlimit",
    "description": "Resource limits",
    "license": [""],
    "tags": ["rlimit", "syscall", "unix"],
    "downloads": 3499633,
    "repositories": ["crates.io"]
  },
  "rust:rlp": {
    "coordinates": "rust:rlp",
    "name": "rlp",
    "description": "Recursive-length prefix encoding, decoding, and compression",
    "license": [""],
    "tags": [],
    "downloads": 7246652,
    "repositories": ["crates.io"]
  },
  "rust:rlp-derive": {
    "coordinates": "rust:rlp-derive",
    "name": "rlp-derive",
    "description": "Derive macro for #[derive(RlpEncodable, RlpDecodable)]",
    "license": [""],
    "tags": [],
    "downloads": 3191511,
    "repositories": ["crates.io"]
  },
  "rust:roaring": {
    "coordinates": "rust:roaring",
    "name": "roaring",
    "description": "A better compressed bitset - pure Rust implementation",
    "license": [""],
    "tags": ["data-structure", "roaring", "bitmap"],
    "downloads": 3058617,
    "repositories": ["crates.io"]
  },
  "rust:robust": {
    "coordinates": "rust:robust",
    "name": "robust",
    "description": "Robust adaptive floating-point predicates for computational geometry",
    "license": [""],
    "tags": ["stability", "robustness", "geometry"],
    "downloads": 2779380,
    "repositories": ["crates.io"]
  },
  "rust:rocket": {
    "coordinates": "rust:rocket",
    "name": "rocket",
    "description": "Web framework with a focus on usability, security, extensibility, and speed. ",
    "license": [""],
    "tags": ["server", "rocket", "web", "framework"],
    "downloads": 4542198,
    "repositories": ["crates.io"]
  },
  "rust:rocket_codegen": {
    "coordinates": "rust:rocket_codegen",
    "name": "rocket_codegen",
    "description": "Procedural macros for the Rocket web framework.",
    "license": [""],
    "tags": ["rocket", "web", "generation", "code", "framework"],
    "downloads": 4514254,
    "repositories": ["crates.io"]
  },
  "rust:rocket_cors": {
    "coordinates": "rust:rocket_cors",
    "name": "rocket_cors",
    "description": "Cross-origin resource sharing (CORS) for Rocket.rs applications",
    "license": [""],
    "tags": ["rocket", "cors"],
    "downloads": 298747,
    "repositories": ["crates.io"]
  },
  "rust:rocket_http": {
    "coordinates": "rust:rocket_http",
    "name": "rocket_http",
    "description": "Types, traits, and parsers for HTTP requests, responses, and headers. ",
    "license": [""],
    "tags": ["rocket", "web", "http", "framework"],
    "downloads": 4136488,
    "repositories": ["crates.io"]
  },
  "rust:rocket_sync_db_pools": {
    "coordinates": "rust:rocket_sync_db_pools",
    "name": "rocket_sync_db_pools",
    "description": "Rocket async database pooling support for sync database drivers.",
    "license": [""],
    "tags": ["rocket", "database", "pools", "framework"],
    "downloads": 225323,
    "repositories": ["crates.io"]
  },
  "rust:rocket_sync_db_pools_codegen": {
    "coordinates": "rust:rocket_sync_db_pools_codegen",
    "name": "rocket_sync_db_pools_codegen",
    "description": "Procedural macros for rocket_sync_db_pools.",
    "license": [""],
    "tags": ["rocket", "database", "pools", "framework"],
    "downloads": 226358,
    "repositories": ["crates.io"]
  },
  "rust:rodio": {
    "coordinates": "rust:rodio",
    "name": "rodio",
    "description": "Audio playback library",
    "license": [""],
    "tags": ["gamedev", "audio", "playback"],
    "downloads": 2448097,
    "repositories": ["crates.io"]
  },
  "rust:roff": {
    "coordinates": "rust:roff",
    "name": "roff",
    "description": "ROFF (man page format) generation library",
    "license": [""],
    "tags": ["roff", "cli", "man"],
    "downloads": 1865878,
    "repositories": ["crates.io"]
  },
  "rust:rolling-file": {
    "coordinates": "rust:rolling-file",
    "name": "rolling-file",
    "description": "A rolling file appender with customizable rolling conditions.",
    "license": [""],
    "tags": ["tracing", "rolling", "logging"],
    "downloads": 802988,
    "repositories": ["crates.io"]
  },
  "rust:ron-parser": {
    "coordinates": "rust:ron-parser",
    "name": "ron-parser",
    "description": "Parsing debug implementation from rust object to JSON",
    "license": [""],
    "tags": [],
    "downloads": 50660,
    "repositories": ["crates.io"]
  },
  "rust:ropey": {
    "coordinates": "rust:ropey",
    "name": "ropey",
    "description": "A fast and robust text rope for Rust",
    "license": [""],
    "tags": ["edit", "rope", "buffer", "text"],
    "downloads": 660117,
    "repositories": ["crates.io"]
  },
  "rust:rough_piet": {
    "coordinates": "rust:rough_piet",
    "name": "rough_piet",
    "description": "Draw Hand Sketched 2D Drawings Using Piet",
    "license": [""],
    "tags": ["piet", "sketch", "graphics", "2d", "bezier"],
    "downloads": 6295,
    "repositories": ["crates.io"]
  },
  "rust:roughr": {
    "coordinates": "rust:roughr",
    "name": "roughr",
    "description": "Generate Hand Sketched 2D Drawings",
    "license": [""],
    "tags": ["sketch", "graphics", "2d", "bezier"],
    "downloads": 6868,
    "repositories": ["crates.io"]
  },
  "rust:route-recognizer": {
    "coordinates": "rust:route-recognizer",
    "name": "route-recognizer",
    "description": "Recognizes URL patterns with support for dynamic and wildcard segments",
    "license": [""],
    "tags": ["router", "url"],
    "downloads": 2954370,
    "repositories": ["crates.io"]
  },
  "rust:router_derive": { "name": "router_derive" },
  "rust:router_env": { "name": "router_env" },
  "rust:roxmltree": {
    "coordinates": "rust:roxmltree",
    "name": "roxmltree",
    "description": "Represent an XML as a read-only tree.",
    "license": [""],
    "tags": ["xml", "tree", "dom", "parser"],
    "downloads": 6273579,
    "repositories": ["crates.io"]
  },
  "rust:rss": {
    "coordinates": "rust:rss",
    "name": "rss",
    "description": "Library for serializing the RSS web content syndication format",
    "license": [""],
    "tags": ["parser", "feed", "parsing", "rss"],
    "downloads": 1130201,
    "repositories": ["crates.io"]
  },
  "rust:rstar": {
    "coordinates": "rust:rstar",
    "name": "rstar",
    "description": "An R*-tree spatial index",
    "license": [""],
    "tags": ["rtree", "r-tree", "nearest-neighbor", "spatial-index", "spatial"],
    "downloads": 3397252,
    "repositories": ["crates.io"]
  },
  "rust:rstml": {
    "coordinates": "rust:rstml",
    "name": "rstml",
    "description": "Rust templating for XML-based formats (HTML, SVG, MathML) implemented on top of proc-macro::TokenStreams",
    "license": [""],
    "tags": ["macro", "syn", "rsx", "jsx", "html"],
    "downloads": 305628,
    "repositories": ["crates.io"]
  },
  "rust:rtnetlink": {
    "coordinates": "rust:rtnetlink",
    "name": "rtnetlink",
    "description": "manipulate linux networking resources via netlink",
    "license": [""],
    "tags": ["linux", "netlink", "ip"],
    "downloads": 4687101,
    "repositories": ["crates.io"]
  },
  "rust:rtoolbox": {
    "coordinates": "rust:rtoolbox",
    "name": "rtoolbox",
    "description": "Utility functions for other crates, no backwards compatibility guarantees.",
    "license": [""],
    "tags": [],
    "downloads": 4697231,
    "repositories": ["crates.io"]
  },
  "rust:rubato": {
    "coordinates": "rust:rubato",
    "name": "rubato",
    "description": "Asynchronous resampling library intended for audio data",
    "license": [""],
    "tags": ["resampling", "interpolation"],
    "downloads": 676297,
    "repositories": ["crates.io"]
  },
  "rust:ruint": {
    "coordinates": "rust:ruint",
    "name": "ruint",
    "description": "Unsigned integer type with const-generic bit length",
    "license": [""],
    "tags": ["uint"],
    "downloads": 1085244,
    "repositories": ["crates.io"]
  },
  "rust:ruint-macro": {
    "coordinates": "rust:ruint-macro",
    "name": "ruint-macro",
    "description": "The `uint!` macro for `Uint` and `Bits` literals",
    "license": [""],
    "tags": ["uint", "macro"],
    "downloads": 1043211,
    "repositories": ["crates.io"]
  },
  "rust:rust-argon2": {
    "coordinates": "rust:rust-argon2",
    "name": "rust-argon2",
    "description": "Rust implementation of the Argon2 password hashing function.",
    "license": [""],
    "tags": ["argon2d", "password", "argon2i", "hash", "argon2"],
    "downloads": 8844768,
    "repositories": ["crates.io"]
  },
  "rust:rust-embed": {
    "coordinates": "rust:rust-embed",
    "name": "rust-embed",
    "description": "Rust Custom Derive Macro which loads files into the rust binary at compile time during release and loads the file from the fs during dev",
    "license": [""],
    "tags": ["http", "web", "rocket", "static", "server"],
    "downloads": 5818482,
    "repositories": ["crates.io"]
  },
  "rust:rust-embed-for-web": {
    "coordinates": "rust:rust-embed-for-web",
    "name": "rust-embed-for-web",
    "description": "Rust Macro which embeds files into your executable. A fork of `rust-embed` with a focus on usage on web servers.",
    "license": [""],
    "tags": ["server", "embed", "web", "http", "static"],
    "downloads": 27047,
    "repositories": ["crates.io"]
  },
  "rust:rust-embed-for-web-impl": {
    "coordinates": "rust:rust-embed-for-web-impl",
    "name": "rust-embed-for-web-impl",
    "description": "The proc-macro implementation of rust-embed-for-web.",
    "license": [""],
    "tags": ["server", "rocket", "web", "http", "static"],
    "downloads": 27693,
    "repositories": ["crates.io"]
  },
  "rust:rust-embed-for-web-utils": {
    "coordinates": "rust:rust-embed-for-web-utils",
    "name": "rust-embed-for-web-utils",
    "description": "Utilities for rust-embed-for-web",
    "license": [""],
    "tags": ["server", "rocket", "web", "http", "static"],
    "downloads": 27605,
    "repositories": ["crates.io"]
  },
  "rust:rust-embed-impl": {
    "coordinates": "rust:rust-embed-impl",
    "name": "rust-embed-impl",
    "description": "Rust Custom Derive Macro which loads files into the rust binary at compile time during release and loads the file from the fs during dev",
    "license": [""],
    "tags": ["http", "web", "rocket", "static", "server"],
    "downloads": 5749799,
    "repositories": ["crates.io"]
  },
  "rust:rust-embed-utils": {
    "coordinates": "rust:rust-embed-utils",
    "name": "rust-embed-utils",
    "description": "Utilities for rust-embed",
    "license": [""],
    "tags": ["http", "web", "rocket", "static", "server"],
    "downloads": 5558875,
    "repositories": ["crates.io"]
  },
  "rust:rust-format": {
    "coordinates": "rust:rust-format",
    "name": "rust-format",
    "description": "A Rust source code formatting crate with a unified interface for string, file, and TokenStream input",
    "license": [""],
    "tags": ["quote", "rustfmt", "formatter", "prettyplease"],
    "downloads": 370375,
    "repositories": ["crates.io"]
  },
  "rust:rust-stemmers": {
    "coordinates": "rust:rust-stemmers",
    "name": "rust-stemmers",
    "description": "A rust implementation of some popular snowball stemming algorithms",
    "license": [""],
    "tags": ["stemming", "retrieval", "language", "information", "nlp"],
    "downloads": 3470647,
    "repositories": ["crates.io"]
  },
  "rust:rustc_version_runtime": {
    "coordinates": "rust:rustc_version_runtime",
    "name": "rustc_version_runtime",
    "description": "A library for querying the version of the rustc compiler used in runtime",
    "license": [""],
    "tags": ["rustc", "version"],
    "downloads": 4606755,
    "repositories": ["crates.io"]
  },
  "rust:rustdoc-json": {
    "coordinates": "rust:rustdoc-json",
    "name": "rustdoc-json",
    "description": "Utilities for working with rustdoc JSON.",
    "license": [""],
    "tags": ["doc", "rustdoc-json", "api"],
    "downloads": 220664,
    "repositories": ["crates.io"]
  },
  "rust:rustdoc-types": {
    "coordinates": "rust:rustdoc-types",
    "name": "rustdoc-types",
    "description": "Types for rustdoc''s json output",
    "license": [""],
    "tags": [],
    "downloads": 939722,
    "repositories": ["crates.io"]
  },
  "rust:rustify": {
    "coordinates": "rust:rustify",
    "name": "rustify",
    "description": "A Rust library for interacting with HTTP API endpoints.",
    "license": [""],
    "tags": ["http", "endpoint", "rest", "api", "client"],
    "downloads": 738198,
    "repositories": ["crates.io"]
  },
  "rust:rustify_derive": {
    "coordinates": "rust:rustify_derive",
    "name": "rustify_derive",
    "description": "A derive macro for implementing an Endpoint for rustify",
    "license": [""],
    "tags": [],
    "downloads": 748004,
    "repositories": ["crates.io"]
  },
  "rust:rustls-acme": {
    "coordinates": "rust:rustls-acme",
    "name": "rustls-acme",
    "description": "TLS certificate management and serving using rustls",
    "license": [""],
    "tags": ["rustls", "tls", "letsencrypt", "acme"],
    "downloads": 103951,
    "repositories": ["crates.io"]
  },
  "rust:rustls-pki-types": {
    "coordinates": "rust:rustls-pki-types",
    "name": "rustls-pki-types",
    "description": "Shared types for the rustls PKI ecosystem",
    "license": [""],
    "tags": [],
    "downloads": 4793724,
    "repositories": ["crates.io"]
  },
  "rust:rustrict": {
    "coordinates": "rust:rustrict",
    "name": "rustrict",
    "description": "rustrict is a profanity filter for Rust",
    "license": [""],
    "tags": [],
    "downloads": 228638,
    "repositories": ["crates.io"]
  },
  "rust:rusty-money": {
    "coordinates": "rust:rusty-money",
    "name": "rusty-money",
    "description": "Parse, format and perform calculations with money safely.     ",
    "license": [""],
    "tags": ["iso-4217", "cryptocurrency", "crypto", "money", "currency"],
    "downloads": 260619,
    "repositories": ["crates.io"]
  },
  "rust:rustybuzz": {
    "coordinates": "rust:rustybuzz",
    "name": "rustybuzz",
    "description": "A complete harfbuzz shaping algorithm port to Rust.",
    "license": [""],
    "tags": ["shaping", "text", "truetype", "opentype"],
    "downloads": 1712807,
    "repositories": ["crates.io"]
  },
  "rust:rustyline": {
    "coordinates": "rust:rustyline",
    "name": "rustyline",
    "description": "Rustyline, a readline implementation based on Antirez''s Linenoise",
    "license": [""],
    "tags": ["readline"],
    "downloads": 9063281,
    "repositories": ["crates.io"]
  },
  "rust:ruzstd": {
    "coordinates": "rust:ruzstd",
    "name": "ruzstd",
    "description": "A decoder for the zstd compression format",
    "license": [""],
    "tags": ["zstandard", "zstd", "decompression"],
    "downloads": 4510963,
    "repositories": ["crates.io"]
  },
  "rust:rw-stream-sink": {
    "coordinates": "rust:rw-stream-sink",
    "name": "rw-stream-sink",
    "description": "Adaptator between Stream/Sink and AsyncRead/AsyncWrite",
    "license": [""],
    "tags": ["networking"],
    "downloads": 4946903,
    "repositories": ["crates.io"]
  },
  "rust:ryu-js": {
    "coordinates": "rust:ryu-js",
    "name": "ryu-js",
    "description": "Fast floating point to string conversion, ECMAScript compliant.",
    "license": [""],
    "tags": ["float"],
    "downloads": 1580036,
    "repositories": ["crates.io"]
  },
  "rust:safe_arch": {
    "coordinates": "rust:safe_arch",
    "name": "safe_arch",
    "description": "Crate that exposes `core::arch` safely via `#[cfg()]`.",
    "license": [""],
    "tags": ["intrinsics", "simd"],
    "downloads": 7547210,
    "repositories": ["crates.io"]
  },
  "rust:safetensors": {
    "coordinates": "rust:safetensors",
    "name": "safetensors",
    "description": "Provides functions to read and write safetensors which aim to be safer than their PyTorch counterpart. The format is 8 bytes which is an unsized int, being the size of a JSON header, the JSON header refers the `dtype` the `shape` and `data_offsets` which are the offsets for the values in the rest of the file. ",
    "license": [""],
    "tags": ["pytorch", "huggingface", "tensors", "safetensors", "tensorflow"],
    "downloads": 712968,
    "repositories": ["crates.io"]
  },
  "rust:salsa20": {
    "coordinates": "rust:salsa20",
    "name": "salsa20",
    "description": "Salsa20 Stream Cipher",
    "license": [""],
    "tags": ["crypto", "xsalsa20", "stream-cipher", "trait"],
    "downloads": 9045097,
    "repositories": ["crates.io"]
  },
  "rust:sample-arrow2": {
    "coordinates": "rust:sample-arrow2",
    "name": "sample-arrow2",
    "description": "Samplers for arrow2 for use with sample-test",
    "license": [""],
    "tags": [],
    "downloads": 20818,
    "repositories": ["crates.io"]
  },
  "rust:sample-std": {
    "coordinates": "rust:sample-std",
    "name": "sample-std",
    "description": "Sampler definitions and implementations for st",
    "license": [""],
    "tags": [],
    "downloads": 23689,
    "repositories": ["crates.io"]
  },
  "rust:sample-test": {
    "coordinates": "rust:sample-test",
    "name": "sample-test",
    "description": "Sampling strategies and machinery for testing arbitrary data",
    "license": [""],
    "tags": [],
    "downloads": 20586,
    "repositories": ["crates.io"]
  },
  "rust:sample-test-macros": {
    "coordinates": "rust:sample-test-macros",
    "name": "sample-test-macros",
    "description": "proc-macros used by sample-test",
    "license": [""],
    "tags": [],
    "downloads": 20438,
    "repositories": ["crates.io"]
  },
  "rust:sanitize-filename": {
    "coordinates": "rust:sanitize-filename",
    "name": "sanitize-filename",
    "description": "A simple filename sanitizer, based on Node''s sanitize-filename",
    "license": [""],
    "tags": ["filename", "sanitizer"],
    "downloads": 1941431,
    "repositories": ["crates.io"]
  },
  "rust:sasl2-sys": {
    "coordinates": "rust:sasl2-sys",
    "name": "sasl2-sys",
    "description": "Bindings for Cyrus SASL.",
    "license": [""],
    "tags": [],
    "downloads": 2306962,
    "repositories": ["crates.io"]
  },
  "rust:saturating": {
    "coordinates": "rust:saturating",
    "name": "saturating",
    "description": "Provides Saturating<T>, an intentionally-saturating arithmetic wrapper.",
    "license": [""],
    "tags": ["mathematics", "numerics"],
    "downloads": 3228637,
    "repositories": ["crates.io"]
  },
  "rust:sc-allocator": {
    "coordinates": "rust:sc-allocator",
    "name": "sc-allocator",
    "description": "Collection of allocator implementations. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 61558,
    "repositories": ["crates.io"]
  },
  "rust:sc-authority-discovery": {
    "coordinates": "rust:sc-authority-discovery",
    "name": "sc-authority-discovery",
    "description": "Substrate authority discovery. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 63542,
    "repositories": ["crates.io"]
  },
  "rust:sc-block-builder": {
    "coordinates": "rust:sc-block-builder",
    "name": "sc-block-builder",
    "description": "Substrate block builder (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 239271,
    "repositories": ["crates.io"]
  },
  "rust:sc-chain-spec": {
    "coordinates": "rust:sc-chain-spec",
    "name": "sc-chain-spec",
    "description": "Substrate chain configurations. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 236548,
    "repositories": ["crates.io"]
  },
  "rust:sc-chain-spec-derive": {
    "coordinates": "rust:sc-chain-spec-derive",
    "name": "sc-chain-spec-derive",
    "description": "Macros to derive chain spec extension traits implementation.",
    "license": [""],
    "tags": [],
    "downloads": 229637,
    "repositories": ["crates.io"]
  },
  "rust:sc-cli": {
    "coordinates": "rust:sc-cli",
    "name": "sc-cli",
    "description": "Substrate CLI interface. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 224366,
    "repositories": ["crates.io"]
  },
  "rust:sc-client-api": {
    "coordinates": "rust:sc-client-api",
    "name": "sc-client-api",
    "description": "Substrate client interfaces. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 251268,
    "repositories": ["crates.io"]
  },
  "rust:sc-client-db": {
    "coordinates": "rust:sc-client-db",
    "name": "sc-client-db",
    "description": "Client backend that uses RocksDB database as storage. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 229787,
    "repositories": ["crates.io"]
  },
  "rust:sc-consensus": {
    "coordinates": "rust:sc-consensus",
    "name": "sc-consensus",
    "description": "Collection of common consensus specific implementations for Substrate (client) (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 229418,
    "repositories": ["crates.io"]
  },
  "rust:sc-consensus-babe": {
    "coordinates": "rust:sc-consensus-babe",
    "name": "sc-consensus-babe",
    "description": "BABE consensus algorithm for substrate (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 122937,
    "repositories": ["crates.io"]
  },
  "rust:sc-consensus-babe-rpc": {
    "coordinates": "rust:sc-consensus-babe-rpc",
    "name": "sc-consensus-babe-rpc",
    "description": "RPC extensions for the BABE consensus algorithm (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 47156,
    "repositories": ["crates.io"]
  },
  "rust:sc-consensus-epochs": {
    "coordinates": "rust:sc-consensus-epochs",
    "name": "sc-consensus-epochs",
    "description": "Generic epochs-based utilities for consensus (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 123750,
    "repositories": ["crates.io"]
  },
  "rust:sc-consensus-grandpa": {
    "coordinates": "rust:sc-consensus-grandpa",
    "name": "sc-consensus-grandpa",
    "description": "Integration of the GRANDPA finality gadget into substrate. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 22507,
    "repositories": ["crates.io"]
  },
  "rust:sc-consensus-grandpa-rpc": {
    "coordinates": "rust:sc-consensus-grandpa-rpc",
    "name": "sc-consensus-grandpa-rpc",
    "description": "RPC extensions for the GRANDPA finality gadget (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 18231,
    "repositories": ["crates.io"]
  },
  "rust:sc-consensus-slots": {
    "coordinates": "rust:sc-consensus-slots",
    "name": "sc-consensus-slots",
    "description": "Generic slots-based utilities for consensus (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 208875,
    "repositories": ["crates.io"]
  },
  "rust:sc-executor": {
    "coordinates": "rust:sc-executor",
    "name": "sc-executor",
    "description": "A crate that provides means of executing/dispatching calls into the runtime. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 263556,
    "repositories": ["crates.io"]
  },
  "rust:sc-executor-common": {
    "coordinates": "rust:sc-executor-common",
    "name": "sc-executor-common",
    "description": "A set of common definitions that are needed for defining execution engines. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 263848,
    "repositories": ["crates.io"]
  },
  "rust:sc-executor-wasmtime": {
    "coordinates": "rust:sc-executor-wasmtime",
    "name": "sc-executor-wasmtime",
    "description": "Defines a `WasmRuntime` that uses the Wasmtime JIT to execute. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 212684,
    "repositories": ["crates.io"]
  },
  "rust:sc-informant": {
    "coordinates": "rust:sc-informant",
    "name": "sc-informant",
    "description": "Substrate informant. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 228013,
    "repositories": ["crates.io"]
  },
  "rust:sc-keystore": {
    "coordinates": "rust:sc-keystore",
    "name": "sc-keystore",
    "description": "Keystore (and session key management) for ed25519 based chains like Polkadot. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 233061,
    "repositories": ["crates.io"]
  },
  "rust:sc-mixnet": {
    "coordinates": "rust:sc-mixnet",
    "name": "sc-mixnet",
    "description": "Substrate mixnet service (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 28304,
    "repositories": ["crates.io"]
  },
  "rust:sc-network": {
    "coordinates": "rust:sc-network",
    "name": "sc-network",
    "description": "Substrate network protocol (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 238242,
    "repositories": ["crates.io"]
  },
  "rust:sc-network-bitswap": {
    "coordinates": "rust:sc-network-bitswap",
    "name": "sc-network-bitswap",
    "description": "Substrate bitswap protocol (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 42366,
    "repositories": ["crates.io"]
  },
  "rust:sc-network-common": {
    "coordinates": "rust:sc-network-common",
    "name": "sc-network-common",
    "description": "Substrate network common (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 55039,
    "repositories": ["crates.io"]
  },
  "rust:sc-network-gossip": {
    "coordinates": "rust:sc-network-gossip",
    "name": "sc-network-gossip",
    "description": "Gossiping for the Substrate network protocol (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 211764,
    "repositories": ["crates.io"]
  },
  "rust:sc-network-light": {
    "coordinates": "rust:sc-network-light",
    "name": "sc-network-light",
    "description": "Substrate light network protocol (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 42498,
    "repositories": ["crates.io"]
  },
  "rust:sc-network-sync": {
    "coordinates": "rust:sc-network-sync",
    "name": "sc-network-sync",
    "description": "Substrate sync network protocol (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 44350,
    "repositories": ["crates.io"]
  },
  "rust:sc-network-transactions": {
    "coordinates": "rust:sc-network-transactions",
    "name": "sc-network-transactions",
    "description": "Substrate transaction protocol (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 42342,
    "repositories": ["crates.io"]
  },
  "rust:sc-offchain": {
    "coordinates": "rust:sc-offchain",
    "name": "sc-offchain",
    "description": "Substrate offchain workers (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 213921,
    "repositories": ["crates.io"]
  },
  "rust:sc-proposer-metrics": {
    "coordinates": "rust:sc-proposer-metrics",
    "name": "sc-proposer-metrics",
    "description": "Basic metrics for block production. (polkadot v1.9.0)",
    "license": [""],
    "tags": [],
    "downloads": 189681,
    "repositories": ["crates.io"]
  },
  "rust:sc-rpc": {
    "coordinates": "rust:sc-rpc",
    "name": "sc-rpc",
    "description": "Substrate Client RPC (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 233592,
    "repositories": ["crates.io"]
  },
  "rust:sc-rpc-api": {
    "coordinates": "rust:sc-rpc-api",
    "name": "sc-rpc-api",
    "description": "Substrate RPC interfaces. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 244927,
    "repositories": ["crates.io"]
  },
  "rust:sc-rpc-server": {
    "coordinates": "rust:sc-rpc-server",
    "name": "sc-rpc-server",
    "description": "Substrate RPC servers. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 227693,
    "repositories": ["crates.io"]
  },
  "rust:sc-rpc-spec-v2": {
    "coordinates": "rust:sc-rpc-spec-v2",
    "name": "sc-rpc-spec-v2",
    "description": "Substrate RPC interface v2. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 43532,
    "repositories": ["crates.io"]
  },
  "rust:sc-service": {
    "coordinates": "rust:sc-service",
    "name": "sc-service",
    "description": "Substrate service. Starts a thread that spins up the network, client, and extrinsic pool. Manages communication between them. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 227178,
    "repositories": ["crates.io"]
  },
  "rust:sc-state-db": {
    "coordinates": "rust:sc-state-db",
    "name": "sc-state-db",
    "description": "State database maintenance. Handles canonicalization and pruning in the database. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 229438,
    "repositories": ["crates.io"]
  },
  "rust:sc-storage-monitor": {
    "coordinates": "rust:sc-storage-monitor",
    "name": "sc-storage-monitor",
    "description": "Storage monitor service for substrate (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 18390,
    "repositories": ["crates.io"]
  },
  "rust:sc-sync-state-rpc": {
    "coordinates": "rust:sc-sync-state-rpc",
    "name": "sc-sync-state-rpc",
    "description": "A RPC handler to create sync states for light clients. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 31299,
    "repositories": ["crates.io"]
  },
  "rust:sc-sysinfo": {
    "coordinates": "rust:sc-sysinfo",
    "name": "sc-sysinfo",
    "description": "A crate that provides basic hardware and software telemetry information. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 42924,
    "repositories": ["crates.io"]
  },
  "rust:sc-telemetry": {
    "coordinates": "rust:sc-telemetry",
    "name": "sc-telemetry",
    "description": "Telemetry utils (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 241274,
    "repositories": ["crates.io"]
  },
  "rust:sc-tracing": {
    "coordinates": "rust:sc-tracing",
    "name": "sc-tracing",
    "description": "Instrumentation implementation for substrate. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 235707,
    "repositories": ["crates.io"]
  },
  "rust:sc-tracing-proc-macro": {
    "coordinates": "rust:sc-tracing-proc-macro",
    "name": "sc-tracing-proc-macro",
    "description": "Helper macros for Substrate''s client CLI",
    "license": [""],
    "tags": [],
    "downloads": 120691,
    "repositories": ["crates.io"]
  },
  "rust:sc-transaction-pool": {
    "coordinates": "rust:sc-transaction-pool",
    "name": "sc-transaction-pool",
    "description": "Substrate transaction pool implementation. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 231530,
    "repositories": ["crates.io"]
  },
  "rust:sc-transaction-pool-api": {
    "coordinates": "rust:sc-transaction-pool-api",
    "name": "sc-transaction-pool-api",
    "description": "Transaction pool client facing API. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 60945,
    "repositories": ["crates.io"]
  },
  "rust:sc-utils": {
    "coordinates": "rust:sc-utils",
    "name": "sc-utils",
    "description": "I/O for Substrate runtimes (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 58637,
    "repositories": ["crates.io"]
  },
  "rust:scale-bits": {
    "coordinates": "rust:scale-bits",
    "name": "scale-bits",
    "description": "A SCALE compatible representation of a collection of bits",
    "license": [""],
    "tags": ["encoding", "parity", "scale", "decoding", "bits"],
    "downloads": 455409,
    "repositories": ["crates.io"]
  },
  "rust:scale-decode": {
    "coordinates": "rust:scale-decode",
    "name": "scale-decode",
    "description": "Decode SCALE encoded bytes into arbitrary types at runtime",
    "license": [""],
    "tags": ["decoding", "scale", "parity"],
    "downloads": 505615,
    "repositories": ["crates.io"]
  },
  "rust:scale-decode-derive": {
    "coordinates": "rust:scale-decode-derive",
    "name": "scale-decode-derive",
    "description": "Derive macro for scale-decode",
    "license": [""],
    "tags": ["decoding", "scale", "parity"],
    "downloads": 339336,
    "repositories": ["crates.io"]
  },
  "rust:scale-encode": {
    "coordinates": "rust:scale-encode",
    "name": "scale-encode",
    "description": "Encode types to SCALE bytes given a desired target type",
    "license": [""],
    "tags": ["scale", "parity", "encoding"],
    "downloads": 342808,
    "repositories": ["crates.io"]
  },
  "rust:scale-encode-derive": {
    "coordinates": "rust:scale-encode-derive",
    "name": "scale-encode-derive",
    "description": "Derive macro for scale-encode",
    "license": [""],
    "tags": ["scale", "parity", "encoding"],
    "downloads": 336866,
    "repositories": ["crates.io"]
  },
  "rust:scale-info": {
    "coordinates": "rust:scale-info",
    "name": "scale-info",
    "description": "Info about SCALE encodable Rust types",
    "license": [""],
    "tags": [],
    "downloads": 6503945,
    "repositories": ["crates.io"]
  },
  "rust:scale-info-derive": {
    "coordinates": "rust:scale-info-derive",
    "name": "scale-info-derive",
    "description": "Derive type info for SCALE encodable types",
    "license": [""],
    "tags": [],
    "downloads": 6502206,
    "repositories": ["crates.io"]
  },
  "rust:scale-typegen": {
    "coordinates": "rust:scale-typegen",
    "name": "scale-typegen",
    "description": "Type Generation for SCALE encoded Rust Types",
    "license": [""],
    "tags": [],
    "downloads": 22816,
    "repositories": ["crates.io"]
  },
  "rust:scale-value": {
    "coordinates": "rust:scale-value",
    "name": "scale-value",
    "description": "Encode and decode values of arbitrary shapes to SCALE bytes",
    "license": [""],
    "tags": ["encoding", "parity", "scale", "decoding"],
    "downloads": 440672,
    "repositories": ["crates.io"]
  },
  "rust:scheduler": {
    "coordinates": "rust:scheduler",
    "name": "scheduler",
    "description": "Binding to set the linux scheduler (priority, policy, affinity, &c.)",
    "license": [""],
    "tags": ["sched", "scheduler", "affinity"],
    "downloads": 36985,
    "repositories": ["crates.io"]
  },
  "rust:schema": {
    "coordinates": "rust:schema",
    "name": "schema",
    "description": "Access the schema for a Rust item",
    "license": [""],
    "tags": ["reflection", "schema", "macro"],
    "downloads": 19729,
    "repositories": ["crates.io"]
  },
  "rust:schema-ast": { "name": "schema-ast" },
  "rust:schema-builder": { "name": "schema-builder" },
  "rust:schnellru": {
    "coordinates": "rust:schnellru",
    "name": "schnellru",
    "description": "A fast and flexible LRU map",
    "license": [""],
    "tags": [],
    "downloads": 2015875,
    "repositories": ["crates.io"]
  },
  "rust:schnorrkel": {
    "coordinates": "rust:schnorrkel",
    "name": "schnorrkel",
    "description": "Schnorr VRF, signatures, etc. using the Ristretto group",
    "license": [""],
    "tags": ["ecc", "ed25519", "curve25519", "signature", "cryptography"],
    "downloads": 5337355,
    "repositories": ["crates.io"]
  },
  "rust:scoped-tls-hkt": {
    "coordinates": "rust:scoped-tls-hkt",
    "name": "scoped-tls-hkt",
    "description": "A more flexible version of `scoped-tls`, allowing the following additional features:  - Storage of references to dynamically sized types. - Storage of mutable references. - Storage of types containing unbound lifetime parameters (higher-kinded types). - Some combination of the above. ",
    "license": [""],
    "tags": [],
    "downloads": 728505,
    "repositories": ["crates.io"]
  },
  "rust:scraper": {
    "coordinates": "rust:scraper",
    "name": "scraper",
    "description": "HTML parsing and querying with CSS selectors",
    "license": [""],
    "tags": ["html", "scraping", "css", "selector"],
    "downloads": 2644838,
    "repositories": ["crates.io"]
  },
  "rust:scroll": {
    "coordinates": "rust:scroll",
    "name": "scroll",
    "description": "A suite of powerful, extensible, generic, endian-aware Read/Write traits for byte buffers",
    "license": [""],
    "tags": ["pwrite", "pread", "bytes", "endian", "immutable"],
    "downloads": 9416738,
    "repositories": ["crates.io"]
  },
  "rust:scroll_derive": {
    "coordinates": "rust:scroll_derive",
    "name": "scroll_derive",
    "description": "A macros 1.1 derive implementation for Pread and Pwrite traits from the scroll crate",
    "license": [""],
    "tags": ["pwrite", "derive", "pread", "bytes", "macros"],
    "downloads": 8902098,
    "repositories": ["crates.io"]
  },
  "rust:scrypt": {
    "coordinates": "rust:scrypt",
    "name": "scrypt",
    "description": "Scrypt password-based key derivation function",
    "license": [""],
    "tags": ["crypto", "password", "hashing", "phf"],
    "downloads": 6426613,
    "repositories": ["crates.io"]
  },
  "rust:sctk-adwaita": {
    "coordinates": "rust:sctk-adwaita",
    "name": "sctk-adwaita",
    "description": "Adwaita-like SCTK Frame",
    "license": [""],
    "tags": ["sctk"],
    "downloads": 2289868,
    "repositories": ["crates.io"]
  },
  "rust:sea-query": {
    "coordinates": "rust:sea-query",
    "name": "sea-query",
    "description": "🔱 A dynamic query builder for MySQL, Postgres and SQLite",
    "license": [""],
    "tags": ["sqlite", "database", "sql", "mysql", "postgres"],
    "downloads": 3529218,
    "repositories": ["crates.io"]
  },
  "rust:sea-query-binder": {
    "coordinates": "rust:sea-query-binder",
    "name": "sea-query-binder",
    "description": "Driver library for using SeaQuery with SQLx",
    "license": [""],
    "tags": ["sqlite", "database", "sql", "mysql", "postgres"],
    "downloads": 2433399,
    "repositories": ["crates.io"]
  },
  "rust:sea-query-derive": {
    "coordinates": "rust:sea-query-derive",
    "name": "sea-query-derive",
    "description": "Derive macro for sea-query''s Iden trait",
    "license": [""],
    "tags": ["mysql", "sql", "database", "postgres", "sqlite"],
    "downloads": 2241892,
    "repositories": ["crates.io"]
  },
  "rust:seed": {
    "coordinates": "rust:seed",
    "name": "seed",
    "description": "A Rust framework for creating web apps, using WebAssembly",
    "license": [""],
    "tags": ["wasm", "web", "webassembly", "frontend", "framework"],
    "downloads": 262521,
    "repositories": ["crates.io"]
  },
  "rust:segment": {
    "coordinates": "rust:segment",
    "name": "segment",
    "description": "Segment analytics client for Rust. Forked for Meilisearch: https://github.com/meilisearch",
    "license": [""],
    "tags": ["segment", "analytics", "meilisearch"],
    "downloads": 508610,
    "repositories": ["crates.io"]
  },
  "rust:selectors": {
    "coordinates": "rust:selectors",
    "name": "selectors",
    "description": "CSS Selectors matching for Rust",
    "license": [""],
    "tags": ["css", "selectors"],
    "downloads": 6434433,
    "repositories": ["crates.io"]
  },
  "rust:self_cell": {
    "coordinates": "rust:self_cell",
    "name": "self_cell",
    "description": "Safe-to-use proc-macro-free self-referential structs in stable Rust.",
    "license": [""],
    "tags": ["lifetime", "reference", "self", "intrusive", "borrowing"],
    "downloads": 4070029,
    "repositories": ["crates.io"]
  },
  "rust:send_wrapper": {
    "coordinates": "rust:send_wrapper",
    "name": "send_wrapper",
    "description": "This Rust library implements a wrapper type called SendWrapper which allows you to move around non-Send types between threads, as long as you access the contained value only from within the original thread. You also have to make sure that the wrapper is dropped from within the original thread. If any of these constraints is violated, a panic occurs.",
    "license": [""],
    "tags": ["wrapper", "thread_local", "send"],
    "downloads": 7290565,
    "repositories": ["crates.io"]
  },
  "rust:separator": {
    "coordinates": "rust:separator",
    "name": "separator",
    "description": "Formats numbers into strings with thousands separators for readability.",
    "license": [""],
    "tags": ["num", "separate", "split", "number", "comma"],
    "downloads": 1553076,
    "repositories": ["crates.io"]
  },
  "rust:seq-macro": {
    "coordinates": "rust:seq-macro",
    "name": "seq-macro",
    "description": "Macro to repeat sequentially indexed copies of a fragment of code.",
    "license": [""],
    "tags": [],
    "downloads": 6369698,
    "repositories": ["crates.io"]
  },
  "rust:seqlock": {
    "coordinates": "rust:seqlock",
    "name": "seqlock",
    "description": "A reader-writer lock that provides extremely fast read access without starving writers.",
    "license": [""],
    "tags": ["seqlock", "rwlock", "thread"],
    "downloads": 329746,
    "repositories": ["crates.io"]
  },
  "rust:serde-cs": {
    "coordinates": "rust:serde-cs",
    "name": "serde-cs",
    "description": "Serde serialization/deserialization for camma separated lists",
    "license": [""],
    "tags": ["serde", "serialization"],
    "downloads": 151465,
    "repositories": ["crates.io"]
  },
  "rust:serde-hex": {
    "coordinates": "rust:serde-hex",
    "name": "serde-hex",
    "description": "Hexadecimal encoding/decoding with serde.",
    "license": [""],
    "tags": ["hexadecimal", "serde", "hex"],
    "downloads": 746173,
    "repositories": ["crates.io"]
  },
  "rust:serde_dynamo": {
    "coordinates": "rust:serde_dynamo",
    "name": "serde_dynamo",
    "description": "serde serializer/deserializer for DynamoDB items that supports aws-sdk-dynamodb, aws_lambda_events, and rusoto_dynamodb",
    "license": [""],
    "tags": ["rusoto", "dynamodb", "serde_dynamodb", "aws-sdk", "serde"],
    "downloads": 1110872,
    "repositories": ["crates.io"]
  },
  "rust:serde_html_form": {
    "coordinates": "rust:serde_html_form",
    "name": "serde_html_form",
    "description": "(De-)serialization support for the `application/x-www-form-urlencoded` format",
    "license": [""],
    "tags": ["urlencoded", "serde", "serialization"],
    "downloads": 948875,
    "repositories": ["crates.io"]
  },
  "rust:serde_nanos": {
    "coordinates": "rust:serde_nanos",
    "name": "serde_nanos",
    "description": "Wrapper to process duration and timestamps as nanoseconds",
    "license": [""],
    "tags": [],
    "downloads": 1990313,
    "repositories": ["crates.io"]
  },
  "rust:serde_plain": {
    "coordinates": "rust:serde_plain",
    "name": "serde_plain",
    "description": "A restricted plain text serializer for serde",
    "license": [""],
    "tags": ["serde", "from_str", "display", "serialization"],
    "downloads": 5132398,
    "repositories": ["crates.io"]
  },
  "rust:serde_regex": {
    "coordinates": "rust:serde_regex",
    "name": "serde_regex",
    "description": "    A serde wrapper that (de)serializes regex as strings ",
    "license": [""],
    "tags": ["serde", "regex"],
    "downloads": 6049594,
    "repositories": ["crates.io"]
  },
  "rust:server_fn": {
    "coordinates": "rust:server_fn",
    "name": "server_fn",
    "description": "RPC for any web framework.",
    "license": [""],
    "tags": [],
    "downloads": 363241,
    "repositories": ["crates.io"]
  },
  "rust:server_fn_macro": {
    "coordinates": "rust:server_fn_macro",
    "name": "server_fn_macro",
    "description": "RPC for any web framework.",
    "license": [""],
    "tags": [],
    "downloads": 365727,
    "repositories": ["crates.io"]
  },
  "rust:server_fn_macro_default": {
    "coordinates": "rust:server_fn_macro_default",
    "name": "server_fn_macro_default",
    "description": "The default implementation of the server_fn macro without a context",
    "license": [""],
    "tags": [],
    "downloads": 363812,
    "repositories": ["crates.io"]
  },
  "rust:servo_arc": {
    "coordinates": "rust:servo_arc",
    "name": "servo_arc",
    "description": "A fork of std::sync::Arc with some extra functionality and without weak references",
    "license": [""],
    "tags": [],
    "downloads": 5883660,
    "repositories": ["crates.io"]
  },
  "rust:sha256": {
    "coordinates": "rust:sha256",
    "name": "sha256",
    "description": "sha256 crypto digest",
    "license": [""],
    "tags": ["hash", "sha256", "digest"],
    "downloads": 1654001,
    "repositories": ["crates.io"]
  },
  "rust:sha3-asm": {
    "coordinates": "rust:sha3-asm",
    "name": "sha3-asm",
    "description": "Raw bindings for SHA-3 algorithms written in assembly",
    "license": [""],
    "tags": ["keccak256", "asm", "assembly", "sha3", "primitives"],
    "downloads": 186376,
    "repositories": ["crates.io"]
  },
  "rust:shrinkwraprs": {
    "coordinates": "rust:shrinkwraprs",
    "name": "shrinkwraprs",
    "description": "Auto-derive for Rust conversion traits -- make working with newtypes a breeze",
    "license": [""],
    "tags": ["conversion", "convert", "newtype"],
    "downloads": 960199,
    "repositories": ["crates.io"]
  },
  "rust:shuttle-actix-web": {
    "coordinates": "rust:shuttle-actix-web",
    "name": "shuttle-actix-web",
    "description": "Service implementation to run an actix webserver on shuttle",
    "license": [""],
    "tags": ["shuttle-service", "actix"],
    "downloads": 26573,
    "repositories": ["crates.io"]
  },
  "rust:shuttle-codegen": {
    "coordinates": "rust:shuttle-codegen",
    "name": "shuttle-codegen",
    "description": "Proc-macro code generator for the shuttle.rs service",
    "license": [""],
    "tags": [],
    "downloads": 119186,
    "repositories": ["crates.io"]
  },
  "rust:shuttle-common": {
    "coordinates": "rust:shuttle-common",
    "name": "shuttle-common",
    "description": "Common library for the shuttle platform (https://www.shuttle.rs/)",
    "license": [""],
    "tags": [],
    "downloads": 132426,
    "repositories": ["crates.io"]
  },
  "rust:shuttle-proto": {
    "coordinates": "rust:shuttle-proto",
    "name": "shuttle-proto",
    "description": "Library for all the gRPC definitions used by shuttle",
    "license": [""],
    "tags": [],
    "downloads": 107820,
    "repositories": ["crates.io"]
  },
  "rust:shuttle-runtime": {
    "coordinates": "rust:shuttle-runtime",
    "name": "shuttle-runtime",
    "description": "Runtime to start and manage any service that runs on shuttle",
    "license": [""],
    "tags": [],
    "downloads": 99716,
    "repositories": ["crates.io"]
  },
  "rust:shuttle-secrets": {
    "coordinates": "rust:shuttle-secrets",
    "name": "shuttle-secrets",
    "description": "Plugin to for managing secrets on shuttle",
    "license": [""],
    "tags": ["shuttle-service", "secrets"],
    "downloads": 48034,
    "repositories": ["crates.io"]
  },
  "rust:shuttle-service": {
    "coordinates": "rust:shuttle-service",
    "name": "shuttle-service",
    "description": "The core traits for running services on Shuttle (https://www.shuttle.rs/)",
    "license": [""],
    "tags": [],
    "downloads": 130040,
    "repositories": ["crates.io"]
  },
  "rust:shuttle-shared-db": {
    "coordinates": "rust:shuttle-shared-db",
    "name": "shuttle-shared-db",
    "description": "Plugin for managing shared databases on shuttle",
    "license": [""],
    "tags": ["shuttle-service", "database"],
    "downloads": 41080,
    "repositories": ["crates.io"]
  },
  "rust:signal-hook-tokio": {
    "coordinates": "rust:signal-hook-tokio",
    "name": "signal-hook-tokio",
    "description": "Tokio support for signal-hook",
    "license": [""],
    "tags": ["signal", "unix", "tokio"],
    "downloads": 2725007,
    "repositories": ["crates.io"]
  },
  "rust:signatory": {
    "coordinates": "rust:signatory",
    "name": "signatory",
    "description": "Multi-provider elliptic curve digital signature library with ECDSA and Ed25519 support",
    "license": [""],
    "tags": ["ed25519", "signing", "ecdsa", "cryptography", "signatures"],
    "downloads": 2211728,
    "repositories": ["crates.io"]
  },
  "rust:simd-abstraction": {
    "coordinates": "rust:simd-abstraction",
    "name": "simd-abstraction",
    "description": "Abstract SIMD instruction sets",
    "license": [""],
    "tags": ["simd"],
    "downloads": 2518357,
    "repositories": ["crates.io"]
  },
  "rust:simd-json": {
    "coordinates": "rust:simd-json",
    "name": "simd-json",
    "description": "High performance JSON parser based on a port of simdjson",
    "license": [""],
    "tags": [],
    "downloads": 1313670,
    "repositories": ["crates.io"]
  },
  "rust:simd_helpers": {
    "coordinates": "rust:simd_helpers",
    "name": "simd_helpers",
    "description": "Helpers to write more compact simd code",
    "license": [""],
    "tags": ["proc_macro", "simd"],
    "downloads": 906484,
    "repositories": ["crates.io"]
  },
  "rust:similar-asserts": {
    "coordinates": "rust:similar-asserts",
    "name": "similar-asserts",
    "description": "provides assert_eq! like macros with colorized diff output",
    "license": [""],
    "tags": ["diff", "assert", "color"],
    "downloads": 2810036,
    "repositories": ["crates.io"]
  },
  "rust:simpl": {
    "coordinates": "rust:simpl",
    "name": "simpl",
    "description": "No dependency error handling, and own error construction and conversion lib",
    "license": [""],
    "tags": [],
    "downloads": 2795810,
    "repositories": ["crates.io"]
  },
  "rust:simple-mermaid": {
    "coordinates": "rust:simple-mermaid",
    "name": "simple-mermaid",
    "description": "Simple Mermaid diagrams RustDoc integration",
    "license": [""],
    "tags": ["mermaid", "diagrams", "documentation"],
    "downloads": 303490,
    "repositories": ["crates.io"]
  },
  "rust:simple-mutex": {
    "coordinates": "rust:simple-mutex",
    "name": "simple-mutex",
    "description": "A mutex more efficient than std and simpler than parking_lot",
    "license": [""],
    "tags": ["parking_lot", "mutex", "synchronization", "lock"],
    "downloads": 2406897,
    "repositories": ["crates.io"]
  },
  "rust:simple_logger": {
    "coordinates": "rust:simple_logger",
    "name": "simple_logger",
    "description": "A logger that prints all messages with a readable output format",
    "license": [""],
    "tags": [],
    "downloads": 9294540,
    "repositories": ["crates.io"]
  },
  "rust:simplecss": {
    "coordinates": "rust:simplecss",
    "name": "simplecss",
    "description": "A simple CSS 2 parser and selector.",
    "license": [""],
    "tags": ["parser", "selector", "css"],
    "downloads": 1517103,
    "repositories": ["crates.io"]
  },
  "rust:simplelog": {
    "coordinates": "rust:simplelog",
    "name": "simplelog",
    "description": "A simple and easy-to-use logging facility for Rust''s log crate",
    "license": [""],
    "tags": ["simplelog", "log", "filelog", "logging"],
    "downloads": 9281941,
    "repositories": ["crates.io"]
  },
  "rust:skeptic": {
    "coordinates": "rust:skeptic",
    "name": "skeptic",
    "description": "Test your Rust markdown documentation via Cargo",
    "license": [""],
    "tags": ["testing", "documentation", "markdown"],
    "downloads": 5884835,
    "repositories": ["crates.io"]
  },
  "rust:sketches-ddsketch": {
    "coordinates": "rust:sketches-ddsketch",
    "name": "sketches-ddsketch",
    "description": "A direct port of the Golang DDSketch implementation. ",
    "license": [""],
    "tags": [],
    "downloads": 8312928,
    "repositories": ["crates.io"]
  },
  "rust:sledgehammer_bindgen": {
    "coordinates": "rust:sledgehammer_bindgen",
    "name": "sledgehammer_bindgen",
    "description": "Fast batched js bindings",
    "license": [""],
    "tags": ["dom", "web", "wasm"],
    "downloads": 79448,
    "repositories": ["crates.io"]
  },
  "rust:sledgehammer_bindgen_macro": {
    "coordinates": "rust:sledgehammer_bindgen_macro",
    "name": "sledgehammer_bindgen_macro",
    "description": "Fast batched js bindings",
    "license": [""],
    "tags": ["dom", "web", "wasm"],
    "downloads": 6811,
    "repositories": ["crates.io"]
  },
  "rust:sledgehammer_utils": {
    "coordinates": "rust:sledgehammer_utils",
    "name": "sledgehammer_utils",
    "description": "Utilities for sledgehammer-bindgen",
    "license": [""],
    "tags": [],
    "downloads": 77706,
    "repositories": ["crates.io"]
  },
  "rust:slice-group-by": {
    "coordinates": "rust:slice-group-by",
    "name": "slice-group-by",
    "description": "Iterators over groups in slices and strs",
    "license": [""],
    "tags": ["group", "slice", "str"],
    "downloads": 6713190,
    "repositories": ["crates.io"]
  },
  "rust:slotmap": {
    "coordinates": "rust:slotmap",
    "name": "slotmap",
    "description": "Slotmap data structure",
    "license": [""],
    "tags": ["arena", "allocator", "reference", "slotmap", "storage"],
    "downloads": 9263903,
    "repositories": ["crates.io"]
  },
  "rust:slug": {
    "coordinates": "rust:slug",
    "name": "slug",
    "description": "Convert a unicode string to a slug",
    "license": [""],
    "tags": ["slug", "slugify", "id"],
    "downloads": 9370346,
    "repositories": ["crates.io"]
  },
  "rust:slugify": {
    "coordinates": "rust:slugify",
    "name": "slugify",
    "description": "Macro for flexible slug generation",
    "license": [""],
    "tags": ["macro", "slugify", "slug"],
    "downloads": 256520,
    "repositories": ["crates.io"]
  },
  "rust:smallstr": {
    "coordinates": "rust:smallstr",
    "name": "smallstr",
    "description": "String-like container based on smallvec",
    "license": [""],
    "tags": ["small", "str", "string"],
    "downloads": 1267546,
    "repositories": ["crates.io"]
  },
  "rust:smccc": {
    "coordinates": "rust:smccc",
    "name": "smccc",
    "description": "Functions and constants for the Arm SMC Calling Convention (SMCCC) 1.4 and Arm Power State Coordination Interface (PSCI) 1.1 on aarch64.",
    "license": [""],
    "tags": ["smccc", "cortex-a", "aarch64", "psci", "arm"],
    "downloads": 15102,
    "repositories": ["crates.io"]
  },
  "rust:smithay-client-toolkit": {
    "coordinates": "rust:smithay-client-toolkit",
    "name": "smithay-client-toolkit",
    "description": "Toolkit for making client wayland applications.",
    "license": [""],
    "tags": ["client", "wayland"],
    "downloads": 7056882,
    "repositories": ["crates.io"]
  },
  "rust:smithay-clipboard": {
    "coordinates": "rust:smithay-clipboard",
    "name": "smithay-clipboard",
    "description": "Provides access to the wayland clipboard for client applications.",
    "license": [""],
    "tags": ["wayland", "clipboard"],
    "downloads": 2413634,
    "repositories": ["crates.io"]
  },
  "rust:smol": {
    "coordinates": "rust:smol",
    "name": "smol",
    "description": "A small and fast async runtime",
    "license": [""],
    "tags": ["io", "async", "future", "await", "networking"],
    "downloads": 4543869,
    "repositories": ["crates.io"]
  },
  "rust:smoldot": {
    "coordinates": "rust:smoldot",
    "name": "smoldot",
    "description": "Primitives to build a client for Substrate-based blockchains",
    "license": [""],
    "tags": ["peer-to-peer", "blockchain"],
    "downloads": 908434,
    "repositories": ["crates.io"]
  },
  "rust:smoldot-light": {
    "coordinates": "rust:smoldot-light",
    "name": "smoldot-light",
    "description": "Browser bindings to a light client for Substrate-based blockchains",
    "license": [""],
    "tags": [],
    "downloads": 906380,
    "repositories": ["crates.io"]
  },
  "rust:smpl_jwt": {
    "coordinates": "rust:smpl_jwt",
    "name": "smpl_jwt",
    "description": "Very simple JWT generation lib.",
    "license": [""],
    "tags": ["jwt"],
    "downloads": 2956063,
    "repositories": ["crates.io"]
  },
  "rust:snow": {
    "coordinates": "rust:snow",
    "name": "snow",
    "description": "A pure-rust implementation of the Noise Protocol Framework",
    "license": [""],
    "tags": ["noise", "crypto", "protocol"],
    "downloads": 7487382,
    "repositories": ["crates.io"]
  },
  "rust:socks": {
    "coordinates": "rust:socks",
    "name": "socks",
    "description": "SOCKS proxy clients",
    "license": [""],
    "tags": [],
    "downloads": 1668820,
    "repositories": ["crates.io"]
  },
  "rust:softbuffer": {
    "coordinates": "rust:softbuffer",
    "name": "softbuffer",
    "description": "Cross-platform software buffer",
    "license": [""],
    "tags": ["framebuffer", "windowing"],
    "downloads": 393811,
    "repositories": ["crates.io"]
  },
  "rust:soketto": {
    "coordinates": "rust:soketto",
    "name": "soketto",
    "description": "A websocket protocol implementation.",
    "license": [""],
    "tags": ["websocket", "futures", "codec", "async"],
    "downloads": 8243263,
    "repositories": ["crates.io"]
  },
  "rust:solana-address-lookup-table-program": {
    "coordinates": "rust:solana-address-lookup-table-program",
    "name": "solana-address-lookup-table-program",
    "description": "Solana address lookup table program",
    "license": [""],
    "tags": [],
    "downloads": 942438,
    "repositories": ["crates.io"]
  },
  "rust:solana-nohash-hasher": {
    "coordinates": "rust:solana-nohash-hasher",
    "name": "solana-nohash-hasher",
    "description": "An implementation of `std::hash::Hasher` which does not hash at all.",
    "license": [""],
    "tags": ["hasher", "hashset", "hashmap", "hash"],
    "downloads": 312303,
    "repositories": ["crates.io"]
  },
  "rust:solana-program": {
    "coordinates": "rust:solana-program",
    "name": "solana-program",
    "description": "Solana Program",
    "license": [""],
    "tags": [],
    "downloads": 3115633,
    "repositories": ["crates.io"]
  },
  "rust:solana-program-test": {
    "coordinates": "rust:solana-program-test",
    "name": "solana-program-test",
    "description": "Solana Program Test Framework",
    "license": [""],
    "tags": [],
    "downloads": 750342,
    "repositories": ["crates.io"]
  },
  "rust:solana-sdk": {
    "coordinates": "rust:solana-sdk",
    "name": "solana-sdk",
    "description": "Solana SDK",
    "license": [""],
    "tags": [],
    "downloads": 2088198,
    "repositories": ["crates.io"]
  },
  "rust:solana-security-txt": {
    "coordinates": "rust:solana-security-txt",
    "name": "solana-security-txt",
    "description": "security-txt is a macro that helps security researchers contact you about vulnerabilities in your smart contract",
    "license": [""],
    "tags": [],
    "downloads": 549241,
    "repositories": ["crates.io"]
  },
  "rust:solana_rbpf": {
    "coordinates": "rust:solana_rbpf",
    "name": "solana_rbpf",
    "description": "Virtual machine and JIT compiler for eBPF programs",
    "license": [""],
    "tags": ["interpreter", "jit", "bpf", "filtering", "ebpf"],
    "downloads": 1529905,
    "repositories": ["crates.io"]
  },
  "rust:soup3": {
    "coordinates": "rust:soup3",
    "name": "soup3",
    "description": "Soup crate for Rust",
    "license": [""],
    "tags": ["soup", "gnome", "gtk-rs"],
    "downloads": 314216,
    "repositories": ["crates.io"]
  },
  "rust:soup3-sys": {
    "coordinates": "rust:soup3-sys",
    "name": "soup3-sys",
    "description": "FFI bindings of Soup 3",
    "license": [""],
    "tags": ["soup", "gnome", "gtk-rs"],
    "downloads": 321903,
    "repositories": ["crates.io"]
  },
  "rust:sp-api": {
    "coordinates": "rust:sp-api",
    "name": "sp-api",
    "description": "Substrate runtime api primitives (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 393517,
    "repositories": ["crates.io"]
  },
  "rust:sp-api-proc-macro": {
    "coordinates": "rust:sp-api-proc-macro",
    "name": "sp-api-proc-macro",
    "description": "Macros for declaring and implementing runtime apis. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 393315,
    "repositories": ["crates.io"]
  },
  "rust:sp-application-crypto": {
    "coordinates": "rust:sp-application-crypto",
    "name": "sp-application-crypto",
    "description": "Provides facilities for generating application specific crypto wrapper types. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 754845,
    "repositories": ["crates.io"]
  },
  "rust:sp-arithmetic": {
    "coordinates": "rust:sp-arithmetic",
    "name": "sp-arithmetic",
    "description": "Minimal fixed point arithmetic primitives and types for runtime. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 790625,
    "repositories": ["crates.io"]
  },
  "rust:sp-ark-bls12-381": {
    "coordinates": "rust:sp-ark-bls12-381",
    "name": "sp-ark-bls12-381",
    "description": "The BLS12-381 pairing-friendly elliptic curve, optimized for Substrate",
    "license": [""],
    "tags": [
      "substrate",
      "pairing",
      "arkworks",
      "elliptic-curves",
      "cryptography"
    ],
    "downloads": 174509,
    "repositories": ["crates.io"]
  },
  "rust:sp-ark-ed-on-bls12-381-bandersnatch": {
    "coordinates": "rust:sp-ark-ed-on-bls12-381-bandersnatch",
    "name": "sp-ark-ed-on-bls12-381-bandersnatch",
    "description": "Bandersnatch: a curve defined over the scalar field of the BLS12-381 curve, optimized for Substrate",
    "license": [""],
    "tags": [
      "substrate",
      "pairing",
      "arkworks",
      "elliptic-curves",
      "cryptography"
    ],
    "downloads": 174421,
    "repositories": ["crates.io"]
  },
  "rust:sp-authority-discovery": {
    "coordinates": "rust:sp-authority-discovery",
    "name": "sp-authority-discovery",
    "description": "Authority discovery primitives (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 87523,
    "repositories": ["crates.io"]
  },
  "rust:sp-block-builder": {
    "coordinates": "rust:sp-block-builder",
    "name": "sp-block-builder",
    "description": "The block builder runtime api. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 268976,
    "repositories": ["crates.io"]
  },
  "rust:sp-blockchain": {
    "coordinates": "rust:sp-blockchain",
    "name": "sp-blockchain",
    "description": "Substrate blockchain traits and primitives. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 279098,
    "repositories": ["crates.io"]
  },
  "rust:sp-consensus": {
    "coordinates": "rust:sp-consensus",
    "name": "sp-consensus",
    "description": "Common utilities for building and using consensus engines in substrate. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 296853,
    "repositories": ["crates.io"]
  },
  "rust:sp-consensus-aura": {
    "coordinates": "rust:sp-consensus-aura",
    "name": "sp-consensus-aura",
    "description": "Primitives for Aura consensus (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 218451,
    "repositories": ["crates.io"]
  },
  "rust:sp-consensus-babe": {
    "coordinates": "rust:sp-consensus-babe",
    "name": "sp-consensus-babe",
    "description": "Primitives for BABE consensus (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 182323,
    "repositories": ["crates.io"]
  },
  "rust:sp-consensus-grandpa": {
    "coordinates": "rust:sp-consensus-grandpa",
    "name": "sp-consensus-grandpa",
    "description": "Primitives for GRANDPA integration, suitable for WASM compilation. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 49324,
    "repositories": ["crates.io"]
  },
  "rust:sp-consensus-slots": {
    "coordinates": "rust:sp-consensus-slots",
    "name": "sp-consensus-slots",
    "description": "Primitives for slots-based consensus (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 243548,
    "repositories": ["crates.io"]
  },
  "rust:sp-core": {
    "coordinates": "rust:sp-core",
    "name": "sp-core",
    "description": "Shareable Substrate types. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 956726,
    "repositories": ["crates.io"]
  },
  "rust:sp-core-hashing": {
    "coordinates": "rust:sp-core-hashing",
    "name": "sp-core-hashing",
    "description": "Hashing primitives (deprecated: use sp-crypto-hashing for new applications)",
    "license": [""],
    "tags": [],
    "downloads": 639679,
    "repositories": ["crates.io"]
  },
  "rust:sp-crypto-ec-utils": {
    "coordinates": "rust:sp-crypto-ec-utils",
    "name": "sp-crypto-ec-utils",
    "description": "Host functions for common Arkworks elliptic curve operations (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 4987,
    "repositories": ["crates.io"]
  },
  "rust:sp-crypto-hashing": {
    "coordinates": "rust:sp-crypto-hashing",
    "name": "sp-crypto-hashing",
    "description": "Hashing primitives.",
    "license": [""],
    "tags": [],
    "downloads": 20967,
    "repositories": ["crates.io"]
  },
  "rust:sp-crypto-hashing-proc-macro": {
    "coordinates": "rust:sp-crypto-hashing-proc-macro",
    "name": "sp-crypto-hashing-proc-macro",
    "description": "Procedural macros for calculating static hashes.",
    "license": [""],
    "tags": [],
    "downloads": 16024,
    "repositories": ["crates.io"]
  },
  "rust:sp-database": {
    "coordinates": "rust:sp-database",
    "name": "sp-database",
    "description": "Substrate database trait.",
    "license": [""],
    "tags": [],
    "downloads": 257250,
    "repositories": ["crates.io"]
  },
  "rust:sp-debug-derive": {
    "coordinates": "rust:sp-debug-derive",
    "name": "sp-debug-derive",
    "description": "Macros to derive runtime debug implementation.",
    "license": [""],
    "tags": [],
    "downloads": 982289,
    "repositories": ["crates.io"]
  },
  "rust:sp-externalities": {
    "coordinates": "rust:sp-externalities",
    "name": "sp-externalities",
    "description": "Substrate externalities abstraction (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 849860,
    "repositories": ["crates.io"]
  },
  "rust:sp-genesis-builder": {
    "coordinates": "rust:sp-genesis-builder",
    "name": "sp-genesis-builder",
    "description": "Substrate RuntimeGenesisConfig builder API (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 71916,
    "repositories": ["crates.io"]
  },
  "rust:sp-inherents": {
    "coordinates": "rust:sp-inherents",
    "name": "sp-inherents",
    "description": "Provides types and traits for creating and checking inherents. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 393334,
    "repositories": ["crates.io"]
  },
  "rust:sp-io": {
    "coordinates": "rust:sp-io",
    "name": "sp-io",
    "description": "I/O for Substrate runtimes (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 782836,
    "repositories": ["crates.io"]
  },
  "rust:sp-keyring": {
    "coordinates": "rust:sp-keyring",
    "name": "sp-keyring",
    "description": "Keyring support code for the runtime. A set of test accounts. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 411107,
    "repositories": ["crates.io"]
  },
  "rust:sp-keystore": {
    "coordinates": "rust:sp-keystore",
    "name": "sp-keystore",
    "description": "Keystore primitives. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 624494,
    "repositories": ["crates.io"]
  },
  "rust:sp-maybe-compressed-blob": {
    "coordinates": "rust:sp-maybe-compressed-blob",
    "name": "sp-maybe-compressed-blob",
    "description": "Handling of blobs, usually Wasm code, which may be compresed",
    "license": [""],
    "tags": [],
    "downloads": 79773,
    "repositories": ["crates.io"]
  },
  "rust:sp-metadata-ir": {
    "coordinates": "rust:sp-metadata-ir",
    "name": "sp-metadata-ir",
    "description": "Intermediate representation of the runtime metadata. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 87341,
    "repositories": ["crates.io"]
  },
  "rust:sp-mixnet": {
    "coordinates": "rust:sp-mixnet",
    "name": "sp-mixnet",
    "description": "Substrate mixnet types and runtime interface (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 28021,
    "repositories": ["crates.io"]
  },
  "rust:sp-mmr-primitives": {
    "coordinates": "rust:sp-mmr-primitives",
    "name": "sp-mmr-primitives",
    "description": "Merkle Mountain Range primitives. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 29341,
    "repositories": ["crates.io"]
  },
  "rust:sp-npos-elections": {
    "coordinates": "rust:sp-npos-elections",
    "name": "sp-npos-elections",
    "description": "NPoS election algorithm primitives (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 117875,
    "repositories": ["crates.io"]
  },
  "rust:sp-offchain": {
    "coordinates": "rust:sp-offchain",
    "name": "sp-offchain",
    "description": "Substrate offchain workers primitives (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 253475,
    "repositories": ["crates.io"]
  },
  "rust:sp-panic-handler": {
    "coordinates": "rust:sp-panic-handler",
    "name": "sp-panic-handler",
    "description": "Custom panic hook with bug report link",
    "license": [""],
    "tags": [],
    "downloads": 756586,
    "repositories": ["crates.io"]
  },
  "rust:sp-rpc": {
    "coordinates": "rust:sp-rpc",
    "name": "sp-rpc",
    "description": "Substrate RPC primitives and utilities. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 272492,
    "repositories": ["crates.io"]
  },
  "rust:sp-runtime": {
    "coordinates": "rust:sp-runtime",
    "name": "sp-runtime",
    "description": "Runtime Modules shared primitive types. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 756214,
    "repositories": ["crates.io"]
  },
  "rust:sp-runtime-interface": {
    "coordinates": "rust:sp-runtime-interface",
    "name": "sp-runtime-interface",
    "description": "Substrate runtime interface (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 954526,
    "repositories": ["crates.io"]
  },
  "rust:sp-runtime-interface-proc-macro": {
    "coordinates": "rust:sp-runtime-interface-proc-macro",
    "name": "sp-runtime-interface-proc-macro",
    "description": "This crate provides procedural macros for usage within the context of the Substrate runtime interface.",
    "license": [""],
    "tags": [],
    "downloads": 930667,
    "repositories": ["crates.io"]
  },
  "rust:sp-session": {
    "coordinates": "rust:sp-session",
    "name": "sp-session",
    "description": "Primitives for sessions (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 277986,
    "repositories": ["crates.io"]
  },
  "rust:sp-staking": {
    "coordinates": "rust:sp-staking",
    "name": "sp-staking",
    "description": "A crate which contains primitives that are useful for implementation that uses staking approaches in general. Definitions related to sessions, slashing, etc go here. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 342679,
    "repositories": ["crates.io"]
  },
  "rust:sp-state-machine": {
    "coordinates": "rust:sp-state-machine",
    "name": "sp-state-machine",
    "description": "Substrate State Machine (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 777656,
    "repositories": ["crates.io"]
  },
  "rust:sp-statement-store": {
    "coordinates": "rust:sp-statement-store",
    "name": "sp-statement-store",
    "description": "A crate which contains primitives related to the statement store (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 43463,
    "repositories": ["crates.io"]
  },
  "rust:sp-std": {
    "coordinates": "rust:sp-std",
    "name": "sp-std",
    "description": "Lowest-abstraction level for the Substrate runtime: just exports useful primitives from std or client/alloc to be used with any code that depends on the runtime.",
    "license": [""],
    "tags": [],
    "downloads": 1183559,
    "repositories": ["crates.io"]
  },
  "rust:sp-storage": {
    "coordinates": "rust:sp-storage",
    "name": "sp-storage",
    "description": "Storage related primitives (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 945035,
    "repositories": ["crates.io"]
  },
  "rust:sp-timestamp": {
    "coordinates": "rust:sp-timestamp",
    "name": "sp-timestamp",
    "description": "Substrate core types and inherents for timestamps. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 316002,
    "repositories": ["crates.io"]
  },
  "rust:sp-tracing": {
    "coordinates": "rust:sp-tracing",
    "name": "sp-tracing",
    "description": "Instrumentation primitives and macros for Substrate. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 918343,
    "repositories": ["crates.io"]
  },
  "rust:sp-transaction-pool": {
    "coordinates": "rust:sp-transaction-pool",
    "name": "sp-transaction-pool",
    "description": "Transaction pool runtime facing API. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 263556,
    "repositories": ["crates.io"]
  },
  "rust:sp-transaction-storage-proof": {
    "coordinates": "rust:sp-transaction-storage-proof",
    "name": "sp-transaction-storage-proof",
    "description": "Transaction storage proof primitives (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 43203,
    "repositories": ["crates.io"]
  },
  "rust:sp-trie": {
    "coordinates": "rust:sp-trie",
    "name": "sp-trie",
    "description": "Patricia trie stuff using a parity-scale-codec node format (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 861773,
    "repositories": ["crates.io"]
  },
  "rust:sp-version": {
    "coordinates": "rust:sp-version",
    "name": "sp-version",
    "description": "Version module for the Substrate runtime; Provides a function that returns the runtime version. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 411550,
    "repositories": ["crates.io"]
  },
  "rust:sp-version-proc-macro": {
    "coordinates": "rust:sp-version-proc-macro",
    "name": "sp-version-proc-macro",
    "description": "Macro for defining a runtime version. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 125971,
    "repositories": ["crates.io"]
  },
  "rust:sp-wasm-interface": {
    "coordinates": "rust:sp-wasm-interface",
    "name": "sp-wasm-interface",
    "description": "Types and traits for interfacing between the host and the wasm runtime. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 945970,
    "repositories": ["crates.io"]
  },
  "rust:sp-weights": {
    "coordinates": "rust:sp-weights",
    "name": "sp-weights",
    "description": "Types and traits for interfacing between the host and the wasm runtime. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 384218,
    "repositories": ["crates.io"]
  },
  "rust:spade": {
    "coordinates": "rust:spade",
    "name": "spade",
    "description": "Delaunay triangulations for the rust ecosystem",
    "license": [""],
    "tags": [],
    "downloads": 1044245,
    "repositories": ["crates.io"]
  },
  "rust:sparsevec": {
    "coordinates": "rust:sparsevec",
    "name": "sparsevec",
    "description": "Compress vectors using row displacement",
    "license": [""],
    "tags": [],
    "downloads": 88741,
    "repositories": ["crates.io"]
  },
  "rust:spinners": {
    "coordinates": "rust:spinners",
    "name": "spinners",
    "description": "🛎 60+ Elegant terminal spinners for Rust",
    "license": [""],
    "tags": ["spinner", "spin", "loader", "term", "terminal"],
    "downloads": 1554590,
    "repositories": ["crates.io"]
  },
  "rust:spinning": {
    "coordinates": "rust:spinning",
    "name": "spinning",
    "description": "Mutexes and SIX locks implemented by spinning",
    "license": [""],
    "tags": ["once", "spinlock", "rwlock", "no_std", "mutex"],
    "downloads": 1148239,
    "repositories": ["crates.io"]
  },
  "rust:spirv": {
    "coordinates": "rust:spirv",
    "name": "spirv",
    "description": "Rust definition of SPIR-V structs and enums",
    "license": [""],
    "tags": ["enum", "definition", "spirv", "struct"],
    "downloads": 3300471,
    "repositories": ["crates.io"]
  },
  "rust:spl-associated-token-account": {
    "coordinates": "rust:spl-associated-token-account",
    "name": "spl-associated-token-account",
    "description": "Solana Program Library Associated Token Account",
    "license": [""],
    "tags": [],
    "downloads": 1998648,
    "repositories": ["crates.io"]
  },
  "rust:spl-discriminator": {
    "coordinates": "rust:spl-discriminator",
    "name": "spl-discriminator",
    "description": "Solana Program Library 8-Byte Discriminator Management",
    "license": [""],
    "tags": [],
    "downloads": 646478,
    "repositories": ["crates.io"]
  },
  "rust:spl-discriminator-derive": {
    "coordinates": "rust:spl-discriminator-derive",
    "name": "spl-discriminator-derive",
    "description": "Derive macro library for the `spl-discriminator` library",
    "license": [""],
    "tags": [],
    "downloads": 652025,
    "repositories": ["crates.io"]
  },
  "rust:spl-discriminator-syn": {
    "coordinates": "rust:spl-discriminator-syn",
    "name": "spl-discriminator-syn",
    "description": "Token parsing and generating library for the `spl-discriminator` library",
    "license": [""],
    "tags": [],
    "downloads": 652075,
    "repositories": ["crates.io"]
  },
  "rust:spl-instruction-padding": {
    "coordinates": "rust:spl-instruction-padding",
    "name": "spl-instruction-padding",
    "description": "Solana Program Library Instruction Padding Program",
    "license": [""],
    "tags": [],
    "downloads": 186379,
    "repositories": ["crates.io"]
  },
  "rust:spl-memo": {
    "coordinates": "rust:spl-memo",
    "name": "spl-memo",
    "description": "Solana Program Library Memo",
    "license": [""],
    "tags": [],
    "downloads": 1695915,
    "repositories": ["crates.io"]
  },
  "rust:spl-pod": {
    "coordinates": "rust:spl-pod",
    "name": "spl-pod",
    "description": "Solana Program Library Plain Old Data (Pod)",
    "license": [""],
    "tags": [],
    "downloads": 642499,
    "repositories": ["crates.io"]
  },
  "rust:spl-program-error": {
    "coordinates": "rust:spl-program-error",
    "name": "spl-program-error",
    "description": "Library for Solana Program error attributes and derive macro for creating them",
    "license": [""],
    "tags": [],
    "downloads": 649852,
    "repositories": ["crates.io"]
  },
  "rust:spl-program-error-derive": {
    "coordinates": "rust:spl-program-error-derive",
    "name": "spl-program-error-derive",
    "description": "Proc-Macro Library for Solana Program error attributes and derive macro",
    "license": [""],
    "tags": [],
    "downloads": 655751,
    "repositories": ["crates.io"]
  },
  "rust:spl-tlv-account-resolution": {
    "coordinates": "rust:spl-tlv-account-resolution",
    "name": "spl-tlv-account-resolution",
    "description": "Solana Program Library TLV Account Resolution Interface",
    "license": [""],
    "tags": [],
    "downloads": 699459,
    "repositories": ["crates.io"]
  },
  "rust:spl-token": {
    "coordinates": "rust:spl-token",
    "name": "spl-token",
    "description": "Solana Program Library Token",
    "license": [""],
    "tags": [],
    "downloads": 2130205,
    "repositories": ["crates.io"]
  },
  "rust:spl-token-2022": {
    "coordinates": "rust:spl-token-2022",
    "name": "spl-token-2022",
    "description": "Solana Program Library Token 2022",
    "license": [""],
    "tags": [],
    "downloads": 1535256,
    "repositories": ["crates.io"]
  },
  "rust:spl-token-group-interface": {
    "coordinates": "rust:spl-token-group-interface",
    "name": "spl-token-group-interface",
    "description": "Solana Program Library Token Group Interface",
    "license": [""],
    "tags": [],
    "downloads": 357725,
    "repositories": ["crates.io"]
  },
  "rust:spl-token-metadata-interface": {
    "coordinates": "rust:spl-token-metadata-interface",
    "name": "spl-token-metadata-interface",
    "description": "Solana Program Library Token Metadata Interface",
    "license": [""],
    "tags": [],
    "downloads": 632297,
    "repositories": ["crates.io"]
  },
  "rust:spl-transfer-hook-interface": {
    "coordinates": "rust:spl-transfer-hook-interface",
    "name": "spl-transfer-hook-interface",
    "description": "Solana Program Library Transfer Hook Interface",
    "license": [""],
    "tags": [],
    "downloads": 695436,
    "repositories": ["crates.io"]
  },
  "rust:spl-type-length-value": {
    "coordinates": "rust:spl-type-length-value",
    "name": "spl-type-length-value",
    "description": "Solana Program Library Type-Length-Value Management",
    "license": [""],
    "tags": [],
    "downloads": 649366,
    "repositories": ["crates.io"]
  },
  "rust:spm_precompiled": {
    "coordinates": "rust:spm_precompiled",
    "name": "spm_precompiled",
    "description": "This crate aims to emulate https://github.com/google/sentencepiece Dart::DoubleArray struct and it''s Normalizer.   This crate is highly specialized and not intended for general use. ",
    "license": [""],
    "tags": ["darts", "sentencepiece", "precompiled_charsmap", "doublearray"],
    "downloads": 1362872,
    "repositories": ["crates.io"]
  },
  "rust:sptr": {
    "coordinates": "rust:sptr",
    "name": "sptr",
    "description": "sptr: The Strict Provenance Polyfill",
    "license": [""],
    "tags": [],
    "downloads": 1695821,
    "repositories": ["crates.io"]
  },
  "rust:sql-ddl": { "name": "sql-ddl" },
  "rust:sql-introspection-connector": { "name": "sql-introspection-connector" },
  "rust:sql-migration-connector": { "name": "sql-migration-connector" },
  "rust:sql-query-connector": { "name": "sql-query-connector" },
  "rust:sql-schema-describer": { "name": "sql-schema-describer" },
  "rust:sqlparser": {
    "coordinates": "rust:sqlparser",
    "name": "sqlparser",
    "description": "Extensible SQL Lexer and Parser with support for ANSI SQL:2011",
    "license": [""],
    "tags": ["lexer", "ansi", "sql", "parser"],
    "downloads": 4772625,
    "repositories": ["crates.io"]
  },
  "rust:sqlparser_derive": {
    "coordinates": "rust:sqlparser_derive",
    "name": "sqlparser_derive",
    "description": "proc macro for sqlparser",
    "license": [""],
    "tags": ["lexer", "sql", "parser", "ansi"],
    "downloads": 2436763,
    "repositories": ["crates.io"]
  },
  "rust:sqlx-macros-core": {
    "coordinates": "rust:sqlx-macros-core",
    "name": "sqlx-macros-core",
    "description": "Macro support core for SQLx, the Rust SQL toolkit. Not intended to be used directly.",
    "license": [""],
    "tags": [],
    "downloads": 4916544,
    "repositories": ["crates.io"]
  },
  "rust:sqlx-mysql": {
    "coordinates": "rust:sqlx-mysql",
    "name": "sqlx-mysql",
    "description": "MySQL driver implementation for SQLx. Not for direct use; see the `sqlx` crate for details.",
    "license": [""],
    "tags": [],
    "downloads": 4826929,
    "repositories": ["crates.io"]
  },
  "rust:sqlx-postgres": {
    "coordinates": "rust:sqlx-postgres",
    "name": "sqlx-postgres",
    "description": "PostgreSQL driver implementation for SQLx. Not for direct use; see the `sqlx` crate for details.",
    "license": [""],
    "tags": [],
    "downloads": 4754586,
    "repositories": ["crates.io"]
  },
  "rust:sqlx-rt": {
    "coordinates": "rust:sqlx-rt",
    "name": "sqlx-rt",
    "description": "Runtime abstraction used by SQLx, the Rust SQL toolkit. Not intended to be used directly.",
    "license": [""],
    "tags": [],
    "downloads": 8751307,
    "repositories": ["crates.io"]
  },
  "rust:sqlx-sqlite": {
    "coordinates": "rust:sqlx-sqlite",
    "name": "sqlx-sqlite",
    "description": "SQLite driver implementation for SQLx. Not for direct use; see the `sqlx` crate for details.",
    "license": [""],
    "tags": [],
    "downloads": 4797944,
    "repositories": ["crates.io"]
  },
  "rust:ss58-registry": {
    "coordinates": "rust:ss58-registry",
    "name": "ss58-registry",
    "description": "Registry of known SS58 address types",
    "license": [""],
    "tags": [],
    "downloads": 3430587,
    "repositories": ["crates.io"]
  },
  "rust:ssri": {
    "coordinates": "rust:ssri",
    "name": "ssri",
    "description": "Various utilities for handling Subresource Integrity.",
    "license": [""],
    "tags": [],
    "downloads": 428555,
    "repositories": ["crates.io"]
  },
  "rust:stability": {
    "coordinates": "rust:stability",
    "name": "stability",
    "description": "Rust API stability attributes for the rest of us.",
    "license": [""],
    "tags": [],
    "downloads": 443230,
    "repositories": ["crates.io"]
  },
  "rust:stable-pattern": {
    "coordinates": "rust:stable-pattern",
    "name": "stable-pattern",
    "description": "Stable port of std::str::Pattern and friends.",
    "license": [""],
    "tags": ["stable", "pattern", "string"],
    "downloads": 2696762,
    "repositories": ["crates.io"]
  },
  "rust:stacker": {
    "coordinates": "rust:stacker",
    "name": "stacker",
    "description": "A stack growth library useful when implementing deeply recursive algorithms that may accidentally blow the stack. ",
    "license": [""],
    "tags": [],
    "downloads": 8111682,
    "repositories": ["crates.io"]
  },
  "rust:state": {
    "coordinates": "rust:state",
    "name": "state",
    "description": "A library for safe and effortless global and thread-local state management. ",
    "license": [""],
    "tags": ["thread-local", "tls", "global", "state", "static"],
    "downloads": 7331956,
    "repositories": ["crates.io"]
  },
  "rust:static-files": {
    "coordinates": "rust:static-files",
    "name": "static-files",
    "description": "The library to help automate static resource collection. ",
    "license": [""],
    "tags": [],
    "downloads": 198840,
    "repositories": ["crates.io"]
  },
  "rust:static_init": {
    "coordinates": "rust:static_init",
    "name": "static_init",
    "description": "Safe mutable static and non const static initialization, and code execution at program startup/exit.",
    "license": [""],
    "tags": ["preformance", "static", "no_std", "constructor", "optimization"],
    "downloads": 3723754,
    "repositories": ["crates.io"]
  },
  "rust:static_init_macro": {
    "coordinates": "rust:static_init_macro",
    "name": "static_init_macro",
    "description": "Attribute macros for static_init crate",
    "license": [""],
    "tags": ["static", "no_std", "initialization", "constructor", "utility"],
    "downloads": 3719800,
    "repositories": ["crates.io"]
  },
  "rust:stdweb-derive": {
    "coordinates": "rust:stdweb-derive",
    "name": "stdweb-derive",
    "description": "Derive macros for the `stdweb` crate",
    "license": [""],
    "tags": ["javascript", "webasm", "asmjs", "web"],
    "downloads": 9411748,
    "repositories": ["crates.io"]
  },
  "rust:stdweb-internal-macros": {
    "coordinates": "rust:stdweb-internal-macros",
    "name": "stdweb-internal-macros",
    "description": "Internal procedural macros for the `stdweb` crate",
    "license": [""],
    "tags": ["javascript", "webasm", "asmjs", "web"],
    "downloads": 9452552,
    "repositories": ["crates.io"]
  },
  "rust:stdweb-internal-runtime": {
    "coordinates": "rust:stdweb-internal-runtime",
    "name": "stdweb-internal-runtime",
    "description": "Internal runtime for the `stdweb` crate",
    "license": [""],
    "tags": ["asmjs", "webasm", "web", "javascript"],
    "downloads": 9408540,
    "repositories": ["crates.io"]
  },
  "rust:storage_impl": { "name": "storage_impl" },
  "rust:str-buf": {
    "coordinates": "rust:str-buf",
    "name": "str-buf",
    "description": "Static string buffer",
    "license": [""],
    "tags": ["str", "static", "string"],
    "downloads": 5663398,
    "repositories": ["crates.io"]
  },
  "rust:str_indices": {
    "coordinates": "rust:str_indices",
    "name": "str_indices",
    "description": "Count and convert between indexing schemes on string slices.",
    "license": [""],
    "tags": ["string", "text", "nostd"],
    "downloads": 561791,
    "repositories": ["crates.io"]
  },
  "rust:str_stack": {
    "coordinates": "rust:str_stack",
    "name": "str_stack",
    "description": "A string allocator for allocating many write-once strings.  This library is primarily useful for parsing where you need to repeatedly build many strings, use them, and then throw them away. Instead of allocating many independent strings, this library will put them all in the same buffer. ",
    "license": [""],
    "tags": ["dst", "stack", "string"],
    "downloads": 5339357,
    "repositories": ["crates.io"]
  },
  "rust:stream-cancel": {
    "coordinates": "rust:stream-cancel",
    "name": "stream-cancel",
    "description": "A library for interrupting asynchronous streams.",
    "license": [""],
    "tags": ["asynchronous", "futures"],
    "downloads": 3370170,
    "repositories": ["crates.io"]
  },
  "rust:streaming-decompression": {
    "coordinates": "rust:streaming-decompression",
    "name": "streaming-decompression",
    "description": "Fallible streaming iterator specialized for decompression",
    "license": [""],
    "tags": [],
    "downloads": 1460294,
    "repositories": ["crates.io"]
  },
  "rust:streaming-iterator": {
    "coordinates": "rust:streaming-iterator",
    "name": "streaming-iterator",
    "description": "Streaming iterators",
    "license": [""],
    "tags": [],
    "downloads": 1863020,
    "repositories": ["crates.io"]
  },
  "rust:strength_reduce": {
    "coordinates": "rust:strength_reduce",
    "name": "strength_reduce",
    "description": "Faster integer division and modulus operations",
    "license": [""],
    "tags": ["modulus", "strength", "division", "arithmetic", "reduction"],
    "downloads": 3498588,
    "repositories": ["crates.io"]
  },
  "rust:strfmt": {
    "coordinates": "rust:strfmt",
    "name": "strfmt",
    "description": "strfmt: rust library for formatting dynamic strings",
    "license": [""],
    "tags": ["format", "str", "dynamic", "static", "string"],
    "downloads": 690101,
    "repositories": ["crates.io"]
  },
  "rust:strict-num": {
    "coordinates": "rust:strict-num",
    "name": "strict-num",
    "description": "A collection of bounded numeric types",
    "license": [""],
    "tags": [],
    "downloads": 2235226,
    "repositories": ["crates.io"]
  },
  "rust:stringmatch": {
    "coordinates": "rust:stringmatch",
    "name": "stringmatch",
    "description": "Allow the use of regular expressions or strings wherever you need string comparison",
    "license": [""],
    "tags": ["compare", "comparison", "regex", "string", "match"],
    "downloads": 369655,
    "repositories": ["crates.io"]
  },
  "rust:strobe-rs": {
    "coordinates": "rust:strobe-rs",
    "name": "strobe-rs",
    "description": "An implementation of the Strobe protocol framework in pure Rust",
    "license": [""],
    "tags": ["strobe", "no_std", "crypto", "framework", "protocol"],
    "downloads": 586895,
    "repositories": ["crates.io"]
  },
  "rust:sublime_fuzzy": {
    "coordinates": "rust:sublime_fuzzy",
    "name": "sublime_fuzzy",
    "description": "Fuzzy matching algorithm based on Sublime Text''s string search.",
    "license": [""],
    "tags": ["search", "fuzzy", "match", "text"],
    "downloads": 360358,
    "repositories": ["crates.io"]
  },
  "rust:subprocess": {
    "coordinates": "rust:subprocess",
    "name": "subprocess",
    "description": "Execution of child processes and pipelines, inspired by Python''s subprocess module, with Rust-specific extensions. ",
    "license": [""],
    "tags": ["redirect", "execute", "pipe", "process", "command"],
    "downloads": 6407927,
    "repositories": ["crates.io"]
  },
  "rust:substrate-bip39": {
    "coordinates": "rust:substrate-bip39",
    "name": "substrate-bip39",
    "description": "Converting BIP39 entropy to valid Substrate (sr25519) SecretKeys (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 3562767,
    "repositories": ["crates.io"]
  },
  "rust:substrate-bn": {
    "coordinates": "rust:substrate-bn",
    "name": "substrate-bn",
    "description": "Pairing cryptography with the Barreto-Naehrig curve",
    "license": [""],
    "tags": ["pairing", "crypto", "cryptography"],
    "downloads": 863497,
    "repositories": ["crates.io"]
  },
  "rust:substrate-build-script-utils": {
    "coordinates": "rust:substrate-build-script-utils",
    "name": "substrate-build-script-utils",
    "description": "Crate with utility functions for `build.rs` scripts.",
    "license": [""],
    "tags": [],
    "downloads": 289824,
    "repositories": ["crates.io"]
  },
  "rust:substrate-frame-rpc-system": {
    "coordinates": "rust:substrate-frame-rpc-system",
    "name": "substrate-frame-rpc-system",
    "description": "FRAME''s system exposed over Substrate RPC (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 188014,
    "repositories": ["crates.io"]
  },
  "rust:substrate-prometheus-endpoint": {
    "coordinates": "rust:substrate-prometheus-endpoint",
    "name": "substrate-prometheus-endpoint",
    "description": "Endpoint to expose Prometheus metrics",
    "license": [""],
    "tags": [],
    "downloads": 299610,
    "repositories": ["crates.io"]
  },
  "rust:substrate-rpc-client": {
    "coordinates": "rust:substrate-rpc-client",
    "name": "substrate-rpc-client",
    "description": "Shared JSON-RPC client (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 29249,
    "repositories": ["crates.io"]
  },
  "rust:substrate-state-trie-migration-rpc": {
    "coordinates": "rust:substrate-state-trie-migration-rpc",
    "name": "substrate-state-trie-migration-rpc",
    "description": "Node-specific RPC methods for interaction with state trie migration. (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 19328,
    "repositories": ["crates.io"]
  },
  "rust:substrate-wasm-builder": {
    "coordinates": "rust:substrate-wasm-builder",
    "name": "substrate-wasm-builder",
    "description": "Utility for building WASM binaries (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 394468,
    "repositories": ["crates.io"]
  },
  "rust:subxt": {
    "coordinates": "rust:subxt",
    "name": "subxt",
    "description": "Submit extrinsics (transactions) to a substrate node via RPC",
    "license": [""],
    "tags": ["parity", "substrate", "blockchain"],
    "downloads": 372701,
    "repositories": ["crates.io"]
  },
  "rust:subxt-codegen": {
    "coordinates": "rust:subxt-codegen",
    "name": "subxt-codegen",
    "description": "Generate an API for interacting with a substrate node from FRAME metadata",
    "license": [""],
    "tags": [],
    "downloads": 380606,
    "repositories": ["crates.io"]
  },
  "rust:subxt-lightclient": {
    "coordinates": "rust:subxt-lightclient",
    "name": "subxt-lightclient",
    "description": "Light Client for chain interaction",
    "license": [""],
    "tags": ["parity", "substrate", "blockchain"],
    "downloads": 142492,
    "repositories": ["crates.io"]
  },
  "rust:subxt-macro": {
    "coordinates": "rust:subxt-macro",
    "name": "subxt-macro",
    "description": "Generate types and helpers for interacting with Substrate runtimes.",
    "license": [""],
    "tags": [],
    "downloads": 373753,
    "repositories": ["crates.io"]
  },
  "rust:subxt-metadata": {
    "coordinates": "rust:subxt-metadata",
    "name": "subxt-metadata",
    "description": "Command line utilities for checking metadata compatibility between nodes.",
    "license": [""],
    "tags": [],
    "downloads": 371638,
    "repositories": ["crates.io"]
  },
  "rust:subxt-signer": {
    "coordinates": "rust:subxt-signer",
    "name": "subxt-signer",
    "description": "Sign extrinsics to be submitted by Subxt",
    "license": [""],
    "tags": ["signer", "extrinsic", "subxt", "parity"],
    "downloads": 58482,
    "repositories": ["crates.io"]
  },
  "rust:sucds": {
    "coordinates": "rust:sucds",
    "name": "sucds",
    "description": "Succinct data structures in Rust",
    "license": [""],
    "tags": ["succinct", "compression"],
    "downloads": 253930,
    "repositories": ["crates.io"]
  },
  "rust:supports-color": {
    "coordinates": "rust:supports-color",
    "name": "supports-color",
    "description": "Detects whether a terminal supports color, and gives details about that support.",
    "license": [""],
    "tags": [],
    "downloads": 9230100,
    "repositories": ["crates.io"]
  },
  "rust:supports-hyperlinks": {
    "coordinates": "rust:supports-hyperlinks",
    "name": "supports-hyperlinks",
    "description": "Detects whether a terminal supports rendering hyperlinks.",
    "license": [""],
    "tags": [],
    "downloads": 6271915,
    "repositories": ["crates.io"]
  },
  "rust:supports-unicode": {
    "coordinates": "rust:supports-unicode",
    "name": "supports-unicode",
    "description": "Detects whether a terminal supports unicode.",
    "license": [""],
    "tags": [],
    "downloads": 5649002,
    "repositories": ["crates.io"]
  },
  "rust:sval": {
    "coordinates": "rust:sval",
    "name": "sval",
    "description": "Streaming, structured value serialization",
    "license": [""],
    "tags": ["serialization", "no_std"],
    "downloads": 5236998,
    "repositories": ["crates.io"]
  },
  "rust:svg": {
    "coordinates": "rust:svg",
    "name": "svg",
    "description": "The package provides an SVG composer and parser.",
    "license": [""],
    "tags": ["vector-graphics"],
    "downloads": 1355060,
    "repositories": ["crates.io"]
  },
  "rust:svg_fmt": {
    "coordinates": "rust:svg_fmt",
    "name": "svg_fmt",
    "description": "Very simple debugging utilities to dump shapes in SVG format.",
    "license": [""],
    "tags": ["2d", "graphics", "svg"],
    "downloads": 2414161,
    "repositories": ["crates.io"]
  },
  "rust:svg_path_ops": {
    "coordinates": "rust:svg_path_ops",
    "name": "svg_path_ops",
    "description": "SVG Path Manipulation Utilities",
    "license": [""],
    "tags": ["svg", "bezier", "sketch", "graphics", "2d"],
    "downloads": 6534,
    "repositories": ["crates.io"]
  },
  "rust:svgtypes": {
    "coordinates": "rust:svgtypes",
    "name": "svgtypes",
    "description": "SVG types parser.",
    "license": [""],
    "tags": ["svg", "tokenizer", "parser"],
    "downloads": 1909023,
    "repositories": ["crates.io"]
  },
  "rust:svix-ksuid": {
    "coordinates": "rust:svix-ksuid",
    "name": "svix-ksuid",
    "description": "A pure Rust and fully tested KSUID implementation",
    "license": [""],
    "tags": ["uuid", "segment", "svix", "ksuid"],
    "downloads": 91969,
    "repositories": ["crates.io"]
  },
  "rust:swash": {
    "coordinates": "rust:swash",
    "name": "swash",
    "description": "Font introspection, complex text shaping and glyph rendering.",
    "license": [""],
    "tags": ["shape", "glyph", "text", "font"],
    "downloads": 374652,
    "repositories": ["crates.io"]
  },
  "rust:symbolic-common": {
    "coordinates": "rust:symbolic-common",
    "name": "symbolic-common",
    "description": "Common types and utilities for symbolic, a library to symbolicate and process stack traces from native applications, minidumps or minified JavaScript. ",
    "license": [""],
    "tags": [],
    "downloads": 8026985,
    "repositories": ["crates.io"]
  },
  "rust:symbolic-demangle": {
    "coordinates": "rust:symbolic-demangle",
    "name": "symbolic-demangle",
    "description": "A library to demangle symbols from various languages and compilers. ",
    "license": [""],
    "tags": [],
    "downloads": 7826005,
    "repositories": ["crates.io"]
  },
  "rust:symlink": {
    "coordinates": "rust:symlink",
    "name": "symlink",
    "description": "Create symlinks in a cross-platform manner",
    "license": [""],
    "tags": ["file", "fs"],
    "downloads": 1894133,
    "repositories": ["crates.io"]
  },
  "rust:symphonia": {
    "coordinates": "rust:symphonia",
    "name": "symphonia",
    "description": "Pure Rust media container and audio decoding library.",
    "license": [""],
    "tags": ["multimedia", "codec", "decoder", "audio", "media"],
    "downloads": 651351,
    "repositories": ["crates.io"]
  },
  "rust:symphonia-codec-adpcm": {
    "coordinates": "rust:symphonia-codec-adpcm",
    "name": "symphonia-codec-adpcm",
    "description": "Pure Rust ADPCM audio decoder (a part of project Symphonia).",
    "license": [""],
    "tags": ["adpcm", "codec", "decoder", "audio"],
    "downloads": 200932,
    "repositories": ["crates.io"]
  },
  "rust:symphonia-codec-pcm": {
    "coordinates": "rust:symphonia-codec-pcm",
    "name": "symphonia-codec-pcm",
    "description": "Pure Rust PCM audio decoder (a part of project Symphonia).",
    "license": [""],
    "tags": ["pcm", "audio", "codec", "decoder"],
    "downloads": 352944,
    "repositories": ["crates.io"]
  },
  "rust:symphonia-core": {
    "coordinates": "rust:symphonia-core",
    "name": "symphonia-core",
    "description": "Project Symphonia shared structs, traits, and features.",
    "license": [""],
    "tags": ["audio", "codec", "media", "decoder", "multimedia"],
    "downloads": 720494,
    "repositories": ["crates.io"]
  },
  "rust:symphonia-format-riff": {
    "coordinates": "rust:symphonia-format-riff",
    "name": "symphonia-format-riff",
    "description": "Pure Rust RIFF demuxer (a part of project Symphonia).",
    "license": [""],
    "tags": ["aiff", "audio", "media", "wav", "demuxer"],
    "downloads": 26336,
    "repositories": ["crates.io"]
  },
  "rust:symphonia-metadata": {
    "coordinates": "rust:symphonia-metadata",
    "name": "symphonia-metadata",
    "description": "Project Symphonia multimedia tag and metadata readers.",
    "license": [""],
    "tags": ["id3v2", "id3v1", "media", "metadata", "multimedia"],
    "downloads": 659045,
    "repositories": ["crates.io"]
  },
  "rust:syn-solidity": {
    "coordinates": "rust:syn-solidity",
    "name": "syn-solidity",
    "description": "syn-powered Solidity parser",
    "license": [""],
    "tags": ["ethereum", "syn", "solidity", "evm", "ast"],
    "downloads": 625458,
    "repositories": ["crates.io"]
  },
  "rust:syn_derive": {
    "coordinates": "rust:syn_derive",
    "name": "syn_derive",
    "description": "Derive macros for `syn::Parse` and `quote::ToTokens`",
    "license": [""],
    "tags": [],
    "downloads": 3261017,
    "repositories": ["crates.io"]
  },
  "rust:synchronoise": {
    "coordinates": "rust:synchronoise",
    "name": "synchronoise",
    "description": "Synchronization primitives that build upon the standard library",
    "license": [""],
    "tags": ["parallel_programming", "phaser", "synchronization"],
    "downloads": 509780,
    "repositories": ["crates.io"]
  },
  "rust:syntect": {
    "coordinates": "rust:syntect",
    "name": "syntect",
    "description": "library for high quality syntax highlighting and code intelligence using Sublime Text''s grammars",
    "license": [""],
    "tags": ["colouring", "highlighter", "parsing", "highlighting", "syntax"],
    "downloads": 3009618,
    "repositories": ["crates.io"]
  },
  "rust:sys-info": {
    "coordinates": "rust:sys-info",
    "name": "sys-info",
    "description": "Get system information in Rust.  For now it supports Linux, Mac OS X, illumos, Solaris, FreeBSD, OpenBSD, and Windows. ",
    "license": [""],
    "tags": ["memory", "disk", "information", "system", "cpu"],
    "downloads": 9168358,
    "repositories": ["crates.io"]
  },
  "rust:sys-locale": {
    "coordinates": "rust:sys-locale",
    "name": "sys-locale",
    "description": "Small and lightweight library to obtain the active system locale",
    "license": [""],
    "tags": ["locale", "nostd", "localization", "i18n"],
    "downloads": 3272643,
    "repositories": ["crates.io"]
  },
  "rust:sysctl": {
    "coordinates": "rust:sysctl",
    "name": "sysctl",
    "description": "Simplified interface to libc::sysctl",
    "license": [""],
    "tags": ["linux", "sysfs", "freebsd", "sysctl", "macos"],
    "downloads": 1866174,
    "repositories": ["crates.io"]
  },
  "rust:syslog_loose": {
    "coordinates": "rust:syslog_loose",
    "name": "syslog_loose",
    "description": "A loose parser for syslog messages.",
    "license": [""],
    "tags": ["syslog", "logs", "logging"],
    "downloads": 755875,
    "repositories": ["crates.io"]
  },
  "rust:system-configuration": {
    "coordinates": "rust:system-configuration",
    "name": "system-configuration",
    "description": "Bindings to SystemConfiguration framework for macOS",
    "license": [""],
    "tags": ["macos", "system", "configuration", "bindings"],
    "downloads": 8985929,
    "repositories": ["crates.io"]
  },
  "rust:system-configuration-sys": {
    "coordinates": "rust:system-configuration-sys",
    "name": "system-configuration-sys",
    "description": "Low level bindings to SystemConfiguration framework for macOS",
    "license": [""],
    "tags": ["macos", "system", "configuration", "bindings"],
    "downloads": 8957754,
    "repositories": ["crates.io"]
  },
  "rust:system-deps": {
    "coordinates": "rust:system-deps",
    "name": "system-deps",
    "description": "Discover and configure system dependencies from declarative dependencies in Cargo.toml",
    "license": [""],
    "tags": [
      "metadata",
      "build-depends",
      "pkg-config",
      "build-dependencies",
      "manifest"
    ],
    "downloads": 9066668,
    "repositories": ["crates.io"]
  },
  "rust:systemstat": {
    "coordinates": "rust:systemstat",
    "name": "systemstat",
    "description": "Get system information/statistics in a cross-platform way",
    "license": [""],
    "tags": ["info", "system"],
    "downloads": 1133657,
    "repositories": ["crates.io"]
  },
  "rust:table_formatter": {
    "coordinates": "rust:table_formatter",
    "name": "table_formatter",
    "description": "A simple text table formatter written in Rust",
    "license": [""],
    "tags": ["table", "formatter", "text"],
    "downloads": 14070,
    "repositories": ["crates.io"]
  },
  "rust:tabled": {
    "coordinates": "rust:tabled",
    "name": "tabled",
    "description": "An easy to use library for pretty print tables of Rust `struct`s and `enum`s.",
    "license": [""],
    "tags": ["terminal", "format", "table", "pretty-table", "print"],
    "downloads": 2725641,
    "repositories": ["crates.io"]
  },
  "rust:tabled_derive": {
    "coordinates": "rust:tabled_derive",
    "name": "tabled_derive",
    "description": "Derive macros which is used by tabled crate",
    "license": [""],
    "tags": [],
    "downloads": 2512180,
    "repositories": ["crates.io"]
  },
  "rust:tagptr": {
    "coordinates": "rust:tagptr",
    "name": "tagptr",
    "description": "Strongly typed atomic and non-atomic tagged pointers",
    "license": [""],
    "tags": ["tagging", "pointer", "concurrency"],
    "downloads": 4928194,
    "repositories": ["crates.io"]
  },
  "rust:tantivy": {
    "coordinates": "rust:tantivy",
    "name": "tantivy",
    "description": "Search engine library",
    "license": [""],
    "tags": ["information", "search", "retrieval"],
    "downloads": 1896998,
    "repositories": ["crates.io"]
  },
  "rust:tantivy-bitpacker": {
    "coordinates": "rust:tantivy-bitpacker",
    "name": "tantivy-bitpacker",
    "description": "Tantivy-sub crate: bitpacking",
    "license": [""],
    "tags": [],
    "downloads": 1688976,
    "repositories": ["crates.io"]
  },
  "rust:tantivy-columnar": {
    "coordinates": "rust:tantivy-columnar",
    "name": "tantivy-columnar",
    "description": "column oriented storage for tantivy",
    "license": [""],
    "tags": [],
    "downloads": 790916,
    "repositories": ["crates.io"]
  },
  "rust:tantivy-common": {
    "coordinates": "rust:tantivy-common",
    "name": "tantivy-common",
    "description": "common traits and utility functions used by multiple tantivy subcrates",
    "license": [""],
    "tags": [],
    "downloads": 1736791,
    "repositories": ["crates.io"]
  },
  "rust:tantivy-fst": {
    "coordinates": "rust:tantivy-fst",
    "name": "tantivy-fst",
    "description": "This is a tantivy-specific fork from the fst crate from Burntsushi. (Please use the fst crate instead.) ",
    "license": [""],
    "tags": ["donotuseme"],
    "downloads": 3038135,
    "repositories": ["crates.io"]
  },
  "rust:tantivy-query-grammar": {
    "coordinates": "rust:tantivy-query-grammar",
    "name": "tantivy-query-grammar",
    "description": "Search engine library",
    "license": [""],
    "tags": ["information", "search", "retrieval"],
    "downloads": 1797325,
    "repositories": ["crates.io"]
  },
  "rust:tantivy-sstable": {
    "coordinates": "rust:tantivy-sstable",
    "name": "tantivy-sstable",
    "description": "sstables for tantivy",
    "license": [""],
    "tags": ["sstable", "information", "search", "retrieval"],
    "downloads": 791177,
    "repositories": ["crates.io"]
  },
  "rust:tantivy-stacker": {
    "coordinates": "rust:tantivy-stacker",
    "name": "tantivy-stacker",
    "description": "term hashmap used for indexing",
    "license": [""],
    "tags": [],
    "downloads": 790836,
    "repositories": ["crates.io"]
  },
  "rust:tantivy-tokenizer-api": {
    "coordinates": "rust:tantivy-tokenizer-api",
    "name": "tantivy-tokenizer-api",
    "description": "Tokenizer API of tantivy",
    "license": [""],
    "tags": [],
    "downloads": 818870,
    "repositories": ["crates.io"]
  },
  "rust:tao": {
    "coordinates": "rust:tao",
    "name": "tao",
    "description": "Cross-platform window manager library.",
    "license": [""],
    "tags": ["windowing"],
    "downloads": 2120361,
    "repositories": ["crates.io"]
  },
  "rust:tao-macros": {
    "coordinates": "rust:tao-macros",
    "name": "tao-macros",
    "description": "Proc macros for tao",
    "license": [""],
    "tags": [],
    "downloads": 314600,
    "repositories": ["crates.io"]
  },
  "rust:target-features": {
    "coordinates": "rust:target-features",
    "name": "target-features",
    "description": "Rust compiler target feature database",
    "license": [""],
    "tags": [],
    "downloads": 788553,
    "repositories": ["crates.io"]
  },
  "rust:tarpc": {
    "coordinates": "rust:tarpc",
    "name": "tarpc",
    "description": "An RPC framework for Rust with a focus on ease of use.",
    "license": [""],
    "tags": ["server", "rpc", "microservices", "network", "api"],
    "downloads": 2952570,
    "repositories": ["crates.io"]
  },
  "rust:tarpc-plugins": {
    "coordinates": "rust:tarpc-plugins",
    "name": "tarpc-plugins",
    "description": "Proc macros for tarpc.",
    "license": [""],
    "tags": ["microservices", "api", "network", "rpc", "server"],
    "downloads": 2891406,
    "repositories": ["crates.io"]
  },
  "rust:tauri": {
    "coordinates": "rust:tauri",
    "name": "tauri",
    "description": "Make tiny, secure apps for all desktop platforms with Tauri",
    "license": [""],
    "tags": [],
    "downloads": 1836484,
    "repositories": ["crates.io"]
  },
  "rust:tauri-build": {
    "coordinates": "rust:tauri-build",
    "name": "tauri-build",
    "description": "build time code to pair with https://crates.io/crates/tauri",
    "license": [""],
    "tags": [],
    "downloads": 1685785,
    "repositories": ["crates.io"]
  },
  "rust:tauri-bundler": {
    "coordinates": "rust:tauri-bundler",
    "name": "tauri-bundler",
    "description": "Wrap rust executables in OS-specific app bundles for Tauri",
    "license": [""],
    "tags": ["bundle", "cargo", "tauri"],
    "downloads": 234184,
    "repositories": ["crates.io"]
  },
  "rust:tauri-icns": {
    "coordinates": "rust:tauri-icns",
    "name": "tauri-icns",
    "description": "A library for encoding/decoding Apple Icon Image (.icns) files.",
    "license": [""],
    "tags": ["icns", "icon", "image"],
    "downloads": 168822,
    "repositories": ["crates.io"]
  },
  "rust:tauri-utils": {
    "coordinates": "rust:tauri-utils",
    "name": "tauri-utils",
    "description": "Utilities for Tauri",
    "license": [""],
    "tags": [],
    "downloads": 1828909,
    "repositories": ["crates.io"]
  },
  "rust:temp-dir": {
    "coordinates": "rust:temp-dir",
    "name": "temp-dir",
    "description": "Simple temporary directory with cleanup",
    "license": [""],
    "tags": ["tempdir", "temp", "tmpdir", "dir", "mkdtemp"],
    "downloads": 1319570,
    "repositories": ["crates.io"]
  },
  "rust:temp-env": {
    "coordinates": "rust:temp-env",
    "name": "temp-env",
    "description": "Set environment variables temporarily.",
    "license": [""],
    "tags": ["temporary", "testing", "envvar", "env", "environment"],
    "downloads": 1151092,
    "repositories": ["crates.io"]
  },
  "rust:tera": {
    "coordinates": "rust:tera",
    "name": "tera",
    "description": "Template engine based on Jinja2/Django templates",
    "license": [""],
    "tags": ["markup", "django", "html", "jinja2", "template"],
    "downloads": 9386709,
    "repositories": ["crates.io"]
  },
  "rust:term_size": {
    "coordinates": "rust:term_size",
    "name": "term_size",
    "description": "functions for determining terminal sizes and dimensions",
    "license": [""],
    "tags": ["size", "dimension", "terminal", "width", "term"],
    "downloads": 9278924,
    "repositories": ["crates.io"]
  },
  "rust:terminal-prompt": {
    "coordinates": "rust:terminal-prompt",
    "name": "terminal-prompt",
    "description": "Tiny library for prompting sensitive or non-sensitive data on the terminal",
    "license": [""],
    "tags": ["tty", "prompt", "console", "input", "terminal"],
    "downloads": 146205,
    "repositories": ["crates.io"]
  },
  "rust:termini": {
    "coordinates": "rust:termini",
    "name": "termini",
    "description": "Minimal terminfo libary.",
    "license": [""],
    "tags": ["termcap", "terminfo", "term", "terminal"],
    "downloads": 88468,
    "repositories": ["crates.io"]
  },
  "rust:test-case": {
    "coordinates": "rust:test-case",
    "name": "test-case",
    "description": "Provides #[test_case(...)] procedural macro attribute for generating parametrized test cases easily",
    "license": [""],
    "tags": ["case", "testing", "test", "tests", "unit"],
    "downloads": 7084754,
    "repositories": ["crates.io"]
  },
  "rust:test-case-core": {
    "coordinates": "rust:test-case-core",
    "name": "test-case-core",
    "description": "Provides core functionality for parsing #[test_case(...)] procedural macro attribute for generating parametrized test cases easily",
    "license": [""],
    "tags": ["case", "testing", "test", "tests", "unit"],
    "downloads": 2308445,
    "repositories": ["crates.io"]
  },
  "rust:test-case-macros": {
    "coordinates": "rust:test-case-macros",
    "name": "test-case-macros",
    "description": "Provides #[test_case(...)] procedural macro attribute for generating parametrized test cases easily",
    "license": [""],
    "tags": ["case", "testing", "test", "tests", "unit"],
    "downloads": 4163302,
    "repositories": ["crates.io"]
  },
  "rust:test-fuzz": {
    "coordinates": "rust:test-fuzz",
    "name": "test-fuzz",
    "description": "To make fuzzing Rust easy",
    "license": [""],
    "tags": [],
    "downloads": 841634,
    "repositories": ["crates.io"]
  },
  "rust:test-fuzz-internal": {
    "coordinates": "rust:test-fuzz-internal",
    "name": "test-fuzz-internal",
    "description": "test-fuzz-internal",
    "license": [""],
    "tags": [],
    "downloads": 837273,
    "repositories": ["crates.io"]
  },
  "rust:test-fuzz-macro": {
    "coordinates": "rust:test-fuzz-macro",
    "name": "test-fuzz-macro",
    "description": "test-fuzz-macro",
    "license": [""],
    "tags": [],
    "downloads": 843481,
    "repositories": ["crates.io"]
  },
  "rust:test-fuzz-runtime": {
    "coordinates": "rust:test-fuzz-runtime",
    "name": "test-fuzz-runtime",
    "description": "test-fuzz-runtime",
    "license": [""],
    "tags": [],
    "downloads": 841749,
    "repositories": ["crates.io"]
  },
  "rust:test_utils": {
    "coordinates": "rust:test_utils",
    "name": "test_utils",
    "description": "Utility functions to run rust tests.",
    "license": [""],
    "tags": [],
    "downloads": 3355,
    "repositories": ["crates.io"]
  },
  "rust:text_placeholder": {
    "coordinates": "rust:text_placeholder",
    "name": "text_placeholder",
    "description": "A flexible text template engine",
    "license": [""],
    "tags": [],
    "downloads": 123509,
    "repositories": ["crates.io"]
  },
  "rust:thin-slice": {
    "coordinates": "rust:thin-slice",
    "name": "thin-slice",
    "description": "An owned slice that packs the slice storage into a single word when possible",
    "license": [""],
    "tags": ["pointer", "tagged", "slice"],
    "downloads": 4278671,
    "repositories": ["crates.io"]
  },
  "rust:thin-vec": {
    "coordinates": "rust:thin-vec",
    "name": "thin-vec",
    "description": "A vec that takes up less space on the stack",
    "license": [""],
    "tags": [],
    "downloads": 1533737,
    "repositories": ["crates.io"]
  },
  "rust:thirtyfour": {
    "coordinates": "rust:thirtyfour",
    "name": "thirtyfour",
    "description": "Thirtyfour is a Selenium / WebDriver library for Rust, for automated website UI testing.  Tested on Chrome and Firefox, but any webdriver-capable browser should work. ",
    "license": [""],
    "tags": [
      "geckodriver",
      "selenium",
      "webdriver",
      "chromedriver",
      "automation"
    ],
    "downloads": 407734,
    "repositories": ["crates.io"]
  },
  "rust:thirtyfour-macros": {
    "coordinates": "rust:thirtyfour-macros",
    "name": "thirtyfour-macros",
    "description": "Thirtyfour is a Selenium / WebDriver library for Rust, for automated website UI testing. ",
    "license": [""],
    "tags": [
      "selenium",
      "webdriver",
      "chromedriver",
      "geckodriver",
      "automation"
    ],
    "downloads": 207659,
    "repositories": ["crates.io"]
  },
  "rust:thiserror-impl-no-std": {
    "coordinates": "rust:thiserror-impl-no-std",
    "name": "thiserror-impl-no-std",
    "description": "Implementation detail of the `thiserror` crate",
    "license": [""],
    "tags": [],
    "downloads": 510530,
    "repositories": ["crates.io"]
  },
  "rust:thiserror-no-std": {
    "coordinates": "rust:thiserror-no-std",
    "name": "thiserror-no-std",
    "description": "derive(Error)",
    "license": [""],
    "tags": [],
    "downloads": 510284,
    "repositories": ["crates.io"]
  },
  "rust:thousands": {
    "coordinates": "rust:thousands",
    "name": "thousands",
    "description": "Adds digit separators to numbers, configurably.",
    "license": [""],
    "tags": ["separators", "commas", "numbers", "formatting"],
    "downloads": 4305752,
    "repositories": ["crates.io"]
  },
  "rust:thread-scoped": {
    "coordinates": "rust:thread-scoped",
    "name": "thread-scoped",
    "description": "Unsafe and deprecated std::thread::scoped",
    "license": [""],
    "tags": ["thread", "scoped", "spawn"],
    "downloads": 667334,
    "repositories": ["crates.io"]
  },
  "rust:tiberius": {
    "coordinates": "rust:tiberius",
    "name": "tiberius",
    "description": "A TDS (MSSQL) driver",
    "license": [""],
    "tags": ["tds", "mssql", "sql"],
    "downloads": 2125013,
    "repositories": ["crates.io"]
  },
  "rust:tide": {
    "coordinates": "rust:tide",
    "name": "tide",
    "description": "A minimal and pragmatic Rust web application framework built for rapid development",
    "license": [""],
    "tags": ["tide", "http", "framework", "async", "web"],
    "downloads": 1362183,
    "repositories": ["crates.io"]
  },
  "rust:tiktoken-rs": {
    "coordinates": "rust:tiktoken-rs",
    "name": "tiktoken-rs",
    "description": "Library for encoding and decoding with the tiktoken library in Rust",
    "license": [""],
    "tags": ["openai", "bpe", "gpt", "ai"],
    "downloads": 276729,
    "repositories": ["crates.io"]
  },
  "rust:tikv-jemalloc-ctl": {
    "coordinates": "rust:tikv-jemalloc-ctl",
    "name": "tikv-jemalloc-ctl",
    "description": "A safe wrapper over jemalloc''s control and introspection APIs ",
    "license": [""],
    "tags": ["jemalloc", "allocator"],
    "downloads": 4345137,
    "repositories": ["crates.io"]
  },
  "rust:tikv-jemallocator": {
    "coordinates": "rust:tikv-jemallocator",
    "name": "tikv-jemallocator",
    "description": "A Rust allocator backed by jemalloc ",
    "license": [""],
    "tags": ["jemalloc", "allocator"],
    "downloads": 7913245,
    "repositories": ["crates.io"]
  },
  "rust:time-fmt": {
    "coordinates": "rust:time-fmt",
    "name": "time-fmt",
    "description": "A strftime/strptime-like time formatter/parser for time-rs",
    "license": [""],
    "tags": [],
    "downloads": 32648,
    "repositories": ["crates.io"]
  },
  "rust:tiny-bip39": {
    "coordinates": "rust:tiny-bip39",
    "name": "tiny-bip39",
    "description": "A fork of the bip39 crate with fixes to v0.6. Rust implementation of BIP-0039",
    "license": [""],
    "tags": ["bip39", "mnemonic", "bitcoin"],
    "downloads": 6961220,
    "repositories": ["crates.io"]
  },
  "rust:tiny-led-matrix": {
    "coordinates": "rust:tiny-led-matrix",
    "name": "tiny-led-matrix",
    "description": "A library for direct control of a small monochrome LED display.",
    "license": [""],
    "tags": ["microbit"],
    "downloads": 29238,
    "repositories": ["crates.io"]
  },
  "rust:tiny-skia": {
    "coordinates": "rust:tiny-skia",
    "name": "tiny-skia",
    "description": "A tiny Skia subset ported to Rust.",
    "license": [""],
    "tags": ["2d", "rendering", "skia"],
    "downloads": 3734528,
    "repositories": ["crates.io"]
  },
  "rust:tiny-skia-path": {
    "coordinates": "rust:tiny-skia-path",
    "name": "tiny-skia-path",
    "description": "A tiny-skia Bezier path implementation",
    "license": [""],
    "tags": ["path", "stroke", "dash", "bezier", "graphics"],
    "downloads": 3160764,
    "repositories": ["crates.io"]
  },
  "rust:tiny-xlib": {
    "coordinates": "rust:tiny-xlib",
    "name": "tiny-xlib",
    "description": "A tiny Xlib wrapper for Rust",
    "license": [""],
    "tags": [],
    "downloads": 182340,
    "repositories": ["crates.io"]
  },
  "rust:tinystl": {
    "coordinates": "rust:tinystl",
    "name": "tinystl",
    "description": "A small library to read and write STL mesh files, inspired by MicroSTL.",
    "license": [""],
    "tags": ["mesh", "stl"],
    "downloads": 11759,
    "repositories": ["crates.io"]
  },
  "rust:tinystr": {
    "coordinates": "rust:tinystr",
    "name": "tinystr",
    "description": "A small ASCII-only bounded length string representation.",
    "license": [""],
    "tags": ["no_std", "small", "tiny", "string", "str"],
    "downloads": 4518698,
    "repositories": ["crates.io"]
  },
  "rust:to_method": {
    "coordinates": "rust:to_method",
    "name": "to_method",
    "description": "A utility micro-crate for using Into more ergonomically.",
    "license": [""],
    "tags": [],
    "downloads": 629035,
    "repositories": ["crates.io"]
  },
  "rust:tobj": {
    "coordinates": "rust:tobj",
    "name": "tobj",
    "description": "A lightweight OBJ loader in the spirit of tinyobjloader",
    "license": [""],
    "tags": ["3d", "wavefront", "obj", "graphics", "parser"],
    "downloads": 411825,
    "repositories": ["crates.io"]
  },
  "rust:tokei": {
    "coordinates": "rust:tokei",
    "name": "tokei",
    "description": "Count your code, quickly.",
    "license": [""],
    "tags": ["lines", "statistics", "cloc", "cli", "utility"],
    "downloads": 595751,
    "repositories": ["crates.io"]
  },
  "rust:tokei-fuzz": { "name": "tokei-fuzz" },
  "rust:tokenizers": {
    "coordinates": "rust:tokenizers",
    "name": "tokenizers",
    "description": "Provides an implementation of today''s most used tokenizers, with a focus on performances and versatility. ",
    "license": [""],
    "tags": ["huggingface", "bpe", "wordpiece", "tokenizer", "nlp"],
    "downloads": 666677,
    "repositories": ["crates.io"]
  },
  "rust:tokio-postgres": {
    "coordinates": "rust:tokio-postgres",
    "name": "tokio-postgres",
    "description": "A native, asynchronous PostgreSQL client",
    "license": [""],
    "tags": ["postgresql", "postgres", "sql", "database", "async"],
    "downloads": 9200410,
    "repositories": ["crates.io"]
  },
  "rust:tokio-retry": {
    "coordinates": "rust:tokio-retry",
    "name": "tokio-retry",
    "description": "Extensible, asynchronous retry behaviours for futures/tokio",
    "license": [""],
    "tags": ["backoff", "futures", "exponential", "tokio", "retry"],
    "downloads": 8481638,
    "repositories": ["crates.io"]
  },
  "rust:tokio-serde": {
    "coordinates": "rust:tokio-serde",
    "name": "tokio-serde",
    "description": "Send and receive Serde encodable types over the network using Tokio.  This library is used as a building block for serialization format specific libraries. ",
    "license": [""],
    "tags": ["serialization", "async", "serde"],
    "downloads": 5129083,
    "repositories": ["crates.io"]
  },
  "rust:tokio-socks": {
    "coordinates": "rust:tokio-socks",
    "name": "tokio-socks",
    "description": "Asynchronous SOCKS proxy support for Rust.",
    "license": [""],
    "tags": ["tokio", "socks5", "proxy", "socks", "async"],
    "downloads": 4821381,
    "repositories": ["crates.io"]
  },
  "rust:tokio-websockets": {
    "coordinates": "rust:tokio-websockets",
    "name": "tokio-websockets",
    "description": "High performance, strict, tokio-util based WebSockets implementation",
    "license": [""],
    "tags": [],
    "downloads": 23664,
    "repositories": ["crates.io"]
  },
  "rust:topological-sort": {
    "coordinates": "rust:topological-sort",
    "name": "topological-sort",
    "description": "Performs topological sorting.",
    "license": [""],
    "tags": [],
    "downloads": 4111870,
    "repositories": ["crates.io"]
  },
  "rust:tracing-actix-web": {
    "coordinates": "rust:tracing-actix-web",
    "name": "tracing-actix-web",
    "description": "Structured logging middleware for actix-web.",
    "license": [""],
    "tags": ["actix-web", "tracing", "http", "logging"],
    "downloads": 2324107,
    "repositories": ["crates.io"]
  },
  "rust:tracing-fluent-assertions": {
    "coordinates": "rust:tracing-fluent-assertions",
    "name": "tracing-fluent-assertions",
    "description": "An fluent assertions framework for tracing.",
    "license": [""],
    "tags": ["tracing", "fluent-assertions", "testing", "async"],
    "downloads": 178874,
    "repositories": ["crates.io"]
  },
  "rust:tracing-journald": {
    "coordinates": "rust:tracing-journald",
    "name": "tracing-journald",
    "description": "rich journald subscriber for `tracing`",
    "license": [""],
    "tags": ["tracing", "journald"],
    "downloads": 838549,
    "repositories": ["crates.io"]
  },
  "rust:tracing-logfmt": {
    "coordinates": "rust:tracing-logfmt",
    "name": "tracing-logfmt",
    "description": "A logfmt formatter for tracing events and spans",
    "license": [""],
    "tags": ["tracing", "logging"],
    "downloads": 192652,
    "repositories": ["crates.io"]
  },
  "rust:tracing-mock": { "name": "tracing-mock" },
  "rust:tracing-trace": { "name": "tracing-trace" },
  "rust:tracing-wasm": {
    "coordinates": "rust:tracing-wasm",
    "name": "tracing-wasm",
    "description": "tracing subscriber for browser WASM",
    "license": [""],
    "tags": ["spans", "metrics", "tracing", "logging", "wasm"],
    "downloads": 1136703,
    "repositories": ["crates.io"]
  },
  "rust:tree-sitter": {
    "coordinates": "rust:tree-sitter",
    "name": "tree-sitter",
    "description": "Rust bindings to the Tree-sitter parsing library",
    "license": [""],
    "tags": ["incremental", "parsing"],
    "downloads": 3411799,
    "repositories": ["crates.io"]
  },
  "rust:tree-sitter-commonlisp": {
    "coordinates": "rust:tree-sitter-commonlisp",
    "name": "tree-sitter-commonlisp",
    "description": "Common Lisp grammar for the tree-sitter parsing library",
    "license": [""],
    "tags": ["lisp", "parsing", "incremental"],
    "downloads": 1781,
    "repositories": ["crates.io"]
  },
  "rust:tree-sitter-gleam": { "name": "tree-sitter-gleam" },
  "rust:tree-sitter-haskell": {
    "coordinates": "rust:tree-sitter-haskell",
    "name": "tree-sitter-haskell",
    "description": "haskell grammar for the tree-sitter parsing library",
    "license": [""],
    "tags": ["haskell", "parsing", "incremental"],
    "downloads": 521,
    "repositories": ["crates.io"]
  },
  "rust:tree-sitter-php": {
    "coordinates": "rust:tree-sitter-php",
    "name": "tree-sitter-php",
    "description": "PHP grammar for tree-sitter",
    "license": [""],
    "tags": ["php", "parsing", "incremental"],
    "downloads": 26473,
    "repositories": ["crates.io"]
  },
  "rust:tree-sitter-r": {
    "coordinates": "rust:tree-sitter-r",
    "name": "tree-sitter-r",
    "description": "R grammar for the tree-sitter parsing library",
    "license": [""],
    "tags": ["r", "incremental", "parsing"],
    "downloads": 26671,
    "repositories": ["crates.io"]
  },
  "rust:tree-sitter-sql": {
    "coordinates": "rust:tree-sitter-sql",
    "name": "tree-sitter-sql",
    "description": "SQL grammar for the tree-sitter parsing library",
    "license": [""],
    "tags": ["parsing", "incremental", "sql"],
    "downloads": 938,
    "repositories": ["crates.io"]
  },
  "rust:tree_magic_mini": {
    "coordinates": "rust:tree_magic_mini",
    "name": "tree_magic_mini",
    "description": "Determines the MIME type of a file by traversing a filetype tree.",
    "license": [""],
    "tags": ["mime", "media-types", "filesystem"],
    "downloads": 704344,
    "repositories": ["crates.io"]
  },
  "rust:treediff": {
    "coordinates": "rust:treediff",
    "name": "treediff",
    "description": "Find the difference between arbitrary data structures",
    "license": [""],
    "tags": ["arbitrary", "general", "diff", "structure", "tree"],
    "downloads": 7799014,
    "repositories": ["crates.io"]
  },
  "rust:trees": {
    "coordinates": "rust:trees",
    "name": "trees",
    "description": "General purpose tree data structures",
    "license": [""],
    "tags": ["dfs", "bfs", "forest", "tree", "node"],
    "downloads": 938131,
    "repositories": ["crates.io"]
  },
  "rust:trie-db": {
    "coordinates": "rust:trie-db",
    "name": "trie-db",
    "description": "Merkle-Patricia Trie generic over key hasher and node encoding",
    "license": [""],
    "tags": [],
    "downloads": 4427857,
    "repositories": ["crates.io"]
  },
  "rust:trie-root": {
    "coordinates": "rust:trie-root",
    "name": "trie-root",
    "description": "In-memory patricia trie operations",
    "license": [""],
    "tags": [],
    "downloads": 4083178,
    "repositories": ["crates.io"]
  },
  "rust:triehash": {
    "coordinates": "rust:triehash",
    "name": "triehash",
    "description": "In-memory patricia trie operations",
    "license": [""],
    "tags": [],
    "downloads": 1455370,
    "repositories": ["crates.io"]
  },
  "rust:trust-dns-client": {
    "coordinates": "rust:trust-dns-client",
    "name": "trust-dns-client",
    "description": "Trust-DNS is a safe and secure DNS library. This is the Client library with DNSSEC support.  DNSSEC with NSEC validation for negative records, is complete. The client supports  dynamic DNS with SIG0 authenticated requests, implementing easy to use high level  funtions. Trust-DNS is based on the Tokio and Futures libraries, which means  it should be easily integrated into other software that also use those  libraries. ",
    "license": [""],
    "tags": ["named", "dns", "dnssec", "bind", "dig"],
    "downloads": 1323761,
    "repositories": ["crates.io"]
  },
  "rust:try-runtime-cli": {
    "coordinates": "rust:try-runtime-cli",
    "name": "try-runtime-cli",
    "description": "Cli command runtime testing and dry-running (polkadot v1.10.0)",
    "license": [""],
    "tags": [],
    "downloads": 20434,
    "repositories": ["crates.io"]
  },
  "rust:try_from": {
    "coordinates": "rust:try_from",
    "name": "try_from",
    "description": "TryFrom and TryInto traits for failable conversions that return a Result.",
    "license": [""],
    "tags": [],
    "downloads": 6761758,
    "repositories": ["crates.io"]
  },
  "rust:tryhard": {
    "coordinates": "rust:tryhard",
    "name": "tryhard",
    "description": "Easily retry futures",
    "license": [""],
    "tags": ["tokio", "retry", "futures"],
    "downloads": 536172,
    "repositories": ["crates.io"]
  },
  "rust:tt-call": {
    "coordinates": "rust:tt-call",
    "name": "tt-call",
    "description": "Token tree calling convention",
    "license": [""],
    "tags": [],
    "downloads": 2653298,
    "repositories": ["crates.io"]
  },
  "rust:ttl_cache": {
    "coordinates": "rust:ttl_cache",
    "name": "ttl_cache",
    "description": "A cache that will expire values after a TTL",
    "license": [""],
    "tags": ["expire", "ttl", "cache"],
    "downloads": 1636282,
    "repositories": ["crates.io"]
  },
  "rust:type-map": {
    "coordinates": "rust:type-map",
    "name": "type-map",
    "description": "Provides a typemap container with FxHashMap",
    "license": [""],
    "tags": ["typemap", "extensions", "hashmap"],
    "downloads": 2872112,
    "repositories": ["crates.io"]
  },
  "rust:typed-builder-macro": {
    "coordinates": "rust:typed-builder-macro",
    "name": "typed-builder-macro",
    "description": "Compile-time type-checked builder derive",
    "license": [""],
    "tags": ["builder"],
    "downloads": 2158846,
    "repositories": ["crates.io"]
  },
  "rust:typetag": {
    "coordinates": "rust:typetag",
    "name": "typetag",
    "description": "Serde serializable and deserializable trait objects",
    "license": [""],
    "tags": ["serde", "serialization"],
    "downloads": 4790440,
    "repositories": ["crates.io"]
  },
  "rust:typetag-impl": {
    "coordinates": "rust:typetag-impl",
    "name": "typetag-impl",
    "description": "Implementation detail of the typetag crate",
    "license": [""],
    "tags": [],
    "downloads": 4787016,
    "repositories": ["crates.io"]
  },
  "rust:uaparser": {
    "coordinates": "rust:uaparser",
    "name": "uaparser",
    "description": "A Rust implementation of the UA Parser",
    "license": [""],
    "tags": ["uaparser", "user", "uap", "agent", "parser"],
    "downloads": 710497,
    "repositories": ["crates.io"]
  },
  "rust:ubyte": {
    "coordinates": "rust:ubyte",
    "name": "ubyte",
    "description": "A simple, complete, const-everything, saturating, human-friendly, no_std library for byte units. ",
    "license": [""],
    "tags": ["human", "conversion", "units", "integer", "byte"],
    "downloads": 3278113,
    "repositories": ["crates.io"]
  },
  "rust:uds_windows": {
    "coordinates": "rust:uds_windows",
    "name": "uds_windows",
    "description": "Unix Domain Sockets for Windows!",
    "license": [""],
    "tags": ["sockets", "domain", "uds", "unix", "windows"],
    "downloads": 3125149,
    "repositories": ["crates.io"]
  },
  "rust:ulid": {
    "coordinates": "rust:ulid",
    "name": "ulid",
    "description": "a Universally Unique Lexicographically Sortable Identifier implementation",
    "license": [""],
    "tags": ["uuid", "ulid", "sortable", "identifier"],
    "downloads": 2166436,
    "repositories": ["crates.io"]
  },
  "rust:unarray": {
    "coordinates": "rust:unarray",
    "name": "unarray",
    "description": "Utilities for working with uninitialized arrays",
    "license": [""],
    "tags": [],
    "downloads": 8908198,
    "repositories": ["crates.io"]
  },
  "rust:unescaper": {
    "coordinates": "rust:unescaper",
    "name": "unescaper",
    "description": "Unescape strings with escape sequences written out as literal characters.",
    "license": [""],
    "tags": ["escape", "unescape", "string"],
    "downloads": 647487,
    "repositories": ["crates.io"]
  },
  "rust:unic-bidi": {
    "coordinates": "rust:unic-bidi",
    "name": "unic-bidi",
    "description": "UNIC — Unicode Bidirectional Algorithm",
    "license": [""],
    "tags": ["rtl", "layout", "bidi", "text", "unicode"],
    "downloads": 272574,
    "repositories": ["crates.io"]
  },
  "rust:unic-segment": {
    "coordinates": "rust:unic-segment",
    "name": "unic-segment",
    "description": "UNIC — Unicode Text Segmentation Algorithms",
    "license": [""],
    "tags": ["grapheme", "boundary", "word", "text", "unicode"],
    "downloads": 8234030,
    "repositories": ["crates.io"]
  },
  "rust:unic-ucd-bidi": {
    "coordinates": "rust:unic-ucd-bidi",
    "name": "unic-ucd-bidi",
    "description": "UNIC — Unicode Character Database — Bidi Properties",
    "license": [""],
    "tags": ["character-property", "rtl", "bidi", "text", "unicode"],
    "downloads": 445447,
    "repositories": ["crates.io"]
  },
  "rust:unic-ucd-segment": {
    "coordinates": "rust:unic-ucd-segment",
    "name": "unic-ucd-segment",
    "description": "UNIC — Unicode Character Database — Segmentation Properties",
    "license": [""],
    "tags": [
      "character-property",
      "segmentation",
      "grapheme",
      "text",
      "unicode"
    ],
    "downloads": 8283434,
    "repositories": ["crates.io"]
  },
  "rust:unicode-bidi-mirroring": {
    "coordinates": "rust:unicode-bidi-mirroring",
    "name": "unicode-bidi-mirroring",
    "description": "Unicode Bidi Mirroring property detection",
    "license": [""],
    "tags": ["unicode"],
    "downloads": 1319033,
    "repositories": ["crates.io"]
  },
  "rust:unicode-bom": {
    "coordinates": "rust:unicode-bom",
    "name": "unicode-bom",
    "description": "Unicode byte-order mark detection for files and byte arrays.",
    "license": [""],
    "tags": ["unicode", "utf", "order", "bom", "byte"],
    "downloads": 5446439,
    "repositories": ["crates.io"]
  },
  "rust:unicode-ccc": {
    "coordinates": "rust:unicode-ccc",
    "name": "unicode-ccc",
    "description": "Unicode Canonical Combining Class detection",
    "license": [""],
    "tags": ["unicode"],
    "downloads": 1343798,
    "repositories": ["crates.io"]
  },
  "rust:unicode-general-category": {
    "coordinates": "rust:unicode-general-category",
    "name": "unicode-general-category",
    "description": "Fast lookup of the Unicode General Category property for char",
    "license": [""],
    "tags": ["no-std", "category", "general", "unicode"],
    "downloads": 1637007,
    "repositories": ["crates.io"]
  },
  "rust:unicode-normalization-alignments": {
    "coordinates": "rust:unicode-normalization-alignments",
    "name": "unicode-normalization-alignments",
    "description": "This crate provides functions for normalization of Unicode strings, including Canonical and Compatible Decomposition and Recomposition, as described in Unicode Standard Annex #15. ",
    "license": [""],
    "tags": [
      "decomposition",
      "normalization",
      "recomposition",
      "unicode",
      "text"
    ],
    "downloads": 1509107,
    "repositories": ["crates.io"]
  },
  "rust:unicode-properties": {
    "coordinates": "rust:unicode-properties",
    "name": "unicode-properties",
    "description": "Query character Unicode properties according to UAX #44 and UTR #51. ",
    "license": [""],
    "tags": ["text", "unicode"],
    "downloads": 870735,
    "repositories": ["crates.io"]
  },
  "rust:unicode-reverse": {
    "coordinates": "rust:unicode-reverse",
    "name": "unicode-reverse",
    "description": "Unicode-aware in-place string reversal",
    "license": [""],
    "tags": ["graphemes", "reverse", "unicode", "string", "no_std"],
    "downloads": 100987,
    "repositories": ["crates.io"]
  },
  "rust:unicode-script": {
    "coordinates": "rust:unicode-script",
    "name": "unicode-script",
    "description": "This crate exposes the Unicode `Script` and `Script_Extension` properties from [UAX #24](http://www.unicode.org/reports/tr24/) ",
    "license": [""],
    "tags": ["text", "script", "unicode", "language"],
    "downloads": 3806520,
    "repositories": ["crates.io"]
  },
  "rust:unicode-vo": {
    "coordinates": "rust:unicode-vo",
    "name": "unicode-vo",
    "description": "Unicode vertical orientation detection",
    "license": [""],
    "tags": ["unicode"],
    "downloads": 1107856,
    "repositories": ["crates.io"]
  },
  "rust:unidecode": {
    "coordinates": "rust:unidecode",
    "name": "unidecode",
    "description": "Provides pure ASCII transliterations of Unicode strings.",
    "license": [""],
    "tags": ["unidecoder", "transliteration", "unidecode", "unicode", "ascii"],
    "downloads": 1845518,
    "repositories": ["crates.io"]
  },
  "rust:update-informer": {
    "coordinates": "rust:update-informer",
    "name": "update-informer",
    "description": "Update informer for CLI applications",
    "license": [""],
    "tags": ["informer", "github", "update", "notifier", "cli"],
    "downloads": 456263,
    "repositories": ["crates.io"]
  },
  "rust:uriparse": {
    "coordinates": "rust:uriparse",
    "name": "uriparse",
    "description": "A URI parser including relative references",
    "license": [""],
    "tags": [],
    "downloads": 2937862,
    "repositories": ["crates.io"]
  },
  "rust:urlparse": {
    "coordinates": "rust:urlparse",
    "name": "urlparse",
    "description": "This is a URL parsing library like urllib.parse in Python3.x.",
    "license": [""],
    "tags": ["urllib", "url", "urlparse", "uri"],
    "downloads": 643774,
    "repositories": ["crates.io"]
  },
  "rust:usb-device": {
    "coordinates": "rust:usb-device",
    "name": "usb-device",
    "description": "USB stack for embedded devices.",
    "license": [""],
    "tags": ["usb", "embedded", "no-std"],
    "downloads": 819699,
    "repositories": ["crates.io"]
  },
  "rust:user-facing-error-macros": { "name": "user-facing-error-macros" },
  "rust:user-facing-errors": { "name": "user-facing-errors" },
  "rust:username": {
    "coordinates": "rust:username",
    "name": "username",
    "description": "Portably retrieve the user name (and possibly other information in future versions) of the user running the current thread.",
    "license": [""],
    "tags": [],
    "downloads": 192333,
    "repositories": ["crates.io"]
  },
  "rust:usvg": {
    "coordinates": "rust:usvg",
    "name": "usvg",
    "description": "An SVG simplification library.",
    "license": [""],
    "tags": ["svg"],
    "downloads": 1639484,
    "repositories": ["crates.io"]
  },
  "rust:utf16_iter": {
    "coordinates": "rust:utf16_iter",
    "name": "utf16_iter",
    "description": "Iterator by char over potentially-invalid UTF-16 in &[u16]",
    "license": [""],
    "tags": ["unicode", "utf-16", "encoding", "iterator"],
    "downloads": 728143,
    "repositories": ["crates.io"]
  },
  "rust:utf8_iter": {
    "coordinates": "rust:utf8_iter",
    "name": "utf8_iter",
    "description": "Iterator by char over potentially-invalid UTF-8 in &[u8]",
    "license": [""],
    "tags": ["unicode", "encoding", "iterator", "utf-8"],
    "downloads": 796900,
    "repositories": ["crates.io"]
  },
  "rust:utoipa": {
    "coordinates": "rust:utoipa",
    "name": "utoipa",
    "description": "Compile time generated OpenAPI documentation for Rust",
    "license": [""],
    "tags": [
      "auto-generate",
      "rest-api",
      "compile-time",
      "openapi",
      "documentation"
    ],
    "downloads": 2087548,
    "repositories": ["crates.io"]
  },
  "rust:utoipa-gen": {
    "coordinates": "rust:utoipa-gen",
    "name": "utoipa-gen",
    "description": "Code generation implementation for utoipa",
    "license": [""],
    "tags": [
      "compile-time",
      "openapi",
      "documentation",
      "proc-macro",
      "codegen"
    ],
    "downloads": 2088823,
    "repositories": ["crates.io"]
  },
  "rust:utoipa-swagger-ui": {
    "coordinates": "rust:utoipa-swagger-ui",
    "name": "utoipa-swagger-ui",
    "description": "Swagger UI for utoipa",
    "license": [""],
    "tags": ["openapi", "swagger-ui", "documentation"],
    "downloads": 1465171,
    "repositories": ["crates.io"]
  },
  "rust:uuid-macro-internal": {
    "coordinates": "rust:uuid-macro-internal",
    "name": "uuid-macro-internal",
    "description": "Private implementation details of the uuid! macro.",
    "license": [""],
    "tags": [],
    "downloads": 2980585,
    "repositories": ["crates.io"]
  },
  "rust:v_frame": {
    "coordinates": "rust:v_frame",
    "name": "v_frame",
    "description": "Video Frame data structures, originally part of rav1e",
    "license": [""],
    "tags": [],
    "downloads": 770194,
    "repositories": ["crates.io"]
  },
  "rust:validator": {
    "coordinates": "rust:validator",
    "name": "validator",
    "description": "Common validation functions (email, url, length, ...) and trait - to be used with `validator_derive`",
    "license": [""],
    "tags": ["validation", "validator", "api"],
    "downloads": 7536017,
    "repositories": ["crates.io"]
  },
  "rust:validator_derive": {
    "coordinates": "rust:validator_derive",
    "name": "validator_derive",
    "description": "Macros 1.1 implementation of #[derive(Validate)]",
    "license": [""],
    "tags": ["validation", "validator", "api"],
    "downloads": 6184157,
    "repositories": ["crates.io"]
  },
  "rust:validator_types": {
    "coordinates": "rust:validator_types",
    "name": "validator_types",
    "description": "Basic type for validator and validator_derive",
    "license": [""],
    "tags": ["validator", "validation", "api"],
    "downloads": 6013926,
    "repositories": ["crates.io"]
  },
  "rust:value-trait": {
    "coordinates": "rust:value-trait",
    "name": "value-trait",
    "description": "Traits to deal with JSONesque values",
    "license": [""],
    "tags": [],
    "downloads": 1328916,
    "repositories": ["crates.io"]
  },
  "rust:vaultrs": {
    "coordinates": "rust:vaultrs",
    "name": "vaultrs",
    "description": "An asynchronous Rust client library for the Hashicorp Vault API.",
    "license": [""],
    "tags": ["vault", "client", "hashicorp", "api"],
    "downloads": 473984,
    "repositories": ["crates.io"]
  },
  "rust:vcell": {
    "coordinates": "rust:vcell",
    "name": "vcell",
    "description": "`Cell` with volatile read / write operations",
    "license": [""],
    "tags": ["volatile", "no-std", "cell"],
    "downloads": 4022606,
    "repositories": ["crates.io"]
  },
  "rust:vec1": {
    "coordinates": "rust:vec1",
    "name": "vec1",
    "description": "a std Vec wrapper assuring that it has at least 1 element",
    "license": [""],
    "tags": ["1", "min", "length", "vec"],
    "downloads": 1396157,
    "repositories": ["crates.io"]
  },
  "rust:vergen-git2": {
    "coordinates": "rust:vergen-git2",
    "name": "vergen-git2",
    "description": "Generate ''cargo:rustc-env'' instructions via ''build.rs'' for use in your code via the ''env!'' macro",
    "license": [""],
    "tags": ["cargo", "instructions", "build", "tool"],
    "downloads": 7625,
    "repositories": ["crates.io"]
  },
  "rust:vergen-lib": {
    "coordinates": "rust:vergen-lib",
    "name": "vergen-lib",
    "description": "Common code used to support the vergen libraries",
    "license": [""],
    "tags": ["cargo", "instructions", "build", "tool"],
    "downloads": 12737,
    "repositories": ["crates.io"]
  },
  "rust:vlq": {
    "coordinates": "rust:vlq",
    "name": "vlq",
    "description": "Sourcemap-style VLQ encoder and decoder",
    "license": [""],
    "tags": ["vlq", "sourcemap"],
    "downloads": 304675,
    "repositories": ["crates.io"]
  },
  "rust:vob": {
    "coordinates": "rust:vob",
    "name": "vob",
    "description": "Vector of Bits with Vec-like API and usize backing storage",
    "license": [""],
    "tags": [],
    "downloads": 112467,
    "repositories": ["crates.io"]
  },
  "rust:volatile-register": {
    "coordinates": "rust:volatile-register",
    "name": "volatile-register",
    "description": "Volatile access to memory mapped hardware registers",
    "license": [""],
    "tags": ["no-std", "volatile", "register"],
    "downloads": 3710299,
    "repositories": ["crates.io"]
  },
  "rust:vrl": {
    "coordinates": "rust:vrl",
    "name": "vrl",
    "description": "Vector Remap Language",
    "license": [""],
    "tags": ["vector", "compiler", "datadog"],
    "downloads": 122670,
    "repositories": ["crates.io"]
  },
  "rust:vsimd": {
    "coordinates": "rust:vsimd",
    "name": "vsimd",
    "description": "SIMD utilities",
    "license": [""],
    "tags": ["simd"],
    "downloads": 7618842,
    "repositories": ["crates.io"]
  },
  "rust:w3f-bls": {
    "coordinates": "rust:w3f-bls",
    "name": "w3f-bls",
    "description": "Aggregate BLS-like signatures",
    "license": [""],
    "tags": [],
    "downloads": 982165,
    "repositories": ["crates.io"]
  },
  "rust:walrus": {
    "coordinates": "rust:walrus",
    "name": "walrus",
    "description": "A library for performing WebAssembly transformations ",
    "license": [""],
    "tags": [],
    "downloads": 4233219,
    "repositories": ["crates.io"]
  },
  "rust:walrus-macro": {
    "coordinates": "rust:walrus-macro",
    "name": "walrus-macro",
    "description": "Internal macros used by the `walrus` crate, not for public consumption. ",
    "license": [""],
    "tags": [],
    "downloads": 4242560,
    "repositories": ["crates.io"]
  },
  "rust:wana_kana": {
    "coordinates": "rust:wana_kana",
    "name": "wana_kana",
    "description": "Utility library for checking and converting between Japanese characters - Kanji, Hiragana, Katakana - and Romaji ",
    "license": [""],
    "tags": ["romaji", "kana", "katakana", "hiragana", "japanese"],
    "downloads": 72640,
    "repositories": ["crates.io"]
  },
  "rust:wasite": {
    "coordinates": "rust:wasite",
    "name": "wasite",
    "description": "WASI Terminal Environment API",
    "license": [""],
    "tags": ["env", "interactive", "terminal", "wasi", "extension"],
    "downloads": 544440,
    "repositories": ["crates.io"]
  },
  "rust:wasix": {
    "coordinates": "rust:wasix",
    "name": "wasix",
    "description": "WASIX API bindings for Rust",
    "license": [""],
    "tags": ["wasm", "webassembly"],
    "downloads": 114020,
    "repositories": ["crates.io"]
  },
  "rust:wasm-bindgen-cli-support": {
    "coordinates": "rust:wasm-bindgen-cli-support",
    "name": "wasm-bindgen-cli-support",
    "description": "Shared support for the wasm-bindgen-cli package, an internal dependency ",
    "license": [""],
    "tags": [],
    "downloads": 3333616,
    "repositories": ["crates.io"]
  },
  "rust:wasm-bindgen-externref-xform": {
    "coordinates": "rust:wasm-bindgen-externref-xform",
    "name": "wasm-bindgen-externref-xform",
    "description": "Internal externref transformations for wasm-bindgen ",
    "license": [""],
    "tags": [],
    "downloads": 3164788,
    "repositories": ["crates.io"]
  },
  "rust:wasm-bindgen-multi-value-xform": {
    "coordinates": "rust:wasm-bindgen-multi-value-xform",
    "name": "wasm-bindgen-multi-value-xform",
    "description": "Internal multi-value transformations for wasm-bindgen ",
    "license": [""],
    "tags": [],
    "downloads": 3213592,
    "repositories": ["crates.io"]
  },
  "rust:wasm-bindgen-test": {
    "coordinates": "rust:wasm-bindgen-test",
    "name": "wasm-bindgen-test",
    "description": "Internal testing crate for wasm-bindgen",
    "license": [""],
    "tags": [],
    "downloads": 9326616,
    "repositories": ["crates.io"]
  },
  "rust:wasm-bindgen-test-macro": {
    "coordinates": "rust:wasm-bindgen-test-macro",
    "name": "wasm-bindgen-test-macro",
    "description": "Internal testing macro for wasm-bindgen",
    "license": [""],
    "tags": [],
    "downloads": 9192238,
    "repositories": ["crates.io"]
  },
  "rust:wasm-bindgen-threads-xform": {
    "coordinates": "rust:wasm-bindgen-threads-xform",
    "name": "wasm-bindgen-threads-xform",
    "description": "Support for threading-related transformations in wasm-bindgen ",
    "license": [""],
    "tags": [],
    "downloads": 3288859,
    "repositories": ["crates.io"]
  },
  "rust:wasm-bindgen-wasm-conventions": {
    "coordinates": "rust:wasm-bindgen-wasm-conventions",
    "name": "wasm-bindgen-wasm-conventions",
    "description": "Utilities for working with Wasm codegen conventions (usually established by LLVM/lld)",
    "license": [""],
    "tags": [],
    "downloads": 3228549,
    "repositories": ["crates.io"]
  },
  "rust:wasm-bindgen-wasm-interpreter": {
    "coordinates": "rust:wasm-bindgen-wasm-interpreter",
    "name": "wasm-bindgen-wasm-interpreter",
    "description": "Micro-interpreter optimized for wasm-bindgen''s use case ",
    "license": [""],
    "tags": [],
    "downloads": 3289721,
    "repositories": ["crates.io"]
  },
  "rust:wasm-encoder": {
    "coordinates": "rust:wasm-encoder",
    "name": "wasm-encoder",
    "description": "A low-level WebAssembly encoder. ",
    "license": [""],
    "tags": [],
    "downloads": 8067360,
    "repositories": ["crates.io"]
  },
  "rust:wasm-instrument": {
    "coordinates": "rust:wasm-instrument",
    "name": "wasm-instrument",
    "description": "Instrument and transform wasm modules.",
    "license": [""],
    "tags": ["parity", "wasm", "gas-metering", "blockchain", "webassembly"],
    "downloads": 3133382,
    "repositories": ["crates.io"]
  },
  "rust:wasm-logger": {
    "coordinates": "rust:wasm-logger",
    "name": "wasm-logger",
    "description": "A logger that sends a message with its Rust source''s line and filename to the browser console",
    "license": [""],
    "tags": ["log", "front-end", "console", "logger", "wasm"],
    "downloads": 995600,
    "repositories": ["crates.io"]
  },
  "rust:wasm-opt": {
    "coordinates": "rust:wasm-opt",
    "name": "wasm-opt",
    "description": "wasm-opt bindings",
    "license": [""],
    "tags": [],
    "downloads": 1948612,
    "repositories": ["crates.io"]
  },
  "rust:wasm-opt-cxx-sys": {
    "coordinates": "rust:wasm-opt-cxx-sys",
    "name": "wasm-opt-cxx-sys",
    "description": "wasm-opt bindings via cxx",
    "license": [""],
    "tags": [],
    "downloads": 1918842,
    "repositories": ["crates.io"]
  },
  "rust:wasm-opt-sys": {
    "coordinates": "rust:wasm-opt-sys",
    "name": "wasm-opt-sys",
    "description": "Native wasm-opt build",
    "license": [""],
    "tags": [],
    "downloads": 1935695,
    "repositories": ["crates.io"]
  },
  "rust:wasm-streams": {
    "coordinates": "rust:wasm-streams",
    "name": "wasm-streams",
    "description": "Bridging between web streams and Rust streams using WebAssembly ",
    "license": [""],
    "tags": [],
    "downloads": 7035308,
    "repositories": ["crates.io"]
  },
  "rust:wasm-timer": {
    "coordinates": "rust:wasm-timer",
    "name": "wasm-timer",
    "description": "Abstraction over std::time::Instant and futures-timer that works on WASM",
    "license": [""],
    "tags": [],
    "downloads": 8138674,
    "repositories": ["crates.io"]
  },
  "rust:wasmi": {
    "coordinates": "rust:wasmi",
    "name": "wasmi",
    "description": "WebAssembly interpreter",
    "license": [""],
    "tags": ["interpreter", "webassembly", "vm", "wasm"],
    "downloads": 4909964,
    "repositories": ["crates.io"]
  },
  "rust:wasmi_arena": {
    "coordinates": "rust:wasmi_arena",
    "name": "wasmi_arena",
    "description": "Entity arena data structures for wasmi",
    "license": [""],
    "tags": ["interpreter", "webassembly", "vm", "wasm"],
    "downloads": 1507178,
    "repositories": ["crates.io"]
  },
  "rust:wasmi_core": {
    "coordinates": "rust:wasmi_core",
    "name": "wasmi_core",
    "description": "Core primitives for the wasmi WebAssembly interpreter",
    "license": [""],
    "tags": ["interpreter", "webassembly", "vm", "wasm"],
    "downloads": 2429339,
    "repositories": ["crates.io"]
  },
  "rust:wasmparser-nostd": {
    "coordinates": "rust:wasmparser-nostd",
    "name": "wasmparser-nostd",
    "description": "A simple event-driven library for parsing WebAssembly binary files. ",
    "license": [""],
    "tags": ["webassembly", "wasm", "parser"],
    "downloads": 1805192,
    "repositories": ["crates.io"]
  },
  "rust:wasmtime": {
    "coordinates": "rust:wasmtime",
    "name": "wasmtime",
    "description": "High-level API to expose the Wasmtime runtime",
    "license": [""],
    "tags": [],
    "downloads": 6840922,
    "repositories": ["crates.io"]
  },
  "rust:wasmtime-asm-macros": {
    "coordinates": "rust:wasmtime-asm-macros",
    "name": "wasmtime-asm-macros",
    "description": "Macros for defining asm functions in Wasmtime",
    "license": [""],
    "tags": [],
    "downloads": 4285951,
    "repositories": ["crates.io"]
  },
  "rust:wasmtime-cache": {
    "coordinates": "rust:wasmtime-cache",
    "name": "wasmtime-cache",
    "description": "Support for automatic module caching with Wasmtime",
    "license": [""],
    "tags": [],
    "downloads": 4512177,
    "repositories": ["crates.io"]
  },
  "rust:wasmtime-cranelift": {
    "coordinates": "rust:wasmtime-cranelift",
    "name": "wasmtime-cranelift",
    "description": "Integration between Cranelift and Wasmtime",
    "license": [""],
    "tags": ["webassembly", "wasm"],
    "downloads": 6207491,
    "repositories": ["crates.io"]
  },
  "rust:wasmtime-cranelift-shared": {
    "coordinates": "rust:wasmtime-cranelift-shared",
    "name": "wasmtime-cranelift-shared",
    "description": "Base-level integration with Wasmtime and Cranelift",
    "license": [""],
    "tags": [],
    "downloads": 2470264,
    "repositories": ["crates.io"]
  },
  "rust:wasmtime-environ": {
    "coordinates": "rust:wasmtime-environ",
    "name": "wasmtime-environ",
    "description": "Standalone environment support for WebAsssembly code in Cranelift",
    "license": [""],
    "tags": ["webassembly", "wasm"],
    "downloads": 6967747,
    "repositories": ["crates.io"]
  },
  "rust:wasmtime-jit": {
    "coordinates": "rust:wasmtime-jit",
    "name": "wasmtime-jit",
    "description": "JIT-style execution for WebAsssembly code in Cranelift",
    "license": [""],
    "tags": ["webassembly", "wasm"],
    "downloads": 6715757,
    "repositories": ["crates.io"]
  },
  "rust:wasmtime-jit-debug": {
    "coordinates": "rust:wasmtime-jit-debug",
    "name": "wasmtime-jit-debug",
    "description": "JIT debug interfaces support for Wasmtime",
    "license": [""],
    "tags": ["gdb", "jit"],
    "downloads": 4943410,
    "repositories": ["crates.io"]
  },
  "rust:wasmtime-jit-icache-coherence": {
    "coordinates": "rust:wasmtime-jit-icache-coherence",
    "name": "wasmtime-jit-icache-coherence",
    "description": "Utilities for JIT icache maintenance",
    "license": [""],
    "tags": [],
    "downloads": 3737398,
    "repositories": ["crates.io"]
  },
  "rust:wasmtime-runtime": {
    "coordinates": "rust:wasmtime-runtime",
    "name": "wasmtime-runtime",
    "description": "Runtime library support for Wasmtime",
    "license": [""],
    "tags": ["webassembly", "wasm"],
    "downloads": 6888268,
    "repositories": ["crates.io"]
  },
  "rust:wasmtime-types": {
    "coordinates": "rust:wasmtime-types",
    "name": "wasmtime-types",
    "description": "WebAssembly type definitions for Cranelift",
    "license": [""],
    "tags": [],
    "downloads": 5649676,
    "repositories": ["crates.io"]
  },
  "rust:wayland-backend": {
    "coordinates": "rust:wayland-backend",
    "name": "wayland-backend",
    "description": "Low-level bindings to the Wayland protocol",
    "license": [""],
    "tags": ["wayland"],
    "downloads": 1340639,
    "repositories": ["crates.io"]
  },
  "rust:wayland-client": {
    "coordinates": "rust:wayland-client",
    "name": "wayland-client",
    "description": "Bindings to the standard C implementation of the wayland protocol, client side.",
    "license": [""],
    "tags": ["wayland", "client"],
    "downloads": 8639365,
    "repositories": ["crates.io"]
  },
  "rust:wayland-csd-frame": {
    "coordinates": "rust:wayland-csd-frame",
    "name": "wayland-csd-frame",
    "description": "Common trait and types for wayland CSD interop",
    "license": [""],
    "tags": ["wayland", "windowing"],
    "downloads": 590690,
    "repositories": ["crates.io"]
  },
  "rust:wayland-cursor": {
    "coordinates": "rust:wayland-cursor",
    "name": "wayland-cursor",
    "description": "Bindings to libwayland-cursor.",
    "license": [""],
    "tags": ["wayland", "client"],
    "downloads": 5532033,
    "repositories": ["crates.io"]
  },
  "rust:wayland-protocols": {
    "coordinates": "rust:wayland-protocols",
    "name": "wayland-protocols",
    "description": "Generated API for the officials wayland protocol extensions",
    "license": [""],
    "tags": ["wayland", "extension", "client", "protocol", "server"],
    "downloads": 7935800,
    "repositories": ["crates.io"]
  },
  "rust:wayland-protocols-plasma": {
    "coordinates": "rust:wayland-protocols-plasma",
    "name": "wayland-protocols-plasma",
    "description": "Generated API for the Plasma wayland protocol extensions",
    "license": [""],
    "tags": ["server", "wayland", "protocol", "extension", "client"],
    "downloads": 481674,
    "repositories": ["crates.io"]
  },
  "rust:wayland-protocols-wlr": {
    "coordinates": "rust:wayland-protocols-wlr",
    "name": "wayland-protocols-wlr",
    "description": "Generated API for the WLR wayland protocol extensions",
    "license": [""],
    "tags": ["server", "wayland", "protocol", "extension", "client"],
    "downloads": 1059192,
    "repositories": ["crates.io"]
  },
  "rust:wayland-scanner": {
    "coordinates": "rust:wayland-scanner",
    "name": "wayland-scanner",
    "description": "Wayland Scanner for generating rust APIs from XML wayland protocol files.",
    "license": [""],
    "tags": ["wayland", "codegen"],
    "downloads": 8875091,
    "repositories": ["crates.io"]
  },
  "rust:wayland-sys": {
    "coordinates": "rust:wayland-sys",
    "name": "wayland-sys",
    "description": "FFI bindings to the various libwayland-*.so libraries. You should only need this crate if you are working on custom wayland protocol extensions. Look at the crate wayland-client for usable bindings.",
    "license": [""],
    "tags": [],
    "downloads": 9293258,
    "repositories": ["crates.io"]
  },
  "rust:web-time": {
    "coordinates": "rust:web-time",
    "name": "web-time",
    "description": "Drop-in replacement for std::time for Wasm in browsers",
    "license": [""],
    "tags": ["web", "instant", "systemtime", "wasm", "time"],
    "downloads": 2108529,
    "repositories": ["crates.io"]
  },
  "rust:webbrowser": {
    "coordinates": "rust:webbrowser",
    "name": "webbrowser",
    "description": "Open URLs in web browsers available on a platform",
    "license": [""],
    "tags": ["webbrowser", "browser"],
    "downloads": 4991179,
    "repositories": ["crates.io"]
  },
  "rust:webdriver": {
    "coordinates": "rust:webdriver",
    "name": "webdriver",
    "description": "Library implementing the wire protocol for the W3C WebDriver specification.",
    "license": [""],
    "tags": ["protocol", "browser", "webdriver", "w3c", "automation"],
    "downloads": 1391329,
    "repositories": ["crates.io"]
  },
  "rust:webkit2gtk": {
    "coordinates": "rust:webkit2gtk",
    "name": "webkit2gtk",
    "description": "Rust bindings for webkit-gtk library",
    "license": [""],
    "tags": ["gnome", "webkit", "gui", "gtk-rs"],
    "downloads": 1220071,
    "repositories": ["crates.io"]
  },
  "rust:webkit2gtk-sys": {
    "coordinates": "rust:webkit2gtk-sys",
    "name": "webkit2gtk-sys",
    "description": "Rust binding for webkit-gtk library",
    "license": [""],
    "tags": ["webkit", "gui", "gnome", "gtk-rs"],
    "downloads": 1258443,
    "repositories": ["crates.io"]
  },
  "rust:webview2-com": {
    "coordinates": "rust:webview2-com",
    "name": "webview2-com",
    "description": "Rust bindings for the WebView2 COM APIs",
    "license": [""],
    "tags": ["webview2", "win32"],
    "downloads": 901127,
    "repositories": ["crates.io"]
  },
  "rust:webview2-com-macros": {
    "coordinates": "rust:webview2-com-macros",
    "name": "webview2-com-macros",
    "description": "Macros which generate callback implementations for WebView2 COM APIs",
    "license": [""],
    "tags": ["webview2", "win32"],
    "downloads": 847651,
    "repositories": ["crates.io"]
  },
  "rust:webview2-com-sys": {
    "coordinates": "rust:webview2-com-sys",
    "name": "webview2-com-sys",
    "description": "Bindings generated with the windows crate for the WebView2 COM APIs",
    "license": [""],
    "tags": ["webview2", "win32"],
    "downloads": 928015,
    "repositories": ["crates.io"]
  },
  "rust:wepoll-ffi": {
    "coordinates": "rust:wepoll-ffi",
    "name": "wepoll-ffi",
    "description": "Bindings for the wepoll library",
    "license": [""],
    "tags": ["wepoll"],
    "downloads": 6175578,
    "repositories": ["crates.io"]
  },
  "rust:wgpu": {
    "coordinates": "rust:wgpu",
    "name": "wgpu",
    "description": "Rusty WebGPU API wrapper",
    "license": [""],
    "tags": ["graphics"],
    "downloads": 4238992,
    "repositories": ["crates.io"]
  },
  "rust:wgpu-core": {
    "coordinates": "rust:wgpu-core",
    "name": "wgpu-core",
    "description": "WebGPU core logic on wgpu-hal",
    "license": [""],
    "tags": ["graphics"],
    "downloads": 4365623,
    "repositories": ["crates.io"]
  },
  "rust:wgpu-hal": {
    "coordinates": "rust:wgpu-hal",
    "name": "wgpu-hal",
    "description": "WebGPU hardware abstraction layer",
    "license": [""],
    "tags": ["graphics"],
    "downloads": 3631622,
    "repositories": ["crates.io"]
  },
  "rust:wgpu-types": {
    "coordinates": "rust:wgpu-types",
    "name": "wgpu-types",
    "description": "WebGPU types",
    "license": [""],
    "tags": ["graphics"],
    "downloads": 4245780,
    "repositories": ["crates.io"]
  },
  "rust:whatlang": {
    "coordinates": "rust:whatlang",
    "name": "whatlang",
    "description": "Fast and lightweight language identification library for Rust.",
    "license": [""],
    "tags": ["text", "nlp", "lang", "whatlang", "language"],
    "downloads": 562334,
    "repositories": ["crates.io"]
  },
  "rust:whichlang": {
    "coordinates": "rust:whichlang",
    "name": "whichlang",
    "description": "A blazingly fast and lightweight language detection library for Rust.",
    "license": [""],
    "tags": ["whichlang", "lang", "text-processing", "nlp", "language"],
    "downloads": 14147,
    "repositories": ["crates.io"]
  },
  "rust:whisper-rs": {
    "coordinates": "rust:whisper-rs",
    "name": "whisper-rs",
    "description": "Rust bindings for whisper.cpp",
    "license": [""],
    "tags": [],
    "downloads": 14727,
    "repositories": ["crates.io"]
  },
  "rust:whisper-rs-sys": {
    "coordinates": "rust:whisper-rs-sys",
    "name": "whisper-rs-sys",
    "description": "Rust bindings for whisper.cpp (FFI bindings)",
    "license": [""],
    "tags": [],
    "downloads": 15725,
    "repositories": ["crates.io"]
  },
  "rust:wide": {
    "coordinates": "rust:wide",
    "name": "wide",
    "description": "A crate to help you go wide.",
    "license": [""],
    "tags": ["simd", "lokathor", "wide"],
    "downloads": 7001706,
    "repositories": ["crates.io"]
  },
  "rust:win32console": {
    "coordinates": "rust:win32console",
    "name": "win32console",
    "description": "Provides a wrapper to interact with the windows console from rust",
    "license": [""],
    "tags": ["console", "wincon", "crossterm-winapi", "winapi", "windows"],
    "downloads": 11831,
    "repositories": ["crates.io"]
  },
  "rust:winauth": {
    "coordinates": "rust:winauth",
    "name": "winauth",
    "description": "Windows Authentication in Rust (NTLMv2)",
    "license": [""],
    "tags": ["winauth", "sspi", "ntlm"],
    "downloads": 860070,
    "repositories": ["crates.io"]
  },
  "rust:window_clipboard": {
    "coordinates": "rust:window_clipboard",
    "name": "window_clipboard",
    "description": "A library to obtain clipboard access from a `raw-window-handle`",
    "license": [""],
    "tags": ["raw-window-handle", "clipboard", "gui", "window", "ui"],
    "downloads": 711400,
    "repositories": ["crates.io"]
  },
  "rust:windows-implement": {
    "coordinates": "rust:windows-implement",
    "name": "windows-implement",
    "description": "The implement macro for the windows crate",
    "license": [""],
    "tags": [],
    "downloads": 2204091,
    "repositories": ["crates.io"]
  },
  "rust:windows-interface": {
    "coordinates": "rust:windows-interface",
    "name": "windows-interface",
    "description": "The interface macro for the windows crate",
    "license": [""],
    "tags": [],
    "downloads": 1439056,
    "repositories": ["crates.io"]
  },
  "rust:windows-result": {
    "coordinates": "rust:windows-result",
    "name": "windows-result",
    "description": "Windows error handling",
    "license": [""],
    "tags": [],
    "downloads": 207471,
    "repositories": ["crates.io"]
  },
  "rust:windows-version": {
    "coordinates": "rust:windows-version",
    "name": "windows-version",
    "description": "Windows version information",
    "license": [""],
    "tags": [],
    "downloads": 233435,
    "repositories": ["crates.io"]
  },
  "rust:windows_i686_gnullvm": {
    "coordinates": "rust:windows_i686_gnullvm",
    "name": "windows_i686_gnullvm",
    "description": "Import lib for Windows",
    "license": [""],
    "tags": [],
    "downloads": 263737,
    "repositories": ["crates.io"]
  },
  "rust:winit": {
    "coordinates": "rust:winit",
    "name": "winit",
    "description": "Cross-platform window creation library.",
    "license": [""],
    "tags": ["windowing"],
    "downloads": 9445209,
    "repositories": ["crates.io"]
  },
  "rust:winresource": {
    "coordinates": "rust:winresource",
    "name": "winresource",
    "description": "Create and set windows icons and metadata for executables",
    "license": [""],
    "tags": [],
    "downloads": 183983,
    "repositories": ["crates.io"]
  },
  "rust:winsafe": {
    "coordinates": "rust:winsafe",
    "name": "winsafe",
    "description": "Windows API and GUI in safe, idiomatic Rust.",
    "license": [""],
    "tags": ["com", "windows", "gui", "win32", "ffi"],
    "downloads": 115195,
    "repositories": ["crates.io"]
  },
  "rust:wiremock": {
    "coordinates": "rust:wiremock",
    "name": "wiremock",
    "description": "HTTP mocking to test Rust applications.",
    "license": [""],
    "tags": ["mocking", "black-box", "test", "mock", "http"],
    "downloads": 5772839,
    "repositories": ["crates.io"]
  },
  "rust:wl-clipboard-rs": {
    "coordinates": "rust:wl-clipboard-rs",
    "name": "wl-clipboard-rs",
    "description": "Access to the Wayland clipboard for terminal and other window-less applications.",
    "license": [""],
    "tags": ["wayland", "clipboard"],
    "downloads": 521835,
    "repositories": ["crates.io"]
  },
  "rust:woothee": {
    "coordinates": "rust:woothee",
    "name": "woothee",
    "description": "user-agent strings parser",
    "license": [""],
    "tags": ["ua", "useragent"],
    "downloads": 2178521,
    "repositories": ["crates.io"]
  },
  "rust:write16": {
    "coordinates": "rust:write16",
    "name": "write16",
    "description": "A UTF-16 analog of the Write trait",
    "license": [""],
    "tags": ["utf-16", "unicode"],
    "downloads": 685094,
    "repositories": ["crates.io"]
  },
  "rust:writeable": {
    "coordinates": "rust:writeable",
    "name": "writeable",
    "description": "A more efficient alternative to fmt::Display",
    "license": [""],
    "tags": [],
    "downloads": 1405663,
    "repositories": ["crates.io"]
  },
  "rust:wry": {
    "coordinates": "rust:wry",
    "name": "wry",
    "description": "Cross-platform WebView rendering library",
    "license": [""],
    "tags": [],
    "downloads": 2048680,
    "repositories": ["crates.io"]
  },
  "rust:wu-diff": {
    "coordinates": "rust:wu-diff",
    "name": "wu-diff",
    "description": "Compute differences between two slices using wu(the O(NP)) algorithm.",
    "license": [""],
    "tags": ["diff", "lcs"],
    "downloads": 53635,
    "repositories": ["crates.io"]
  },
  "rust:wyhash": {
    "coordinates": "rust:wyhash",
    "name": "wyhash",
    "description": "Rust implementation of the WyHash fast portable non-cryptographic hashing algorithm and random number generator.",
    "license": [""],
    "tags": ["rng", "hasher", "wyhash", "random", "hash"],
    "downloads": 669092,
    "repositories": ["crates.io"]
  },
  "rust:x11": {
    "coordinates": "rust:x11",
    "name": "x11",
    "description": "X11 library bindings for Rust",
    "license": [""],
    "tags": [],
    "downloads": 3431717,
    "repositories": ["crates.io"]
  },
  "rust:x11-dl": {
    "coordinates": "rust:x11-dl",
    "name": "x11-dl",
    "description": "X11 library bindings for Rust",
    "license": [""],
    "tags": [],
    "downloads": 8599758,
    "repositories": ["crates.io"]
  },
  "rust:x11rb": {
    "coordinates": "rust:x11rb",
    "name": "x11rb",
    "description": "Rust bindings to X11",
    "license": [""],
    "tags": ["x11", "xcb"],
    "downloads": 5937736,
    "repositories": ["crates.io"]
  },
  "rust:x11rb-protocol": {
    "coordinates": "rust:x11rb-protocol",
    "name": "x11rb-protocol",
    "description": "Rust bindings to X11",
    "license": [""],
    "tags": ["x11", "xcb"],
    "downloads": 4283188,
    "repositories": ["crates.io"]
  },
  "rust:xcursor": {
    "coordinates": "rust:xcursor",
    "name": "xcursor",
    "description": "A library for loading XCursor themes",
    "license": [""],
    "tags": [],
    "downloads": 4877269,
    "repositories": ["crates.io"]
  },
  "rust:xdg": {
    "coordinates": "rust:xdg",
    "name": "xdg",
    "description": "A library for storing and retrieving files according to XDG Base Directory specification",
    "license": [""],
    "tags": ["linux", "configuration"],
    "downloads": 6349543,
    "repositories": ["crates.io"]
  },
  "rust:xdg-home": {
    "coordinates": "rust:xdg-home",
    "name": "xdg-home",
    "description": "The user''s home directory as per XDG Specification",
    "license": [""],
    "tags": ["home", "xdg"],
    "downloads": 2903877,
    "repositories": ["crates.io"]
  },
  "rust:xi-unicode": {
    "coordinates": "rust:xi-unicode",
    "name": "xi-unicode",
    "description": "Unicode utilities useful for text editing, including a line breaking iterator.",
    "license": [""],
    "tags": [],
    "downloads": 3522851,
    "repositories": ["crates.io"]
  },
  "rust:xkbcommon-dl": {
    "coordinates": "rust:xkbcommon-dl",
    "name": "xkbcommon-dl",
    "description": "Dynamically loaded xkbcommon and xkbcommon-x11 Rust bindings.",
    "license": [""],
    "tags": [],
    "downloads": 621400,
    "repositories": ["crates.io"]
  },
  "rust:xkeysym": {
    "coordinates": "rust:xkeysym",
    "name": "xkeysym",
    "description": "A library for working with X11 keysyms",
    "license": [""],
    "tags": ["keysyms", "keysym", "x11"],
    "downloads": 717892,
    "repositories": ["crates.io"]
  },
  "rust:xml5ever": {
    "coordinates": "rust:xml5ever",
    "name": "xml5ever",
    "description": "Push based streaming parser for xml",
    "license": [""],
    "tags": ["xml5", "parsing", "xml", "parser"],
    "downloads": 3081094,
    "repositories": ["crates.io"]
  },
  "rust:xmltree": {
    "coordinates": "rust:xmltree",
    "name": "xmltree",
    "description": "Parse an XML file into a simple tree-like structure",
    "license": [""],
    "tags": ["xmltree", "xml", "parse"],
    "downloads": 2803664,
    "repositories": ["crates.io"]
  },
  "rust:xmlwriter": {
    "coordinates": "rust:xmlwriter",
    "name": "xmlwriter",
    "description": "A simple, streaming XML writer.",
    "license": [""],
    "tags": ["xml"],
    "downloads": 1201904,
    "repositories": ["crates.io"]
  },
  "rust:xshell": {
    "coordinates": "rust:xshell",
    "name": "xshell",
    "description": "Utilities for quick shell scripting in Rust",
    "license": [""],
    "tags": [],
    "downloads": 3259126,
    "repositories": ["crates.io"]
  },
  "rust:xshell-macros": {
    "coordinates": "rust:xshell-macros",
    "name": "xshell-macros",
    "description": "Private implementation detail of xshell crate",
    "license": [""],
    "tags": [],
    "downloads": 3260470,
    "repositories": ["crates.io"]
  },
  "rust:xxhash-rust": {
    "coordinates": "rust:xxhash-rust",
    "name": "xxhash-rust",
    "description": "Implementation of xxhash",
    "license": [""],
    "tags": ["xxhash", "hasher", "no-std", "xxh3", "hash"],
    "downloads": 7913523,
    "repositories": ["crates.io"]
  },
  "rust:xz2": {
    "coordinates": "rust:xz2",
    "name": "xz2",
    "description": "Rust bindings to liblzma providing Read/Write streams as well as low-level in-memory encoding/decoding. ",
    "license": [""],
    "tags": ["xz", "lzma", "encoding"],
    "downloads": 9402765,
    "repositories": ["crates.io"]
  },
  "rust:yada": {
    "coordinates": "rust:yada",
    "name": "yada",
    "description": "Yada is a yet another double-array trie library aiming for fast search and compact data representation.",
    "license": [""],
    "tags": ["double-array", "trie", "search"],
    "downloads": 2280095,
    "repositories": ["crates.io"]
  },
  "rust:yamux": {
    "coordinates": "rust:yamux",
    "name": "yamux",
    "description": "Multiplexer over reliable, ordered connections",
    "license": [""],
    "tags": ["protocol", "network"],
    "downloads": 5714609,
    "repositories": ["crates.io"]
  },
  "rust:yap": {
    "coordinates": "rust:yap",
    "name": "yap",
    "description": "Yet Another Parser library. A lightweight, dependency free, parser combinator inspired set of utility methods to help with parsing strings and slices.",
    "license": [""],
    "tags": [],
    "downloads": 433466,
    "repositories": ["crates.io"]
  },
  "rust:yaup": {
    "coordinates": "rust:yaup",
    "name": "yaup",
    "description": "URL parameters serialization",
    "license": [""],
    "tags": ["url", "serialization", "serde"],
    "downloads": 210814,
    "repositories": ["crates.io"]
  },
  "rust:yazi": {
    "coordinates": "rust:yazi",
    "name": "yazi",
    "description": "DEFLATE/zlib compression and decompression.",
    "license": [""],
    "tags": ["zlib", "compression", "deflate", "decompression"],
    "downloads": 405547,
    "repositories": ["crates.io"]
  },
  "rust:yew": {
    "coordinates": "rust:yew",
    "name": "yew",
    "description": "A framework for creating reliable and efficient web applications",
    "license": [""],
    "tags": ["javascript", "webasm", "web"],
    "downloads": 1119718,
    "repositories": ["crates.io"]
  },
  "rust:yew-agent": {
    "coordinates": "rust:yew-agent",
    "name": "yew-agent",
    "description": "Agents for Yew",
    "license": [""],
    "tags": [],
    "downloads": 132328,
    "repositories": ["crates.io"]
  },
  "rust:yew-hooks": {
    "coordinates": "rust:yew-hooks",
    "name": "yew-hooks",
    "description": "Hooks for the Yew web framework, inspired by react hook libs like streamich/react-use and alibaba/hooks.",
    "license": [""],
    "tags": ["wasm", "yew", "react", "hooks"],
    "downloads": 121361,
    "repositories": ["crates.io"]
  },
  "rust:yew-macro": {
    "coordinates": "rust:yew-macro",
    "name": "yew-macro",
    "description": "A framework for making client-side single-page apps",
    "license": [""],
    "tags": ["webassembly", "frontend", "webasm", "wasm", "web"],
    "downloads": 1072756,
    "repositories": ["crates.io"]
  },
  "rust:yew-router": {
    "coordinates": "rust:yew-router",
    "name": "yew-router",
    "description": "A router implementation for the Yew framework",
    "license": [""],
    "tags": ["router", "yew", "web"],
    "downloads": 448409,
    "repositories": ["crates.io"]
  },
  "rust:yew-router-macro": {
    "coordinates": "rust:yew-router-macro",
    "name": "yew-router-macro",
    "description": "Contains macros used with yew-router",
    "license": [""],
    "tags": [],
    "downloads": 441085,
    "repositories": ["crates.io"]
  },
  "rust:yoke": {
    "coordinates": "rust:yoke",
    "name": "yoke",
    "description": "Abstraction allowing borrowed data to be carried along with the backing data it borrows from",
    "license": [""],
    "tags": [
      "lifetime",
      "serialization",
      "self-referential",
      "borrow",
      "zerocopy"
    ],
    "downloads": 1584272,
    "repositories": ["crates.io"]
  },
  "rust:yoke-derive": {
    "coordinates": "rust:yoke-derive",
    "name": "yoke-derive",
    "description": "Custom derive for the yoke crate",
    "license": [""],
    "tags": [
      "lifetime",
      "serialization",
      "self-referential",
      "borrow",
      "zerocopy"
    ],
    "downloads": 1426509,
    "repositories": ["crates.io"]
  },
  "rust:zbus": {
    "coordinates": "rust:zbus",
    "name": "zbus",
    "description": "API for D-Bus communication",
    "license": [""],
    "tags": ["d-bus", "dbus", "ipc"],
    "downloads": 8279663,
    "repositories": ["crates.io"]
  },
  "rust:zbus_macros": {
    "coordinates": "rust:zbus_macros",
    "name": "zbus_macros",
    "description": "proc-macros for zbus",
    "license": [""],
    "tags": ["d-bus", "dbus", "ipc"],
    "downloads": 8266880,
    "repositories": ["crates.io"]
  },
  "rust:zbus_names": {
    "coordinates": "rust:zbus_names",
    "name": "zbus_names",
    "description": "A collection of D-Bus bus names types",
    "license": [""],
    "tags": ["d-bus", "dbus", "ipc"],
    "downloads": 6405868,
    "repositories": ["crates.io"]
  },
  "rust:zeno": {
    "coordinates": "rust:zeno",
    "name": "zeno",
    "description": "High performance, low level 2D path rasterization.",
    "license": [""],
    "tags": ["path", "svg", "rasterizer"],
    "downloads": 391675,
    "repositories": ["crates.io"]
  },
  "rust:zerofrom": {
    "coordinates": "rust:zerofrom",
    "name": "zerofrom",
    "description": "ZeroFrom trait for constructing",
    "license": [""],
    "tags": ["zerocopy", "serialization", "lifetime", "borrow"],
    "downloads": 1444553,
    "repositories": ["crates.io"]
  },
  "rust:zerofrom-derive": {
    "coordinates": "rust:zerofrom-derive",
    "name": "zerofrom-derive",
    "description": "Custom derive for the zerofrom crate",
    "license": [""],
    "tags": ["serialization", "zerocopy", "lifetime", "borrow"],
    "downloads": 1234410,
    "repositories": ["crates.io"]
  },
  "rust:zerovec": {
    "coordinates": "rust:zerovec",
    "name": "zerovec",
    "description": "Zero-copy vector backed by a byte array",
    "license": [""],
    "tags": ["serde", "zero-copy", "serialization", "zerocopy"],
    "downloads": 1349540,
    "repositories": ["crates.io"]
  },
  "rust:zerovec-derive": {
    "coordinates": "rust:zerovec-derive",
    "name": "zerovec-derive",
    "description": "Custom derive for the zerovec crate",
    "license": [""],
    "tags": ["serde", "serialization", "zero-copy", "zerocopy"],
    "downloads": 1077080,
    "repositories": ["crates.io"]
  },
  "rust:zune-core": {
    "coordinates": "rust:zune-core",
    "name": "zune-core",
    "description": "Core utilities for image processing in the zune family of crates",
    "license": [""],
    "tags": ["image"],
    "downloads": 412867,
    "repositories": ["crates.io"]
  },
  "rust:zune-inflate": {
    "coordinates": "rust:zune-inflate",
    "name": "zune-inflate",
    "description": "A heavily optimized deflate decompressor in Pure Rust",
    "license": [""],
    "tags": ["inflate", "deflate", "compression"],
    "downloads": 4872925,
    "repositories": ["crates.io"]
  },
  "rust:zune-jpeg": {
    "coordinates": "rust:zune-jpeg",
    "name": "zune-jpeg",
    "description": "A fast, correct and safe jpeg decoder",
    "license": [""],
    "tags": ["jpeg-decoder", "jpeg", "decoder"],
    "downloads": 409221,
    "repositories": ["crates.io"]
  },
  "rust:zvariant": {
    "coordinates": "rust:zvariant",
    "name": "zvariant",
    "description": "D-Bus & GVariant encoding & decoding",
    "license": [""],
    "tags": ["gvariant", "d-bus", "dbus", "ipc"],
    "downloads": 8359926,
    "repositories": ["crates.io"]
  },
  "rust:zvariant_derive": {
    "coordinates": "rust:zvariant_derive",
    "name": "zvariant_derive",
    "description": "D-Bus & GVariant encoding & decoding",
    "license": [""],
    "tags": ["gvariant", "d-bus", "dbus", "ipc"],
    "downloads": 8356857,
    "repositories": ["crates.io"]
  },
  "rust:zvariant_utils": {
    "coordinates": "rust:zvariant_utils",
    "name": "zvariant_utils",
    "description": "Various utilities used internally by the zvariant crate.",
    "license": [""],
    "tags": ["gvariant", "dbus", "d-bus", "ipc"],
    "downloads": 4003003,
    "repositories": ["crates.io"]
  }
}
